import { useEffect, useState } from "react";
import { BigNumber, ethers, getTransactionReceipt } from "ethers";
import { base58_to_binary } from "base58-js";
import { parse, parseSequenceFromLogEth, getEmitterAddressEth } from "@certusone/wormhole-sdk";

const abi = {
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wormhole",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenBridge",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "consistencyLevel",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "pythAddress",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "oracleMode",
          "type": "uint8"
        },
        {
          "internalType": "uint64",
          "name": "priceStandardDeviations",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "priceStandardDeviationsPrecision",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "maxLiquidationBonus",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLiquidationPortion",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLiquidationPortionPrecision",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestAccrualIndexPrecision",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralizationRatioPrecision",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedMessage",
          "type": "bytes"
        }
      ],
      "name": "completeBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedMessage",
          "type": "bytes"
        }
      ],
      "name": "completeDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedMessage",
          "type": "bytes"
        }
      ],
      "name": "completeRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedMessage",
          "type": "bytes"
        }
      ],
      "name": "completeWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "normalizedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestAccrualIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum HubSpokeStructs.Round",
          "name": "round",
          "type": "uint8"
        }
      ],
      "name": "denormalizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        }
      ],
      "name": "getAssetInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateralizationRatioDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralizationRatioBorrow",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "pythId",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "ratePrecision",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256[]",
                  "name": "kinks",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "rates",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reservePrecision",
                  "type": "uint256"
                }
              ],
              "internalType": "struct HubSpokeStructs.PiecewiseInterestRateModel",
              "name": "interestRateModel",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct HubSpokeStructs.AssetInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        }
      ],
      "name": "getGlobalBalance",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deposited",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowed",
              "type": "uint256"
            }
          ],
          "internalType": "struct HubSpokeStructs.VaultAmount",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInterestAccrualIndexPrecision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        }
      ],
      "name": "getInterestAccrualIndices",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deposited",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowed",
              "type": "uint256"
            }
          ],
          "internalType": "struct HubSpokeStructs.AccrualIndices",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        }
      ],
      "name": "getUserBalance",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deposited",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowed",
              "type": "uint256"
            }
          ],
          "internalType": "struct HubSpokeStructs.VaultAmount",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "assetRepayAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "assetRepayAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "assetReceiptAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "assetReceiptAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "liquidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "denormalizedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestAccrualIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum HubSpokeStructs.Round",
          "name": "round",
          "type": "uint8"
        }
      ],
      "name": "normalizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralizationRatioDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralizationRatioBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "ratePrecision",
          "type": "uint64"
        },
        {
          "internalType": "uint256[]",
          "name": "kinks",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "reserveFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservePrecision",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "pythId",
          "type": "bytes32"
        }
      ],
      "name": "registerAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "spokeContractAddress",
          "type": "address"
        }
      ],
      "name": "registerSpoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "int64",
          "name": "price",
          "type": "int64"
        },
        {
          "internalType": "uint64",
          "name": "conf",
          "type": "uint64"
        },
        {
          "internalType": "int32",
          "name": "expo",
          "type": "int32"
        },
        {
          "internalType": "int64",
          "name": "emaPrice",
          "type": "int64"
        },
        {
          "internalType": "uint64",
          "name": "emaConf",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "publishTime",
          "type": "uint64"
        }
      ],
      "name": "setMockPythFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oracleId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "int64",
              "name": "price",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "conf",
              "type": "uint64"
            },
            {
              "internalType": "int32",
              "name": "expo",
              "type": "int32"
            },
            {
              "internalType": "uint256",
              "name": "publishTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct HubSpokeStructs.Price",
          "name": "price",
          "type": "tuple"
        }
      ],
      "name": "setOraclePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "446:16449:15:-:0;;;3174:1571;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;719:10:6;936:18:1;:32::i;:::-;3798:7:15;3765:29;:40;;3757:49;;;;;;3859:7;3824:31;:42;;3816:51;;;;;;3919:7;3885:30;:41;;3877:50;;;;;;3981:7;3945:32;-1:-1:-1;;;;;3945:43:15;;;3937:52;;;;;;546:6:20;:51;;-1:-1:-1;;;;;;546:51:20;;-1:-1:-1;;;;;546:51:20;;;;;;681:27;:48;;-1:-1:-1;;;;;;681:48:20;-1:-1:-1;;;;;681:48:20;;;;;799:20;:41;;-1:-1:-1;;;;;;799:41:20;-1:-1:-1;;;;;799:41:20;;;;;913:17;:30;;-1:-1:-1;;;;913:30:20;-1:-1:-1;;;913:30:20;;;;;;;1028:23;:42;;-1:-1:-1;;1028:42:20;;;;;;;4180:63:15;4213:29;3251:36:20;:68;3151:175;4180:63:15;4253:67;4288:31;3436:38:20;:72;3332:183;4253:67:15;4330:43;4353:19;3709:26:20;:48;3629:135;4330:43:15;4435:47;4460:21;4195:28:20;:52;4111:143;4435:47:15;4492:65;4526:30;4362:37:20;:70;4260:179;4492:65:15;4567:31;4579:15;4596:1;4567:11;:31::i;:::-;4718:30:20;:56;;-1:-1:-1;;;;;;4718:56:20;-1:-1:-1;;;;;4718:56:20;;;;;4892:39;:74;;-1:-1:-1;;;;;;;;4892:74:20;;-1:-1:-1;;;;;4892:74:20;;;;;;3174:1571:15;;;;;;;;;;;;446:16449;;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;4445:180:20:-;4580:15;4597:20;4567:51;;;;;:::i;:::-;1744:25:34;;;1800:2;1785:18;;1778:34;1732:2;1717:18;4567:51:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4540:24:20;:78;;-1:-1:-1;;;;;;4540:78:20;-1:-1:-1;;;;;4540:78:20;;;;;;;;;;-1:-1:-1;;4445:180:20:o;446:16449:15:-;;;;;;;;:::o;14:177:34:-;93:13;;-1:-1:-1;;;;;135:31:34;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:160::-;273:13;;326:4;315:16;;305:27;;295:55;;346:1;343;336:12;361:175;439:13;;-1:-1:-1;;;;;481:30:34;;471:41;;461:69;;526:1;523;516:12;541:1024;704:6;712;720;728;736;744;752;760;768;776;784:7;793;847:3;835:9;826:7;822:23;818:33;815:53;;;864:1;861;854:12;815:53;887:40;917:9;887:40;:::i;:::-;877:50;;946:49;991:2;980:9;976:18;946:49;:::i;:::-;936:59;;1014:47;1057:2;1046:9;1042:18;1014:47;:::i;:::-;1004:57;;1080:49;1125:2;1114:9;1110:18;1080:49;:::i;:::-;1070:59;;1148:48;1191:3;1180:9;1176:19;1148:48;:::i;:::-;1138:58;;1215:49;1259:3;1248:9;1244:19;1215:49;:::i;:::-;1205:59;;1283:49;1327:3;1316:9;1312:19;1283:49;:::i;:::-;1273:59;;1372:3;1361:9;1357:19;1351:26;1341:36;;1417:3;1406:9;1402:19;1396:26;1386:36;;1462:3;1451:9;1447:19;1441:26;1431:36;;1508:3;1497:9;1493:19;1487:26;1476:37;;1554:3;1543:9;1539:19;1533:26;1522:37;;541:1024;;;;;;;;;;;;;;:::o;1570:248::-;446:16449:15;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "446:16449:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4937:268:18;;;;;;:::i;:::-;;:::i;:::-;;;567:25:34;;;555:2;540:18;4937:268:18;;;;;;;;13286:1589:15;;;;;;:::i;:::-;;:::i;:::-;;9337:116;;;;;;:::i;:::-;;:::i;10080:112::-;;;;;;:::i;:::-;;:::i;5587:541:18:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6464:512::-;;;;;;:::i;:::-;;:::i;4979:127:20:-;;;;;;:::i;:::-;;:::i;1831:101:1:-;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:1;;;7474:51:34;;7462:2;7447:18;1201:85:1;7328:203:34;6652:1603:15;;;;;;:::i;:::-;;:::i;2797:134:17:-;2888:36;;2797:134;;1775:138;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4277:270:18:-;;;;;;:::i;:::-;;:::i;8547:155:15:-;;;;;;:::i;:::-;;:::i;5112:524:20:-;;;;;;:::i;:::-;;:::i;2638:153:17:-;;;;;;:::i;:::-;;:::i;2081:198:1:-;;;;;;:::i;:::-;;:::i;4937:268:18:-;5078:7;5108:90;5115:39;5134:20;5115:16;:39;:::i;:::-;2888:36:17;;5192:5:18;5108:6;:90::i;:::-;5101:97;;4937:268;;;;;;:::o;13286:1589:15:-;13574:111;13602:19;13623:17;13642:21;13665:19;13574:27;:111::i;:::-;13746:136;13783:5;13790:19;13811:17;13830:21;13853:19;13746:23;:136::i;:::-;13962:9;13957:163;13981:19;:26;13977:1;:30;13957:163;;;14028:81;14043:12;14057:5;14064:19;14084:1;14064:22;;;;;;;;:::i;:::-;;;;;;;14088:17;14106:1;14088:20;;;;;;;;:::i;:::-;;;;;;;14028:14;:81::i;:::-;14009:3;;;;:::i;:::-;;;;13957:163;;;;14202:9;14197:172;14221:21;:28;14217:1;:32;14197:172;;;14270:88;14285:15;14302:5;14309:21;14331:1;14309:24;;;;;;;;:::i;:::-;;;;;;;14335:19;14355:1;14335:22;;;;;;;;:::i;14270:88::-;14251:3;;;;:::i;:::-;;;;14197:172;;;;14441:9;14436:189;14460:19;:26;14456:1;:30;14436:189;;;14507:107;14541:19;14561:1;14541:22;;;;;;;;:::i;:::-;;;;;;;14566:10;14586:4;14593:17;14611:1;14593:20;;;;;;;;:::i;:::-;;;;;;;14507:26;:107::i;:::-;14488:3;;;;:::i;:::-;;;;14436:189;;;;14698:9;14693:176;14717:21;:28;14713:1;:32;14693:176;;;14766:92;14796:21;14818:1;14796:24;;;;;;;;:::i;:::-;;;;;;;14823:10;14835:19;14855:1;14835:22;;;;;;;;:::i;:::-;;;;;;;14766;:92::i;:::-;14747:3;;;;:::i;:::-;;;;14693:176;;;;13286:1589;;;;;:::o;9337:116::-;9409:37;9424:14;9440:5;9409:14;:37::i;:::-;;;9337:116;:::o;10080:112::-;10149:36;10164:14;10180:4;10149:14;:36::i;5587:541:18:-;-1:-1:-1;;;;;;;;;;;;;;;;;5704:29:18;5736:41;5752:10;5764:12;5736:15;:41::i;:::-;5704:73;;5787:42;5832:38;5857:12;5832:24;:38::i;:::-;5787:83;;5887:234;;;;;;;;5924:83;5942:10;:20;;;5964;:30;;;5996:10;5924:17;:83::i;:::-;5887:234;;;;6031:79;6049:10;:19;;;6070:20;:29;;;6101:8;6031:17;:79::i;:::-;5887:234;;5880:241;-1:-1:-1;;;5587:541:18;;;;;:::o;6464:512::-;-1:-1:-1;;;;;;;;;;;;;;;;;6563:29:18;6595:30;6612:12;6595:16;:30::i;:::-;6563:62;;6635:42;6680:38;6705:12;6680:24;:38::i;:::-;6635:83;;6735:234;;;;;;;;6772:83;6790:10;:20;;;6812;:30;;;6844:10;6772:17;:83::i;:::-;6735:234;;;;6879:79;6897:10;:19;;;6918:20;:29;;;6949:8;6879:17;:79::i;:::-;6735:234;;6728:241;6464:512;-1:-1:-1;;;;6464:512:18:o;4979:127:20:-;1094:13:1;:11;:13::i;:::-;5068:23:20::1;::::0;;;:13;:23:::1;::::0;;;;;;;;:31;;;;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5068:31:20;;;-1:-1:-1;;5068:31:20;;;;;;;-1:-1:-1;;;5068:31:20;;;::::1;;::::0;;;::::1;-1:-1:-1::0;;;;5068:31:20::1;-1:-1:-1::0;;;5068:31:20::1;::::0;;;;;;::::1;;::::0;;::::1;;::::0;-1:-1:-1;5068:31:20;;::::1;::::0;4979:127::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6652:1603:15:-;1094:13:1;:11;:13::i;:::-;7014:31:15::1;7048:26;7061:12;7048;:26::i;:::-;7014:60;;7093:14;:21;;;7092:22;7084:59;;;::::0;-1:-1:-1;;;7084:59:15;;13011:2:34;7084:59:15::1;::::0;::::1;12993:21:34::0;13050:2;13030:18;;;13023:30;13089:26;13069:18;;;13062:54;13133:18;;7084:59:15::1;;;;;;;;;2763:16:20::0;:35;;:6;:35;;;;-1:-1:-1;2763:35:20;;;;;;;;-1:-1:-1;;;;;;2763:35:20;-1:-1:-1;;;;;2763:35:20;;;;;7243:222:15::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;7243:222:15;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;7535:37;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;7535:37:15::1;-1:-1:-1::0;;;7535:37:15::1;::::0;;7511:62;;7243:222;;7189:51:::1;::::0;-1:-1:-1;;;;;7511:23:15;::::1;::::0;:62:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7476:97;;;7583:14;7611:15;7600:36;;;;;;;;;;;;:::i;:::-;7583:53;;7661:2;7650:8;:13;;;7646:57;;;-1:-1:-1::0;7690:2:15::1;7646:57;7737:7;7720:13;-1:-1:-1::0;;;;;7720:24:15::1;;;7712:33;;;::::0;::::1;;7783:7;7763:16;:27;;7755:36;;;::::0;::::1;;7826:303;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;8114:4:::1;7826:303:::0;;;;8140:37:::1;8158:12:::0;7826:303;8140:17:::1;:37::i;:::-;-1:-1:-1::0;;;;;2915:48:20;;;;;;:34;:48;;;;;8232:15:15::1;2915:65:20::0;;7004:1251:15::1;;;;;6652:1603:::0;;;;;;;;;:::o;1775:138:17:-;1840:16;;:::i;:::-;-1:-1:-1;;;;;1875:31:17;;;;;;:17;:31;;;;;;;;;1868:38;;;;;;;;;;;1875:6;1868:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1868:38:17;;;;;;;;;;;;;;;;;;;;;;;;;1875:31;;1868:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1868:38:17;;;-1:-1:-1;;1868:38:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1775:138;-1:-1:-1;;1775:138:17:o;4277:270:18:-;4418:7;4448:92;4476:34;2888:36:17;;;2797:134;4476:34:18;4455:55;;:18;:55;:::i;:::-;4512:20;4534:5;4448:6;:92::i;8547:155:15:-;1094:13:1;:11;:13::i;:::-;1179:30:20;;;;;;;:21;:30;;;;;:53;;-1:-1:-1;;;;;;1179:53:20;-1:-1:-1;;;;;1179:53:20;;;;;8547:155:15;;:::o;8643:52::-:1;8547:155:::0;;:::o;5112:524:20:-;1094:13:1;:11;:13::i;:::-;5369:24:20;;;:105:::1;::::0;-1:-1:-1;;;5369:105:20;;;;::::1;14375:25:34::0;;;14447:1;14436:21;;;14416:18;;;14409:49;-1:-1:-1;;;;;14531:15:34;;;14511:18;;;14504:43;14594:1;14583:21;;;14563:18;;;14556:49;14642:21;;;;14621:19;;;14614:50;14701:15;;;14680:19;;;14673:44;14754:15;;14733:19;;;14726:44;5328:26:20::1;::::0;-1:-1:-1;;;;;5369:24:20;;::::1;::::0;:50:::1;::::0;14347:19:34;;5369:105:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;5369:105:20::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;5513:14;::::0;;5525:1:::1;5513:14:::0;;;;;::::1;::::0;;;5328:146;;-1:-1:-1;5485:25:20::1;::::0;5513:14;::::1;;;;;;;;;;;;;;;;;;;;5485:42;;5553:13;5537:10;5548:1;5537:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:29;5576:24;;;:53:::1;::::0;-1:-1:-1;;;5576:53:20;;-1:-1:-1;;;;;5576:24:20;;::::1;::::0;:41:::1;::::0;:53:::1;::::0;5618:10;;5576:53:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5318:318;;5112:524:::0;;;;;;;:::o;2638:153:17:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;2756:28:17;;;;;:14;:28;;;;;;;;;2749:35;;;;;;;;;;;;2756:6;2749:35;;;;;;;2638:153::o;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;16823:2:34;2161:73:1::1;::::0;::::1;16805:21:34::0;16862:2;16842:18;;;16835:30;16901:34;16881:18;;;16874:62;-1:-1:-1;;;16952:18:34;;;16945:36;16998:19;;2161:73:1::1;16621:402:34::0;2161:73:1::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;7274:313:18:-;7361:7;;7397:18;7408:7;7397:8;:18;:::i;:::-;7380:35;-1:-1:-1;7425:16:18;7444:18;7455:7;7444:8;:18;:::i;:::-;7425:37;-1:-1:-1;7476:11:18;;;:34;;-1:-1:-1;7500:10:18;7491:5;:19;;;;;;;;:::i;:::-;;7476:34;7472:80;;;7533:8;-1:-1:-1;7526:15:18;;-1:-1:-1;7526:15:18;7472:80;7568:12;:8;7579:1;7568:12;:::i;:::-;7561:19;7274:313;-1:-1:-1;;;;;;7274:313:18:o;10805:833:16:-;11061:9;11056:123;11080:19;:26;11076:1;:30;11056:123;;;11127:41;11145:19;11165:1;11145:22;;;;;;;;:::i;:::-;;;;;;;11127:17;:41::i;:::-;11108:3;;;;:::i;:::-;;;;11056:123;;;;11193:9;11188:127;11212:21;:28;11208:1;:32;11188:127;;;11261:43;11279:21;11301:1;11279:24;;;;;;;;:::i;11261:43::-;11242:3;;;;:::i;:::-;;;;11188:127;;;;11324:36;11340:19;11324:15;:36::i;:::-;11370:38;11386:21;11370:15;:38::i;:::-;11457:17;:24;11427:19;:26;:54;11419:99;;;;-1:-1:-1;;;11419:99:16;;17869:2:34;11419:99:16;;;17851:21:34;;;17888:18;;;17881:30;17947:34;17927:18;;;17920:62;17999:18;;11419:99:16;17667:356:34;11419:99:16;11568:19;:26;11536:21;:28;:58;11528:103;;;;-1:-1:-1;;;11528:103:16;;17869:2:34;11528:103:16;;;17851:21:34;;;17888:18;;;17881:30;17947:34;17927:18;;;17920:62;17999:18;;11528:103:16;17667:356:34;11528:103:16;10805:833;;;;:::o;6053:2918::-;6329:27;6358:26;6388:44;6415:10;6427:4;6388:26;:44::i;:::-;6328:104;;;;6473:18;6451:19;:40;6443:73;;;;-1:-1:-1;;;6443:73:16;;18230:2:34;6443:73:16;;;18212:21:34;18269:2;18249:18;;;18242:30;-1:-1:-1;;;18288:18:34;;;18281:50;18348:18;;6443:73:16;18028:344:34;6443:73:16;6530:30;6564:45;6591:10;6603:5;6564:26;:45::i;:::-;6527:82;;;6620:22;6656:24;6700:9;6695:643;6719:19;:26;6715:1;:30;6695:643;;;6766:13;6782:19;6802:1;6782:22;;;;;;;;:::i;:::-;;;;;;;6766:38;;6818:29;6850:32;6876:5;6850:25;:32::i;:::-;6818:64;;6897:26;6926:19;6939:5;6926:12;:19::i;:::-;6897:48;;6960:24;6987:67;7003:17;7021:1;7003:20;;;;;;;;:::i;:::-;;;;;;;7025:7;:16;;;7043:10;6987:15;:67::i;:::-;6960:94;;7077:55;7092:10;7104:5;7111:17;7129:1;7111:20;;;;;;;;:::i;:::-;;;;;;;7077:14;:55::i;:::-;7069:108;;;;-1:-1:-1;;;7069:108:16;;18579:2:34;7069:108:16;;;18561:21:34;18618:2;18598:18;;;18591:30;18657:34;18637:18;;;18630:62;-1:-1:-1;;;18708:18:34;;;18701:38;18756:19;;7069:108:16;18377:404:34;7069:108:16;7308:18;;;;3010:19:17;;;;7289:37:16;;;;:::i;:::-;7282:45;;:2;:45;:::i;:::-;7264:15;7273:5;7264:8;:15::i;:::-;-1:-1:-1;;;;;7226:53:16;7245:7;:16;;;7226;:35;;;;:::i;:::-;:53;;;;:::i;:::-;:101;;;;:::i;:::-;7192:135;;;;:::i;:::-;;;6752:586;;;;6747:3;;;;;:::i;:::-;;;;6695:643;;;;7353:9;7348:741;7372:21;:28;7368:1;:32;7348:741;;;7421:13;7437:21;7459:1;7437:24;;;;;;;;:::i;:::-;;;;;;;7421:40;;7475:29;7507:32;7533:5;7507:25;:32::i;:::-;7475:64;;7554:26;7583:19;7596:5;7583:12;:19::i;:::-;7554:48;;7617:24;7644:140;7677:19;7697:1;7677:22;;;;;;;;:::i;:::-;;;;;;;7727:7;:17;;;7762:8;7644:15;:140::i;:::-;7617:167;;7799:56;7819:10;7831:5;7838:16;7799:19;:56::i;:::-;7870:55;7901:5;7908:16;7870:30;:55::i;:::-;8059:18;;;;3010:19:17;;;;8040:37:16;;;;:::i;:::-;8033:45;;:2;:45;:::i;:::-;8015:15;8024:5;8015:8;:15::i;:::-;-1:-1:-1;;;;;7976:54:16;7995:7;:17;;;7976:16;:36;;;;:::i;:::-;:54;;;;:::i;:::-;:102;;;;:::i;:::-;7940:138;;;;:::i;:::-;;;7407:682;;;;7402:3;;;;;:::i;:::-;;;;7348:741;;;;8226:14;8206:16;:34;;8198:94;;;;-1:-1:-1;;;8198:94:16;;20571:2:34;8198:94:16;;;20553:21:34;20610:2;20590:18;;;20583:30;20649:34;20629:18;;;20622:62;-1:-1:-1;;;20700:18:34;;;20693:45;20755:19;;8198:94:16;20369:411:34;8198:94:16;3593:37:17;;8515:22:16;8486:26;3458:28:17;;;3373:120;8486:26:16;:51;;;;:::i;:::-;8485:91;;;;:::i;:::-;8450:14;:126;;8429:259;;;;-1:-1:-1;;;8429:259:16;;20987:2:34;8429:259:16;;;20969:21:34;21026:2;21006:18;;;20999:30;21065:34;21045:18;;;21038:62;21136:34;21116:18;;;21109:62;-1:-1:-1;;;21187:19:34;;;21180:53;21250:19;;8429:259:16;20785:490:34;8429:259:16;1338:38:17;;8849:14:16;8822:24;1204:26:17;;;1121:116;8822:24:16;:41;;;;:::i;:::-;8821:82;;;;:::i;:::-;8801:16;:102;;8780:184;;;;-1:-1:-1;;;8780:184:16;;21482:2:34;8780:184:16;;;21464:21:34;21521:2;21501:18;;;21494:30;21560:34;21540:18;;;21533:62;-1:-1:-1;;;21611:18:34;;;21604:33;21654:19;;8780:184:16;21280:399:34;8780:184:16;6318:2653;;;;;6053:2918;;;;;:::o;15272:1621:15:-;15396:31;15430:36;15446:5;15453:12;15430:15;:36::i;:::-;15396:70;;15476:32;15511:30;15528:12;15511:16;:30::i;:::-;15476:65;;15552:29;15584:39;15610:12;15584:25;:39::i;:::-;15552:71;-1:-1:-1;15648:14:15;15638:6;:24;;;;;;;;:::i;:::-;;15634:1137;;15678:25;15706:54;15722:6;15730:7;:17;;;15749:10;15706:15;:54::i;:::-;15678:82;;15800:17;15774:12;:22;;:43;;;;;;;:::i;:::-;;;-1:-1:-1;15831:44:15;;15858:17;;15831:13;;:44;;15858:17;;15831:44;:::i;:::-;;;-1:-1:-1;15634:1137:15;;-1:-1:-1;15634:1137:15;;15906:15;15896:6;:25;;;;;;;;:::i;:::-;;15892:879;;15937:26;15966:52;15982:6;15990:7;:17;;;16009:8;15966:15;:52::i;:::-;15937:81;;16058:18;16032:12;:22;;:44;;;;;;;:::i;:::-;;;-1:-1:-1;16090:45:15;;16117:18;;16090:13;;:45;;16117:18;;16090:45;:::i;15892:879::-;16166:13;16156:6;:23;;;;;;;;:::i;:::-;;16152:619;;16195:24;16222:51;16238:6;16246:7;:16;;;16264:8;16222:15;:51::i;:::-;16195:78;;16312:16;16287:12;:21;;:41;;;;;;;:::i;:::-;;;-1:-1:-1;16342:22:15;;;:42;;16368:16;;16342:22;:42;;16368:16;;16342:42;:::i;16152:619::-;16415:12;16405:6;:22;;;;;;;;:::i;:::-;;16401:370;;16443:23;16469:53;16485:6;16493:7;:16;;;16511:10;16469:15;:53::i;:::-;16443:79;;16557:12;:21;;;16539:15;:39;16536:116;;;-1:-1:-1;16616:21:15;;;;16536:116;16690:15;16665:12;:21;;:40;;;;;;;:::i;:::-;;;-1:-1:-1;16719:22:15;;;:41;;16745:15;;16719:22;:41;;16745:15;;16719:41;:::i;:::-;;;-1:-1:-1;;16401:370:15;-1:-1:-1;;;;;;3888:24:20;;;;;;;:12;:24;;;;;;;;:38;;;;;;;;;;;;:52;;;;;;;;:6;:52;;;;4052:18;:32;;;;;;:46;;;;;;;;;;;;;;;;;-1:-1:-1;;15272:1621:15:o;974:241:4:-;1139:68;;-1:-1:-1;;;;;22072:15:34;;;1139:68:4;;;22054:34:34;22124:15;;22104:18;;;22097:43;22156:18;;;22149:34;;;1112:96:4;;1132:5;;-1:-1:-1;;;1162:27:4;21989:18:34;;1139:68:4;;;;-1:-1:-1;;1139:68:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:4;-1:-1:-1;;;;;;1139:68:4;;;;;;;;;;1112:19;:96::i;763:205::-;902:58;;-1:-1:-1;;;;;22386:32:34;;902:58:4;;;22368:51:34;22435:18;;;22428:34;;;875:86:4;;895:5;;-1:-1:-1;;;925:23:4;22341:18:34;;902:58:4;22194:274:34;10679:1794:15;10793:14;10809:15;10840:33;10883:26;10912:33;10930:14;10912:17;:33::i;:::-;10883:62;;10960:20;10956:317;;;11019:69;11053:34;11072:14;11053:18;:34::i;:::-;11019:33;:69::i;:::-;10996:92;;10956:317;;;11119:92;11139:6;:21;;;11186:6;:21;;;11178:30;;11119:19;:92::i;:::-;11248:6;:14;;;11225:37;;10956:317;11283:27;11313:41;11333:20;11313:19;:41::i;:::-;11387:13;;11430:19;;;;11283:71;;-1:-1:-1;11387:13:15;11412:38;;:17;:38::i;:::-;11472:4;11460:16;;11486:27;11532:41;11553:6;:19;;;11532:20;:41::i;:::-;11598:15;11588:6;:25;;;;;;;;:::i;:::-;;11584:588;;11629:78;11652:6;:13;;;11667:6;:19;;;11688:6;:18;;;11629:22;:78::i;:::-;-1:-1:-1;11746:4:15;11584:588;;;11781:13;11771:6;:23;;;;;;;;:::i;:::-;;11767:405;;11810:76;11831:6;:13;;;11846:6;:19;;;11867:6;:18;;;11810:20;:76::i;11767:405::-;11960:12;11950:6;:22;;;;;;;;:::i;:::-;;11946:226;;12000:70;12015:6;:13;;;12030:6;:19;;;12051:6;:18;;;12000:14;:70::i;:::-;11988:82;;12089:9;12084:78;;-1:-1:-1;12143:4:15;12084:78;12186:9;12182:118;;;12211:78;12226:6;12234;:13;;;12249:6;:19;;;12270:6;:18;;;12211:14;:78::i;:::-;12314:22;12310:157;;;12363:93;12378:6;:13;;;12393:6;:19;;;12414:6;:18;;;12434:6;:21;;;12363:14;:93::i;:::-;12352:104;;12310:157;10830:1643;;;;;10679:1794;;;;;:::o;3042:172:17:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3169:24:17;;;;;:12;:24;;;;;:38;;;;;;;;;;;;;3162:45;;;;;;;;;;;;3169:6;3162:45;;;;;;;3042:172::o;1109:1265:18:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2029:48:17;;;;:34;:48;;;;;;-1:-1:-1;;1336:44:18;2029:48:17;1336:15:18;:44;:::i;:::-;1311:69;;1390:17;1410:37;1434:12;-1:-1:-1;;;;;2194:32:17;2168:7;2194:32;;;:18;:32;;;;;:42;;2090:153;1410:37:18;1390:57;;1457:36;1496:39;1522:12;1496:25;:39::i;:::-;1457:78;-1:-1:-1;1550:19:18;;;;;1549:41;;-1:-1:-1;1575:14:18;;;1549:41;1545:792;;;-1:-1:-1;;;;;2352:32:17;;1606:16:18;2352:32:17;;;:18;:32;;;;;:6;:41;;;1729:34:18;2352:32:17;1729:20:18;:34::i;:::-;1675:88;;1777:22;1802:83;1830:14;1846:9;1857:8;1867:17;1802:27;:83::i;:::-;1777:108;;1899:26;1928;1941:12;1928;:26::i;:::-;1992:27;;;;;:41;;;;2074:44;;;2132:23;;;:41;;1899:55;;-1:-1:-1;1992:41:18;;2074:44;;2159:14;;2132:41;;2159:14;;2132:41;:::i;:::-;;;-1:-1:-1;2317:9:18;2298:16;2286:8;2250:32;2269:13;2298:16;2250:32;:::i;:::-;2232:51;;:14;:51;:::i;:::-;:62;;;;:::i;:::-;2231:83;;;;:::i;:::-;:95;;;;:::i;:::-;2187:139;;:14;;:139;;;;;:::i;:::-;;;-1:-1:-1;;;;;;;1545:792:18;2353:14;1109:1265;-1:-1:-1;;;;;1109:1265:18:o;3220:147:17:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3328:32:17;;;;;:18;:32;;;;;;;;;3321:39;;;;;;;;;;;;3328:6;3321:39;;;;;;;3220:147::o;1359:130:1:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;719:10:6;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;22675:2:34;1414:68:1;;;22657:21:34;;;22694:18;;;22687:30;22753:34;22733:18;;;22726:62;22805:18;;1414:68:1;22473:356:34;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1245:1337:20:-;1361:22;;;;:28;;;;1424;;;;;1472:12;;1503;;1534:6;;;1526:64;;;;-1:-1:-1;;;1526:64:20;;23036:2:34;1526:64:20;;;23018:21:34;23075:2;23055:18;;;23048:30;23114:34;23094:18;;;23087:62;-1:-1:-1;;;23165:18:34;;;23158:43;23218:19;;1526:64:20;22834:409:34;1526:64:20;1608:5;1614:1;1608:8;;;;;;;;:::i;:::-;;;;;;;1618:1;1608:11;1600:47;;;;-1:-1:-1;;;1600:47:20;;23450:2:34;1600:47:20;;;23432:21:34;23489:2;23469:18;;;23462:30;23528:25;23508:18;;;23501:53;23571:18;;1600:47:20;23248:347:34;1600:47:20;1669:1;1658:123;1676:1;1672;:5;1658:123;;;1717:5;1723:3;1725:1;1723;:3;:::i;:::-;1717:10;;;;;;;;:::i;:::-;;;;;;;1706:5;1712:1;1706:8;;;;;;;;:::i;:::-;;;;;;;:21;1698:72;;;;-1:-1:-1;;;1698:72:20;;23802:2:34;1698:72:20;;;23784:21:34;23841:2;23821:18;;;23814:30;23880:34;23860:18;;;23853:62;-1:-1:-1;;;23931:18:34;;;23924:36;23977:19;;1698:72:20;23600:402:34;1698:72:20;1679:3;;;;:::i;:::-;;;;1658:123;;;-1:-1:-1;1811:22:20;;;;:36;-1:-1:-1;;;;;1799:48:20;:5;1805:3;1807:1;1805;:3;:::i;:::-;1799:10;;;;;;;;:::i;:::-;;;;;;;:48;1791:101;;;;-1:-1:-1;;;1791:101:20;;24209:2:34;1791:101:20;;;24191:21:34;24248:2;24228:18;;;24221:30;24287:34;24267:18;;;24260:62;-1:-1:-1;;;24338:18:34;;;24331:38;24386:19;;1791:101:20;24007:404:34;1791:101:20;1914:1;1903:128;1921:1;1917;:5;1903:128;;;1963:5;1969:3;1971:1;1969;:3;:::i;:::-;1963:10;;;;;;;;:::i;:::-;;;;;;;1951:5;1957:1;1951:8;;;;;;;;:::i;:::-;;;;;;;:22;;1943:77;;;;-1:-1:-1;;;1943:77:20;;24618:2:34;1943:77:20;;;24600:21:34;24657:2;24637:18;;;24630:30;24696:34;24676:18;;;24669:62;-1:-1:-1;;;24747:18:34;;;24740:40;24797:19;;1943:77:20;24416:406:34;1943:77:20;1924:3;;;;:::i;:::-;;;;1903:128;;;-1:-1:-1;;;;;;2041:31:20;;;;;;:17;:31;;;;;;;;;:38;;;;;;;;:6;:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2041:38:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2041:38:20;-1:-1:-1;;;;;2041:38:20;;;;;;;;;;;;;;;;;:31;:38;;;;;;;;;;:::i;:::-;-1:-1:-1;2041:38:20;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2041:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2041:38:20;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2888:36:17;;2163:38:20;;:1;:38;:::i;:::-;2136:65;;2888:36:17;;2237:38:20;;:1;:38;:::i;:::-;2211:23;;;;:64;;;-1:-1:-1;;;;;3100:28:20;;;;;;:14;:28;;;;;;:38;;;;;;:6;:38;;;;2429:24;2456:16;3010:19:17;;;;;2937:99;2456:16:20;2429:43;;2502:18;2486:34;;:4;:13;;;:34;;;2482:94;;;2551:13;;;;3583:19;:33;;-1:-1:-1;;3583:33:20;;;;;;;;;;;2536:29;1326:1256;;;;;;1245:1337;;:::o;11884:247:16:-;12002:31;12036:26;12049:12;12036;:26::i;:::-;12002:60;;12080:14;:21;;;12072:52;;;;-1:-1:-1;;;12072:52:16;;25029:2:34;12072:52:16;;;25011:21:34;25068:2;25048:18;;;25041:30;-1:-1:-1;;;25087:18:34;;;25080:48;25145:18;;12072:52:16;24827:342:34;12288:377:16;12435:9;12430:229;12454:14;:21;12450:1;:25;12430:229;;;12501:9;12496:153;12520:1;12516;:5;12496:153;;;12575:14;12590:1;12575:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12554:38:16;:14;12569:1;12554:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12554:38:16;;12546:88;;;;-1:-1:-1;;;12546:88:16;;25376:2:34;12546:88:16;;;25358:21:34;25415:2;25395:18;;;25388:30;25454:34;25434:18;;;25427:62;-1:-1:-1;;;25505:18:34;;;25498:35;25550:19;;12546:88:16;25174:401:34;12546:88:16;12523:3;;;;:::i;:::-;;;;12496:153;;;-1:-1:-1;12477:3:16;;;;:::i;:::-;;;;12430:229;;3459:1718:19;3568:7;3577;3596:34;3644:33;3692:26;3721:14;:12;:14::i;:::-;3692:43;;3750:9;3745:1353;3769:9;:16;3765:1;:20;3745:1353;;;3806:13;3822:9;3832:1;3822:12;;;;;;;;:::i;:::-;;;;;;;3806:28;;3849:26;3878:19;3891:5;3878:12;:19::i;:::-;3849:48;;3912:29;3944:32;3970:5;3944:25;:32::i;:::-;3912:64;;3991:29;4034:28;4094:36;4133:34;4149:10;4161:5;4133:15;:34::i;:::-;4239:17;;4209:27;;4094:73;;-1:-1:-1;4209:47:19;;;:::i;:::-;4185:71;;4326:7;:16;;;4297:17;:26;;;:45;;;;:::i;:::-;4274:68;;4076:281;4371:37;4411:23;:69;;4479:1;4411:69;;;4437:39;;4411:69;4371:109;;4494:36;4533:23;:68;;4600:1;4533:68;;;4559:9;:38;;;4533:68;4494:107;;4617:22;4641:16;4661:37;4692:5;4661:30;:37::i;:::-;4616:82;;;;4712:17;4732:16;3010:19:17;;;;;2937:99;4732:16:19;4712:36;;4893:29;4871:9;:18;;;4857:11;:32;;;;:::i;:::-;4850:40;;:2;:40;:::i;:::-;4792:39;-1:-1:-1;;;;;4792:39:19;;:21;:39;:::i;:::-;:98;;;;:::i;:::-;:130;;;;:::i;:::-;4762:160;;;;:::i;:::-;;;5059:28;5021:9;:18;;;5007:11;:32;;;;:::i;:::-;5000:40;;:2;:40;:::i;:::-;4965:32;-1:-1:-1;;;;;4965:32:19;;:20;:32;:::i;:::-;:75;;;;:::i;:::-;:122;;;;:::i;:::-;4936:151;;;;:::i;:::-;;;3792:1306;;;;;;;;;;3787:3;;;;;:::i;:::-;;;;3745:1353;;;-1:-1:-1;5116:26:19;;5144:25;;-1:-1:-1;3459:1718:19;-1:-1:-1;;;;3459:1718:19:o;4360:904:16:-;4494:4;4514:30;4547:41;4563:10;4575:12;4547:15;:41::i;:::-;4514:74;;4599:29;4631:39;4657:12;4631:25;:39::i;:::-;4599:71;;4681:14;4698:26;4711:12;4698;:26::i;:::-;:35;;;4681:52;;4744:26;4773:67;4791:11;:20;;;4813:7;:16;;;4831:8;4773:17;:67::i;:::-;4744:96;;5090:10;5173:61;5200:11;5213:8;5223:10;5173:26;:61::i;:::-;5103:66;5130:18;5150:8;5160;5103:26;:66::i;:::-;:131;;;4360:904;-1:-1:-1;;;;;;;;;4360:904:16:o;7947:197:19:-;8010:6;8029:12;8046:29;8062:12;8046:15;:29::i;:::-;-1:-1:-1;4306:39:17;;8028:47:19;;-1:-1:-1;;;;4306:39:17;;-1:-1:-1;;;;;4306:39:17;8092:45:19;;:5;:45;:::i;9296:302:16:-;9412:26;9441:36;9457:5;9464:12;9441:15;:36::i;:::-;9412:65;;9535:16;9516:7;:16;;;:35;;;;:::i;:::-;9495:17;;:56;;9487:104;;;;-1:-1:-1;;;9487:104:16;;26057:2:34;9487:104:16;;;26039:21:34;26096:2;26076:18;;;26069:30;26135:34;26115:18;;;26108:62;-1:-1:-1;;;26186:18:34;;;26179:33;26229:19;;9487:104:16;25855:399:34;9866:352:16;9978:32;10013:30;10030:12;10013:16;:30::i;:::-;9978:65;;10126:16;10101:13;:22;;;:41;;;;:::i;:::-;10074:23;;:68;;10053:158;;;;-1:-1:-1;;;10053:158:16;;26461:2:34;10053:158:16;;;26443:21:34;26500:2;26480:18;;;26473:30;26539:34;26519:18;;;26512:62;-1:-1:-1;;;26590:18:34;;;26583:41;26641:19;;10053:158:16;26259:407:34;3747:706:4;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;27249:2:34;4351:85:4;;;27231:21:34;27288:2;27268:18;;;27261:30;27327:34;27307:18;;;27300:62;-1:-1:-1;;;27378:18:34;;;27371:40;27428:19;;4351:85:4;27047:406:34;1523:398:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:26:22;1657:10;1669:20;1693:10;602:6:17;:24;-1:-1:-1;;;;;602:24:17;;;;;;521:113;1693:10:22;-1:-1:-1;;;;;1693:27:22;;1721:14;1693:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1693:43:22;;;;;;;;;;;;:::i;:::-;1628:108;;;;;;1754:5;1761:6;1746:22;;;;;-1:-1:-1;;;1746:22:22;;;;;;;;:::i;:::-;-1:-1:-1;1808:11:22;;;;1708:4:17;1731:31;;;:23;:31;;;;;;;;1787:33:22;1779:70;;;;-1:-1:-1;;;1779:70:22;;31495:2:34;1779:70:22;;;31477:21:34;31534:2;31514:18;;;31507:30;31573:26;31553:18;;;31546:54;31617:18;;1779:70:22;31293:348:34;1779:70:22;1859:31;1878:6;:11;;;2651:31:20;;;;:23;:31;;;;;:38;;-1:-1:-1;;2651:38:20;2685:4;2651:38;;;2588:108;1859:31:22;-1:-1:-1;1908:6:22;;1523:398;-1:-1:-1;;;1523:398:22:o;1095:422::-;1170:20;1203:26;1235:10;602:6:17;:24;-1:-1:-1;;;;;602:24:17;;;;;;521:113;1235:10:22;-1:-1:-1;;;;;1235:27:22;;1263:14;1235:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1235:43:22;;;;;;;;;;;;:::i;:::-;1202:76;;;;1289:143;1322:6;:21;;;1369:50;1394:24;1369:6;:14;;;:24;;:50;;;;:::i;:::-;1289:19;:143::i;:::-;738:27:17;;1453:57:22;;-1:-1:-1;;;1453:57:22;;-1:-1:-1;;;;;738:27:17;;;;1453:41:22;;:57;;1495:14;;1453:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1453:57:22;;;;;;;;;;;;:::i;1927:402::-;2121:16;;2041:23;;2080:13;;2231:38;2240:29;2080:13;2231:38;:::i;:::-;;-1:-1:-1;2287:35:22;2231:38;2310:11;2231:38;2310:3;:11;:::i;:::-;2287:9;;:35;:15;:35::i;:::-;2280:42;1927:402;-1:-1:-1;;;;1927:402:22:o;2335:153::-;2457:6;-1:-1:-1;;;;;2428:35:22;:25;2445:7;1480:30:17;;1454:7;1480:30;;;:21;:30;;;;;;-1:-1:-1;;;;;1480:30:17;;1389:128;2428:25:22;-1:-1:-1;;;;;2428:35:22;;2420:61;;;;-1:-1:-1;;;2420:61:22;;31848:2:34;2420:61:22;;;31830:21:34;31887:2;31867:18;;;31860:30;-1:-1:-1;;;31906:18:34;;;31899:43;31959:18;;2420:61:22;31646:337:34;449:435:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:25:13;:10;-1:-1:-1;616:18:13;:25::i;:::-;609:33;;;;;;;;;;:::i;:::-;593:6;;:49;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;652:10:13;661:1;652:10;;:::i;:::-;;-1:-1:-1;689:27:13;:10;652;689:20;:27::i;:::-;-1:-1:-1;;;;;673:43:13;:13;;;:43;726:11;735:2;726:11;;:::i;:::-;;-1:-1:-1;770:27:13;:10;726:11;770:20;:27::i;:::-;-1:-1:-1;;;;;748:49:13;:19;;;:49;807:11;816:2;807:11;;:::i;:::-;;-1:-1:-1;850:27:13;:10;807:11;850:20;:27::i;:::-;829:18;;;:48;-1:-1:-1;829:6:13;449:435;-1:-1:-1;449:435:13:o;876:227:18:-;947:79;973:12;987:38;1012:12;987:24;:38::i;:::-;-1:-1:-1;;;;;3100:28:20;;;;;;;:14;:28;;;;;;;;:38;;;;;;;:6;:38;;;;;2993:152;947:79:18;-1:-1:-1;;;;;2915:48:20;;;;;:34;:48;;;;;1080:15:18;2915:65:20;;2081:198:1:o;1192:1001:16:-;1311:26;1340;1353:12;1340;:26::i;:::-;1311:55;;1377:29;1409:39;1435:12;1409:25;:39::i;:::-;1377:71;;1459:24;1486:57;1502:11;1515:7;:17;;;1534:8;1486:15;:57::i;:::-;1459:84;;1555:27;1584:26;1614:44;1641:10;1653:4;1614:26;:44::i;:::-;1554:104;;;;1669:63;1689:10;1701:12;1715:16;1669:19;:63::i;:::-;1742:62;1773:12;1787:16;1742:30;:62::i;:::-;2063:39;;2040:18;;;;3010:19:17;;;;2021:37:16;;;;:::i;:::-;2014:45;;:2;:45;:::i;:::-;1954:32;1973:12;1954:18;:32::i;:::-;-1:-1:-1;;;;;1915:71:16;1934:7;:17;;;1915:16;:36;;;;:::i;:::-;:71;;;;:::i;:::-;:145;;;;:::i;:::-;:187;;;;:::i;:::-;1874:228;;:18;:228;:::i;:::-;1835:19;:267;;1814:372;;;;-1:-1:-1;;;1814:372:16;;32190:2:34;1814:372:16;;;32172:21:34;32229:2;32209:18;;;32202:30;32268:34;32248:18;;;32241:62;32339:28;32319:18;;;32312:56;32385:19;;1814:372:16;31988:422:34;2916:917:16;3033:26;3062;3075:12;3062;:26::i;:::-;3033:55;;3099:29;3131:39;3157:12;3131:25;:39::i;:::-;3099:71;;3181:24;3208:56;3224:11;3237:7;:16;;;3255:8;3208:15;:56::i;:::-;3181:83;;3276:27;3305:26;3335:44;3362:10;3374:4;3335:26;:44::i;:::-;3275:104;;;;3390:62;3421:12;3435:16;3390:30;:62::i;:::-;3724:18;;;;3010:19:17;;;;3705:37:16;;;;:::i;:::-;3698:45;;:2;:45;:::i;:::-;3632:9;:38;;;3603:26;3616:12;3603;:26::i;:::-;-1:-1:-1;;;;;3565:64:16;3584:7;:16;;;3565;:35;;;;:::i;:::-;:64;;;;:::i;:::-;:105;;;;:::i;:::-;:179;;;;:::i;:::-;3524:220;;:18;:220;:::i;:::-;3484:19;3483:261;;3462:364;;;;-1:-1:-1;;;3462:364:16;;32617:2:34;3462:364:16;;;32599:21:34;32656:2;32636:18;;;32629:30;32695:34;32675:18;;;32668:62;32766:26;32746:18;;;32739:54;32810:19;;3462:364:16;32415:420:34;457:400:22;594:15;625:73;654:12;669:20;738:27:17;;-1:-1:-1;;;;;738:27:17;;640:134;669:20:22;691:6;625:21;:73::i;:::-;738:27:17;;-1:-1:-1;;;;;738:27:17;719:131:22;;-1:-1:-1;;;719:131:22;;-1:-1:-1;;;;;33158:32:34;;;719:131:22;;;33140:51:34;33207:18;;;33200:34;;;33282:6;33270:19;;33250:18;;;33243:47;807:26:22;;;33306:18:34;;;33299:34;799:35:22;33349:19:34;;;33342:35;;;33393:19;;;33386:52;719:28:22;;;;;;;33112:19:34;;719:131:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2406:226:17:-;2481:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2481:33:17;2526:26;2555;2568:12;2555;:26::i;:::-;2598:27;;;;2406:226;-1:-1:-1;;;2406:226:17:o;2380:1226:18:-;2592:7;2615:9;2628:1;2615:14;2611:53;;-1:-1:-1;2652:1:18;2645:8;;2611:53;2699:23;;;;2757;;;;2674:22;;2845:229;2909:5;2915:1;2909:8;;;;;;;;:::i;:::-;;;;;;;2897:9;:20;;;;:::i;:::-;2863:31;;2852:42;;-1:-1:-1;;;;;2852:42:18;:8;:42;:::i;:::-;:65;2845:229;;;2948:5;2954:1;2948:8;;;;;;;;:::i;:::-;;;;;;;2933:23;;2975:1;2970:6;;;;;:::i;:::-;;;3000:5;:12;2995:1;:17;2991:73;;3039:5;3045:3;3047:1;3045;:3;:::i;:::-;3039:10;;;;;;;;:::i;:::-;;;;;;;3032:17;;;;;;;;2991:73;2845:229;;;3248:1;3251;3248:4;3244:215;;3283:5;3289:1;3283:8;;;;;;;;:::i;:::-;;;;;;;3268:23;;3244:215;;;3437:5;3443:3;3445:1;3443;:3;:::i;:::-;3437:10;;;;;;;;:::i;:::-;;;;;;;3426:5;3432:1;3426:8;;;;;;;;:::i;:::-;;;;;;;:21;;;;:::i;:::-;3412:9;;3386:5;3392:3;3394:1;3392;:3;:::i;:::-;3386:10;;;;;;;;:::i;:::-;;;;;;;:22;;;;:::i;:::-;3374:34;;:8;:34;:::i;:::-;3373:48;;;;:::i;:::-;3358:5;3364:3;3366:1;3364;:3;:::i;:::-;3358:10;;;;;;;;:::i;:::-;;;;;;;3347:5;3353:1;3347:8;;;;;;;;:::i;:::-;;;;;;;:21;;;;:::i;:::-;3346:76;;;;:::i;:::-;:102;;;;:::i;:::-;3330:118;;;;:::i;:::-;;;3244:215;3597:2;3592;3587;3581:3;3546:17;:31;;;-1:-1:-1;;;;;3477:100:18;3531:12;3514:14;3477:34;2888:36:17;;;2797:134;3477:34:18;:51;;;;:::i;:::-;:66;;;;:::i;:::-;:100;;;;:::i;:::-;3476:108;;;;:::i;:::-;:113;;;;:::i;:::-;:118;;;;:::i;:::-;:123;;;;:::i;:::-;3469:130;2380:1226;-1:-1:-1;;;;;;;;;2380:1226:18:o;1010:105:17:-;1057:16;1092:6;:16;;1085:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1085:23:17;;;;;;;;;;;;;;;;;;;;;;;1010:105;:::o;5937:902:19:-;6046:22;6070:16;6103:12;6117:11;6132:29;6148:12;6132:15;:29::i;:::-;6102:59;;;;6353:30;6386:28;4444:30:17;;-1:-1:-1;;;;;4444:30:17;;4358:123;6386:28:19;6353:61;;6424:39;6466:37;4306:39:17;;-1:-1:-1;;;;;;;;4306:39:17;;;;;4211:141;6466:37:19;6531:1;;-1:-1:-1;6424:79:19;-1:-1:-1;6590:30:19;6597:23;6590:4;:30;:::i;:::-;-1:-1:-1;;;;;6546:74:19;:40;6554:32;6546:5;:40;:::i;:::-;-1:-1:-1;;;;;6546:74:19;;6542:196;;6697:30;6704:23;6697:4;:30;:::i;:::-;6654:40;6662:32;6654:5;:40;:::i;:::-;:73;;;;:::i;:::-;6636:91;;6542:196;6802:30;6809:23;6802:4;:30;:::i;:::-;6759:40;6767:32;6759:5;:40;:::i;:::-;:73;;;;:::i;:::-;6747:85;;6092:747;;;;5937:902;;;:::o;2966:377:22:-;3070:7;3109:6;3140:1;3129:12;;;;3125:76;;;3177:12;3188:1;3177:8;:12;:::i;:::-;3170:20;;:2;:20;:::i;:::-;3157:33;;;;:::i;:::-;;;3125:76;3230:12;3241:1;3230:8;:12;:::i;:::-;3223:20;;:2;:20;:::i;:::-;3213:31;;:6;:31;:::i;:::-;:36;;;;:57;;-1:-1:-1;3262:8:22;3253:5;:17;;;;;;;;:::i;:::-;;3213:57;3210:101;;;3286:14;3299:1;3286:14;;:::i;609:1440:19:-;679:6;687;705:26;734;747:12;734;:26::i;:::-;705:55;;771:16;790:15;3715:17:17;;;-1:-1:-1;;;3715:17:17;;;;;3643:96;790:15:19;771:34;;816:16;842:35;892:10;:15;;906:1;892:15;888:768;;955:36;994;1013:9;:16;;;994:18;:36::i;:::-;1058:17;;1120:16;;;;;1058:17;;-1:-1:-1;1120:16:19;-1:-1:-1;888:768:19;;-1:-1:-1;888:768:19;;1157:10;:15;;1171:1;1157:15;1153:503;;1225:36;1264:40;1287:9;:16;;;1264:22;:40::i;1153:503::-;-1:-1:-1;;1522:16:19;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:23:17;;;:13;:23;;;;;4000:30;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;4000:30:17;;;;;;;;;-1:-1:-1;;;4000:30:17;;;;;;;;;;;;4007:6;4000:30;;;;;1153:503:19;1688:1;1674:10;:15;;;;1666:78;;;;-1:-1:-1;;;1666:78:19;;34380:2:34;1666:78:19;;;34362:21:34;34419:2;34399:18;;;34392:30;34458:34;34438:18;;;34431:62;-1:-1:-1;;;34509:18:34;;;34502:48;34567:19;;1666:78:19;34178:414:34;1666:78:19;1956:10;;1969:28;;-1:-1:-1;609:1440:19;-1:-1:-1;;;;609:1440:19:o;3861:223:5:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;14814:320:33:-;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:33;;34799:2:34;14912:62:33;;;34781:21:34;34838:2;34818:18;;;34811:30;-1:-1:-1;;;34857:18:34;;;34850:51;34918:18;;14912:62:33;34597:345:34;14912:62:33;-1:-1:-1;15058:30:33;15074:4;15058:30;15052:37;;14814:320::o;9457:2804::-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:33;;35149:2:34;9631:50:33;;;35131:21:34;35188:2;35168:18;;;35161:30;-1:-1:-1;;;35207:18:34;;;35200:44;35261:18;;9631:50:33;34947:338:34;9631:50:33;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:33;;35492:2:34;9691:63:33;;;35474:21:34;35531:2;35511:18;;;35504:30;-1:-1:-1;;;35550:18:34;;;35543:47;35607:18;;9691:63:33;35290:341:34;9691:63:33;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:33;;;11804:2;11787:11;-1:-1:-1;;11783:25:33;11777:4;11770:39;-1:-1:-1;9821:2397:33;-1:-1:-1;12245:9:33;9457:2804;-1:-1:-1;;;;9457:2804:33:o;12627:302::-;12704:5;12746:10;:6;12755:1;12746:10;:::i;:::-;12729:6;:13;:27;;12721:60;;;;-1:-1:-1;;;12721:60:33;;35838:2:34;12721:60:33;;;35820:21:34;35877:2;35857:18;;;35850:30;-1:-1:-1;;;35896:18:34;;;35889:49;35955:18;;12721:60:33;35636:343:34;12721:60:33;-1:-1:-1;12857:29:33;12873:3;12857:29;12851:36;;12627:302::o;12267:354::-;12346:7;12390:11;:6;12399:2;12390:11;:::i;:::-;12373:6;:13;:28;;12365:62;;;;-1:-1:-1;;;12365:62:33;;36186:2:34;12365:62:33;;;36168:21:34;36225:2;36205:18;;;36198:30;-1:-1:-1;;;36244:18:34;;;36237:51;36305:18;;12365:62:33;35984:345:34;12365:62:33;-1:-1:-1;12515:30:33;12531:4;12515:30;12509:37;-1:-1:-1;;;12505:71:33;;;12267:354::o;14497:311::-;14576:7;14620:11;:6;14629:2;14620:11;:::i;:::-;14603:6;:13;:28;;14595:62;;;;-1:-1:-1;;;14595:62:33;;36536:2:34;14595:62:33;;;36518:21:34;36575:2;36555:18;;;36548:30;-1:-1:-1;;;36594:18:34;;;36587:51;36655:18;;14595:62:33;36334:345:34;7492:192:19;7565:6;7584:17;7606:44;7637:12;7606:30;:44::i;:::-;-1:-1:-1;7583:67:19;7492:192;-1:-1:-1;;;7492:192:19:o;7072:175::-;7139:6;7160:11;7175:44;7206:12;7175:30;:44::i;1475:603:4:-;1830:10;;;1829:62;;-1:-1:-1;1846:39:4;;-1:-1:-1;;;1846:39:4;;1870:4;1846:39;;;36896:34:34;-1:-1:-1;;;;;36966:15:34;;;36946:18;;;36939:43;1846:15:4;;;;;36831:18:34;;1846:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:4;;37384:2:34;1808:163:4;;;37366:21:34;37423:2;37403:18;;;37396:30;37462:34;37442:18;;;37435:62;-1:-1:-1;;;37513:18:34;;;37506:52;37575:19;;1808:163:4;37182:418:34;1808:163:4;2008:62;;-1:-1:-1;;;;;22386:32:34;;2008:62:4;;;22368:51:34;22435:18;;;22428:34;;;1981:90:4;;2001:5;;-1:-1:-1;;;2031:22:4;22341:18:34;;2008:62:4;22194:274:34;3745:154:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3855:20:17;;:37;;-1:-1:-1;;;3855:37:17;;;;;567:25:34;;;-1:-1:-1;;;;;;;3855:20:17;;:29;;540:18:34;;3855:37:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4043:162::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4157:24:17;;;:41;;-1:-1:-1;;;4157:41:17;;;;;567:25:34;;;-1:-1:-1;;;;;;;4157:24:17;;:33;;540:18:34;;4157:41:17;421:177:34;4948:499:5;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:5;;38821:2:34;5137:81:5;;;38803:21:34;38860:2;38840:18;;;38833:30;38899:34;38879:18;;;38872:62;-1:-1:-1;;;38950:18:34;;;38943:36;38996:19;;5137:81:5;38619:402:34;5137:81:5;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;39228:2:34;5228:60:5;;;39210:21:34;39267:2;39247:18;;;39240:30;39306:31;39286:18;;;39279:59;39355:18;;5228:60:5;39026:353:34;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:5;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:402:34;101:6;109;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;222:9;209:23;199:33;;279:2;268:9;264:18;251:32;241:42;;333:2;322:9;318:18;305:32;366:1;359:5;356:12;346:40;;382:1;379;372:12;346:40;405:5;395:15;;;14:402;;;;;:::o;603:173::-;671:20;;-1:-1:-1;;;;;720:31:34;;710:42;;700:70;;766:1;763;756:12;700:70;603:173;;;:::o;781:127::-;842:10;837:3;833:20;830:1;823:31;873:4;870:1;863:15;897:4;894:1;887:15;913:253;985:2;979:9;1027:4;1015:17;;-1:-1:-1;;;;;1047:34:34;;1083:22;;;1044:62;1041:88;;;1109:18;;:::i;:::-;1145:2;1138:22;913:253;:::o;1171:255::-;1243:2;1237:9;1285:6;1273:19;;-1:-1:-1;;;;;1307:34:34;;1343:22;;;1304:62;1301:88;;;1369:18;;:::i;1431:275::-;1502:2;1496:9;1567:2;1548:13;;-1:-1:-1;;1544:27:34;1532:40;;-1:-1:-1;;;;;1587:34:34;;1623:22;;;1584:62;1581:88;;;1649:18;;:::i;:::-;1685:2;1678:22;1431:275;;-1:-1:-1;1431:275:34:o;1711:183::-;1771:4;-1:-1:-1;;;;;1796:6:34;1793:30;1790:56;;;1826:18;;:::i;:::-;-1:-1:-1;1871:1:34;1867:14;1883:4;1863:25;;1711:183::o;1899:668::-;1953:5;2006:3;1999:4;1991:6;1987:17;1983:27;1973:55;;2024:1;2021;2014:12;1973:55;2060:6;2047:20;2086:4;2110:60;2126:43;2166:2;2126:43;:::i;:::-;2110:60;:::i;:::-;2204:15;;;2290:1;2286:10;;;;2274:23;;2270:32;;;2235:12;;;;2314:15;;;2311:35;;;2342:1;2339;2332:12;2311:35;2378:2;2370:6;2366:15;2390:148;2406:6;2401:3;2398:15;2390:148;;;2472:23;2491:3;2472:23;:::i;:::-;2460:36;;2516:12;;;;2423;;2390:148;;;-1:-1:-1;2556:5:34;1899:668;-1:-1:-1;;;;;;1899:668:34:o;2572:662::-;2626:5;2679:3;2672:4;2664:6;2660:17;2656:27;2646:55;;2697:1;2694;2687:12;2646:55;2733:6;2720:20;2759:4;2783:60;2799:43;2839:2;2799:43;:::i;2783:60::-;2877:15;;;2963:1;2959:10;;;;2947:23;;2943:32;;;2908:12;;;;2987:15;;;2984:35;;;3015:1;3012;3005:12;2984:35;3051:2;3043:6;3039:15;3063:142;3079:6;3074:3;3071:15;3063:142;;;3145:17;;3133:30;;3183:12;;;;3096;;3063:142;;3239:1123;3434:6;3442;3450;3458;3466;3519:3;3507:9;3498:7;3494:23;3490:33;3487:53;;;3536:1;3533;3526:12;3487:53;3559:29;3578:9;3559:29;:::i;:::-;3549:39;;3639:2;3628:9;3624:18;3611:32;-1:-1:-1;;;;;3703:2:34;3695:6;3692:14;3689:34;;;3719:1;3716;3709:12;3689:34;3742:61;3795:7;3786:6;3775:9;3771:22;3742:61;:::i;:::-;3732:71;;3856:2;3845:9;3841:18;3828:32;3812:48;;3885:2;3875:8;3872:16;3869:36;;;3901:1;3898;3891:12;3869:36;3924:63;3979:7;3968:8;3957:9;3953:24;3924:63;:::i;:::-;3914:73;;4040:2;4029:9;4025:18;4012:32;3996:48;;4069:2;4059:8;4056:16;4053:36;;;4085:1;4082;4075:12;4053:36;4108:63;4163:7;4152:8;4141:9;4137:24;4108:63;:::i;:::-;4098:73;;4224:3;4213:9;4209:19;4196:33;4180:49;;4254:2;4244:8;4241:16;4238:36;;;4270:1;4267;4260:12;4238:36;;4293:63;4348:7;4337:8;4326:9;4322:24;4293:63;:::i;:::-;4283:73;;;3239:1123;;;;;;;;:::o;4367:186::-;4415:4;-1:-1:-1;;;;;4440:6:34;4437:30;4434:56;;;4470:18;;:::i;:::-;-1:-1:-1;4536:2:34;4515:15;-1:-1:-1;;4511:29:34;4542:4;4507:40;;4367:186::o;4558:671::-;4626:6;4679:2;4667:9;4658:7;4654:23;4650:32;4647:52;;;4695:1;4692;4685:12;4647:52;4735:9;4722:23;-1:-1:-1;;;;;4760:6:34;4757:30;4754:50;;;4800:1;4797;4790:12;4754:50;4823:22;;4876:4;4868:13;;4864:27;-1:-1:-1;4854:55:34;;4905:1;4902;4895:12;4854:55;4941:2;4928:16;4966:48;4982:31;5010:2;4982:31;:::i;4966:48::-;5037:2;5030:5;5023:17;5077:7;5072:2;5067;5063;5059:11;5055:20;5052:33;5049:53;;;5098:1;5095;5088:12;5049:53;5153:2;5148;5144;5140:11;5135:2;5128:5;5124:14;5111:45;5197:1;5176:14;;;5192:2;5172:23;5165:34;;;;5180:5;4558:671;-1:-1:-1;;;;4558:671:34:o;5234:260::-;5302:6;5310;5363:2;5351:9;5342:7;5338:23;5334:32;5331:52;;;5379:1;5376;5369:12;5331:52;5402:29;5421:9;5402:29;:::i;:::-;5392:39;;5450:38;5484:2;5473:9;5469:18;5450:38;:::i;:::-;5440:48;;5234:260;;;;;:::o;5656:258::-;5576:12;;5564:25;;5638:4;5627:16;;;5621:23;5605:14;;;5598:47;5848:2;5833:18;;5860:48;5499:152;5919:186;5978:6;6031:2;6019:9;6010:7;6006:23;6002:32;5999:52;;;6047:1;6044;6037:12;5999:52;6070:29;6089:9;6070:29;:::i;6110:118::-;6197:5;6194:1;6183:20;6176:5;6173:31;6163:59;;6218:1;6215;6208:12;6233:129;-1:-1:-1;;;;;6311:5:34;6307:30;6300:5;6297:41;6287:69;;6352:1;6349;6342:12;6367:118;6454:5;6451:1;6440:20;6433:5;6430:31;6420:59;;6475:1;6472;6465:12;6490:833;6581:6;6589;6633:9;6624:7;6620:23;6663:3;6659:2;6655:12;6652:32;;;6680:1;6677;6670:12;6652:32;6703:23;;;-1:-1:-1;6760:4:34;-1:-1:-1;;6742:16:34;;6738:27;6735:47;;;6778:1;6775;6768:12;6735:47;;6804:22;;:::i;:::-;6878:2;6867:9;6863:18;6850:32;6891:31;6914:7;6891:31;:::i;:::-;6931:22;;7005:2;6990:18;;6977:32;7018;6977;7018;:::i;:::-;7077:2;7066:14;;7059:31;7142:2;7127:18;;7114:32;7155:31;7114:32;7155:31;:::i;:::-;7213:2;7202:14;;7195:31;7286:4;7271:20;;;;7258:34;7253:2;7242:14;;7235:58;-1:-1:-1;6490:833:34;7206:5;;-1:-1:-1;6490:833:34:o;7536:1148::-;7716:6;7724;7732;7740;7748;7756;7764;7772;7780;7833:3;7821:9;7812:7;7808:23;7804:33;7801:53;;;7850:1;7847;7840:12;7801:53;7873:29;7892:9;7873:29;:::i;:::-;7863:39;;7949:2;7938:9;7934:18;7921:32;7911:42;;8000:2;7989:9;7985:18;7972:32;7962:42;;8054:2;8043:9;8039:18;8026:32;8067:30;8091:5;8067:30;:::i;:::-;8116:5;-1:-1:-1;8172:3:34;8157:19;;8144:33;-1:-1:-1;;;;;8226:14:34;;;8223:34;;;8253:1;8250;8243:12;8223:34;8276:61;8329:7;8320:6;8309:9;8305:22;8276:61;:::i;:::-;8266:71;;8390:3;8379:9;8375:19;8362:33;8346:49;;8420:2;8410:8;8407:16;8404:36;;;8436:1;8433;8426:12;8404:36;;8459:63;8514:7;8503:8;8492:9;8488:24;8459:63;:::i;:::-;8449:73;;;8569:3;8558:9;8554:19;8541:33;8531:43;;8621:3;8610:9;8606:19;8593:33;8583:43;;8673:3;8662:9;8658:19;8645:33;8635:43;;7536:1148;;;;;;;;;;;:::o;8689:435::-;8742:3;8780:5;8774:12;8807:6;8802:3;8795:19;8833:4;8862:2;8857:3;8853:12;8846:19;;8899:2;8892:5;8888:14;8920:1;8930:169;8944:6;8941:1;8938:13;8930:169;;;9005:13;;8993:26;;9039:12;;;;9074:15;;;;8966:1;8959:9;8930:169;;;-1:-1:-1;9115:3:34;;8689:435;-1:-1:-1;;;;;8689:435:34:o;9225:1276::-;9408:2;9397:9;9390:21;9453:6;9447:13;9442:2;9431:9;9427:18;9420:41;9515:2;9507:6;9503:15;9497:22;9492:2;9481:9;9477:18;9470:50;9574:2;9566:6;9562:15;9556:22;9551:2;9540:9;9536:18;9529:50;9644:4;9638:2;9630:6;9626:15;9620:22;9616:33;9610:3;9599:9;9595:19;9588:62;9371:4;9697:3;9689:6;9685:16;9679:23;9739:4;9733:3;9722:9;9718:19;9711:33;-1:-1:-1;;;;;9791:12:34;9785:19;9781:44;9775:3;9764:9;9760:19;9753:73;9881:2;9867:12;9863:21;9857:28;9922:3;9916;9905:9;9901:19;9894:32;9949:65;10009:3;9998:9;9994:19;9978:14;9949:65;:::i;:::-;9935:79;;10069:2;10055:12;10051:21;10045:28;10142:3;10138:8;10126:9;10118:6;10114:22;10110:37;10104:3;10093:9;10089:19;10082:66;10171:52;10216:6;10200:14;10171:52;:::i;:::-;10284:2;10266:21;;10260:28;10254:3;10239:19;;10232:57;10350:3;10332:22;;;10326:29;10320:3;10305:19;;10298:58;-1:-1:-1;;10405:3:34;10393:16;;10387:23;9199:13;;9192:21;10466:4;10451:20;;9180:34;10387:23;10419:53;9129:91;10506:117;10591:6;10584:5;10580:18;10573:5;10570:29;10560:57;;10613:1;10610;10603:12;10628:319;10695:6;10703;10756:2;10744:9;10735:7;10731:23;10727:32;10724:52;;;10772:1;10769;10762:12;10724:52;10811:9;10798:23;10830:30;10854:5;10830:30;:::i;10952:1006::-;11056:6;11064;11072;11080;11088;11096;11104;11157:3;11145:9;11136:7;11132:23;11128:33;11125:53;;;11174:1;11171;11164:12;11125:53;11210:9;11197:23;11187:33;;11270:2;11259:9;11255:18;11242:32;11283:29;11306:5;11283:29;:::i;:::-;11331:5;-1:-1:-1;11388:2:34;11373:18;;11360:32;11401;11360;11401;:::i;:::-;11452:7;-1:-1:-1;11511:2:34;11496:18;;11483:32;11524:31;11483:32;11524:31;:::i;:::-;11574:7;-1:-1:-1;11633:3:34;11618:19;;11605:33;11647:31;11605:33;11647:31;:::i;:::-;11697:7;-1:-1:-1;11756:3:34;11741:19;;11728:33;11770:32;11728:33;11770:32;:::i;:::-;11821:7;-1:-1:-1;11880:3:34;11865:19;;11852:33;11894:32;11852:33;11894:32;:::i;:::-;11945:7;11935:17;;;10952:1006;;;;;;;;;;:::o;12232:127::-;12293:10;12288:3;12284:20;12281:1;12274:31;12324:4;12321:1;12314:15;12348:4;12345:1;12338:15;12364:168;12404:7;12470:1;12466;12462:6;12458:14;12455:1;12452:21;12447:1;12440:9;12433:17;12429:45;12426:71;;;12477:18;;:::i;:::-;-1:-1:-1;12517:9:34;;12364:168::o;12537:127::-;12598:10;12593:3;12589:20;12586:1;12579:31;12629:4;12626:1;12619:15;12653:4;12650:1;12643:15;12669:135;12708:3;12729:17;;;12726:43;;12749:18;;:::i;:::-;-1:-1:-1;12796:1:34;12785:13;;12669:135::o;13162:258::-;13234:1;13244:113;13258:6;13255:1;13252:13;13244:113;;;13334:11;;;13328:18;13315:11;;;13308:39;13280:2;13273:10;13244:113;;;13375:6;13372:1;13369:13;13366:48;;;-1:-1:-1;;13410:1:34;13392:16;;13385:27;13162:258::o;13425:274::-;13554:3;13592:6;13586:13;13608:53;13654:6;13649:3;13642:4;13634:6;13630:17;13608:53;:::i;:::-;13677:16;;;;;13425:274;-1:-1:-1;;13425:274:34:o;13704:160::-;13781:13;;13834:4;13823:16;;13813:27;;13803:55;;13854:1;13851;13844:12;13869:204;13937:6;13990:2;13978:9;13969:7;13965:23;13961:32;13958:52;;;14006:1;14003;13996:12;13958:52;14029:38;14057:9;14029:38;:::i;14781:428::-;14834:5;14887:3;14880:4;14872:6;14868:17;14864:27;14854:55;;14905:1;14902;14895:12;14854:55;14934:6;14928:13;14965:48;14981:31;15009:2;14981:31;:::i;14965:48::-;15038:2;15029:7;15022:19;15084:3;15077:4;15072:2;15064:6;15060:15;15056:26;15053:35;15050:55;;;15101:1;15098;15091:12;15050:55;15114:64;15175:2;15168:4;15159:7;15155:18;15148:4;15140:6;15136:17;15114:64;:::i;15214:335::-;15293:6;15346:2;15334:9;15325:7;15321:23;15317:32;15314:52;;;15362:1;15359;15352:12;15314:52;15395:9;15389:16;-1:-1:-1;;;;;15420:6:34;15417:30;15414:50;;;15460:1;15457;15450:12;15414:50;15483:60;15535:7;15526:6;15515:9;15511:22;15483:60;:::i;15554:257::-;15595:3;15633:5;15627:12;15660:6;15655:3;15648:19;15676:63;15732:6;15725:4;15720:3;15716:14;15709:4;15702:5;15698:16;15676:63;:::i;:::-;15793:2;15772:15;-1:-1:-1;;15768:29:34;15759:39;;;;15800:4;15755:50;;15554:257;-1:-1:-1;;15554:257:34:o;15816:800::-;15976:4;16005:2;16045;16034:9;16030:18;16075:2;16064:9;16057:21;16098:6;16133;16127:13;16164:6;16156;16149:22;16202:2;16191:9;16187:18;16180:25;;16264:2;16254:6;16251:1;16247:14;16236:9;16232:30;16228:39;16214:53;;16302:2;16294:6;16290:15;16323:1;16333:254;16347:6;16344:1;16341:13;16333:254;;;16440:2;16436:7;16424:9;16416:6;16412:22;16408:36;16403:3;16396:49;16468:39;16500:6;16491;16485:13;16468:39;:::i;:::-;16458:49;-1:-1:-1;16565:12:34;;;;16530:15;;;;16369:1;16362:9;16333:254;;;-1:-1:-1;16604:6:34;;15816:800;-1:-1:-1;;;;;;;15816:800:34:o;17028:127::-;17089:10;17084:3;17080:20;17077:1;17070:31;17120:4;17117:1;17110:15;17144:4;17141:1;17134:15;17160:112;17192:1;17218;17208:35;;17223:18;;:::i;:::-;-1:-1:-1;17257:9:34;;17160:112::o;17277:120::-;17317:1;17343;17333:35;;17348:18;;:::i;:::-;-1:-1:-1;17382:9:34;;17277:120::o;17402:127::-;17463:10;17458:3;17454:20;17451:1;17444:31;17494:4;17491:1;17484:15;17518:4;17515:1;17508:15;17534:128;17574:3;17605:1;17601:6;17598:1;17595:13;17592:39;;;17611:18;;:::i;:::-;-1:-1:-1;17647:9:34;;17534:128::o;18786:195::-;18824:4;18861;18858:1;18854:12;18893:4;18890:1;18886:12;18918:3;18913;18910:12;18907:38;;;18925:18;;:::i;:::-;18962:13;;;18786:195;-1:-1:-1;;;18786:195:34:o;18986:422::-;19075:1;19118:5;19075:1;19132:270;19153:7;19143:8;19140:21;19132:270;;;19212:4;19208:1;19204:6;19200:17;19194:4;19191:27;19188:53;;;19221:18;;:::i;:::-;19271:7;19261:8;19257:22;19254:55;;;19291:16;;;;19254:55;19370:22;;;;19330:15;;;;19132:270;;;19136:3;18986:422;;;;;:::o;19413:806::-;19462:5;19492:8;19482:80;;-1:-1:-1;19533:1:34;19547:5;;19482:80;19581:4;19571:76;;-1:-1:-1;19618:1:34;19632:5;;19571:76;19663:4;19681:1;19676:59;;;;19749:1;19744:130;;;;19656:218;;19676:59;19706:1;19697:10;;19720:5;;;19744:130;19781:3;19771:8;19768:17;19765:43;;;19788:18;;:::i;:::-;-1:-1:-1;;19844:1:34;19830:16;;19859:5;;19656:218;;19958:2;19948:8;19945:16;19939:3;19933:4;19930:13;19926:36;19920:2;19910:8;19907:16;19902:2;19896:4;19893:12;19889:35;19886:77;19883:159;;;-1:-1:-1;19995:19:34;;;20027:5;;19883:159;20074:34;20099:8;20093:4;20074:34;:::i;:::-;20144:6;20140:1;20136:6;20132:19;20123:7;20120:32;20117:58;;;20155:18;;:::i;:::-;20193:20;;19413:806;-1:-1:-1;;;19413:806:34:o;20224:140::-;20282:5;20311:47;20352:4;20342:8;20338:19;20332:4;20311:47;:::i;21684:125::-;21724:4;21752:1;21749;21746:8;21743:34;;;21757:18;;:::i;:::-;-1:-1:-1;21794:9:34;;21684:125::o;25580:270::-;25619:7;-1:-1:-1;;;;;25696:2:34;25693:1;25689:10;25726:2;25723:1;25719:10;25782:3;25778:2;25774:12;25769:3;25766:21;25759:3;25752:11;25745:19;25741:47;25738:73;;;25791:18;;:::i;:::-;25831:13;;25580:270;-1:-1:-1;;;;25580:270:34:o;26671:164::-;26747:13;;26796;;26789:21;26779:32;;26769:60;;26825:1;26822;26815:12;26840:202;26907:6;26960:2;26948:9;26939:7;26935:23;26931:32;26928:52;;;26976:1;26973;26966:12;26928:52;26999:37;27026:9;26999:37;:::i;27458:217::-;27605:2;27594:9;27587:21;27568:4;27625:44;27665:2;27654:9;27650:18;27642:6;27625:44;:::i;27680:167::-;27758:13;;27811:10;27800:22;;27790:33;;27780:61;;27837:1;27834;27827:12;27852:136;27930:13;;27952:30;27930:13;27952:30;:::i;27993:136::-;28071:13;;28093:30;28071:13;28093:30;:::i;28134:1140::-;28208:5;28261:3;28254:4;28246:6;28242:17;28238:27;28228:55;;28279:1;28276;28269:12;28228:55;28308:6;28302:13;28334:4;28358:60;28374:43;28414:2;28374:43;:::i;28358:60::-;28452:15;;;28538:1;28534:10;;;;28522:23;;28518:32;;;28483:12;;;;28562:15;;;28559:35;;;28590:1;28587;28580:12;28559:35;28626:2;28618:6;28614:15;28638:607;28654:6;28649:3;28646:15;28638:607;;;28732:4;28726:3;28721;28717:13;28713:24;28710:114;;;28778:1;28807:2;28803;28796:14;28710:114;28850:22;;:::i;:::-;28905:3;28899:10;28892:5;28885:25;28961:2;28956:3;28952:12;28946:19;28941:2;28934:5;28930:14;28923:43;28989:2;29027:41;29064:2;29059:3;29055:12;29027:41;:::i;:::-;29011:14;;;29004:65;29092:2;29130:41;29158:12;;;29130:41;:::i;:::-;29114:14;;;29107:65;29185:18;;29223:12;;;;28680:4;28671:14;28638:607;;29279:1785;29395:6;29403;29411;29464:2;29452:9;29443:7;29439:23;29435:32;29432:52;;;29480:1;29477;29470:12;29432:52;29513:9;29507:16;-1:-1:-1;;;;;29583:2:34;29575:6;29572:14;29569:34;;;29599:1;29596;29589:12;29569:34;29622:22;;;;29678:6;29660:16;;;29656:29;29653:49;;;29698:1;29695;29688:12;29653:49;29724:22;;:::i;:::-;29769:31;29797:2;29769:31;:::i;:::-;29762:5;29755:46;29833:41;29870:2;29866;29862:11;29833:41;:::i;:::-;29828:2;29821:5;29817:14;29810:65;29907:41;29944:2;29940;29936:11;29907:41;:::i;:::-;29902:2;29895:5;29891:14;29884:65;29981:41;30018:2;30014;30010:11;29981:41;:::i;:::-;29976:2;29969:5;29965:14;29958:65;30070:3;30066:2;30062:12;30056:19;30050:3;30043:5;30039:15;30032:44;30109:42;30146:3;30142:2;30138:12;30109:42;:::i;:::-;30103:3;30096:5;30092:15;30085:67;30185:41;30221:3;30217:2;30213:12;30185:41;:::i;:::-;30179:3;30172:5;30168:15;30161:66;30266:3;30262:2;30258:12;30252:19;30296:2;30286:8;30283:16;30280:36;;;30312:1;30309;30302:12;30280:36;30349:55;30396:7;30385:8;30381:2;30377:17;30349:55;:::i;:::-;30343:3;30336:5;30332:15;30325:80;;30424:3;30459:41;30496:2;30492;30488:11;30459:41;:::i;:::-;30443:14;;;30436:65;30520:3;30554:11;;;30548:18;30578:16;;;30575:36;;;30607:1;30604;30597:12;30575:36;30643:76;30711:7;30700:8;30696:2;30692:17;30643:76;:::i;:::-;30627:14;;;30620:100;;;;-1:-1:-1;30739:3:34;30780:11;;;30774:18;30758:14;;;30751:42;30631:5;-1:-1:-1;30836:46:34;30878:2;30863:18;;30836:46;:::i;:::-;30826:56;;30928:2;30917:9;30913:18;30907:25;30891:41;;30957:2;30947:8;30944:16;30941:36;;;30973:1;30970;30963:12;30941:36;;30996:62;31050:7;31039:8;31028:9;31024:24;30996:62;:::i;:::-;30986:72;;;29279:1785;;;;;:::o;33449:249::-;33518:6;33571:2;33559:9;33550:7;33546:23;33542:32;33539:52;;;33587:1;33584;33577:12;33539:52;33619:9;33613:16;33638:30;33662:5;33638:30;:::i;33703:229::-;33742:4;-1:-1:-1;;;;;33839:10:34;;;;33809;;33861:12;;;33858:38;;;33876:18;;:::i;:::-;33913:13;;33703:229;-1:-1:-1;;;33703:229:34:o;33937:236::-;33976:3;-1:-1:-1;;;;;34049:2:34;34046:1;34042:10;34079:2;34076:1;34072:10;34110:3;34106:2;34102:12;34097:3;34094:21;34091:47;;;34118:18;;:::i;:::-;34154:13;;33937:236;-1:-1:-1;;;;33937:236:34:o;36993:184::-;37063:6;37116:2;37104:9;37095:7;37091:23;37087:32;37084:52;;;37132:1;37129;37122:12;37084:52;-1:-1:-1;37155:16:34;;36993:184;-1:-1:-1;36993:184:34:o;37787:827::-;37880:6;37933:3;37921:9;37912:7;37908:23;37904:33;37901:53;;;37950:1;37947;37940:12;37901:53;37983:2;37977:9;38025:3;38017:6;38013:16;38095:6;38083:10;38080:22;-1:-1:-1;;;;;38047:10:34;38044:34;38041:62;38038:88;;;38106:18;;:::i;:::-;38142:2;38135:22;38179:16;;38204:29;38179:16;38204:29;:::i;:::-;38242:21;;38308:2;38293:18;;38287:25;38321:32;38287:25;38321:32;:::i;:::-;38381:2;38369:15;;38362:32;38439:2;38424:18;;38418:25;38452:31;38418:25;38452:31;:::i;:::-;38511:2;38499:15;;38492:32;38578:2;38563:18;;;38557:25;38540:15;;;38533:50;;;;-1:-1:-1;38503:6:34;37787:827;-1:-1:-1;37787:827:34:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "completeBorrow(bytes)": "d0a6998a",
    "completeDeposit(bytes)": "eaf4a0ae",
    "completeRepay(bytes)": "23909f0a",
    "completeWithdraw(bytes)": "1d92aa84",
    "denormalizeAmount(uint256,uint256,uint8)": "02678ade",
    "getAssetInfo(address)": "afad2e16",
    "getGlobalBalance(address)": "6c7d83cf",
    "getInterestAccrualIndexPrecision()": "a1424f26",
    "getInterestAccrualIndices(address)": "e80a03f3",
    "getUserBalance(address,address)": "6805d6ad",
    "liquidation(address,address[],uint256[],address[],uint256[])": "0942e292",
    "normalizeAmount(uint256,uint256,uint8)": "be761a05",
    "owner()": "8da5cb5b",
    "registerAsset(address,uint256,uint256,uint64,uint256[],uint256[],uint256,uint256,bytes32)": "8e7eb00a",
    "registerSpoke(uint16,address)": "c52ddc0e",
    "renounceOwnership()": "715018a6",
    "setMockPythFeed(bytes32,int64,uint64,int32,int64,uint64,uint64)": "d3cc2e48",
    "setOraclePrice(bytes32,(int64,uint64,int32,uint256))": "6cc0b5fe",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wormhole\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBridge\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pythAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"oracleMode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"priceStandardDeviations\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"priceStandardDeviationsPrecision\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationPortion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationPortionPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestAccrualIndexPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralizationRatioPrecision\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"completeBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"completeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"completeRepay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMessage\",\"type\":\"bytes\"}],\"name\":\"completeWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"normalizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestAccrualIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum HubSpokeStructs.Round\",\"name\":\"round\",\"type\":\"uint8\"}],\"name\":\"denormalizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"getAssetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateralizationRatioDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralizationRatioBorrow\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pythId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"ratePrecision\",\"type\":\"uint64\"},{\"internalType\":\"uint256[]\",\"name\":\"kinks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reservePrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct HubSpokeStructs.PiecewiseInterestRateModel\",\"name\":\"interestRateModel\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct HubSpokeStructs.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"getGlobalBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowed\",\"type\":\"uint256\"}],\"internalType\":\"struct HubSpokeStructs.VaultAmount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterestAccrualIndexPrecision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"getInterestAccrualIndices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowed\",\"type\":\"uint256\"}],\"internalType\":\"struct HubSpokeStructs.AccrualIndices\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowed\",\"type\":\"uint256\"}],\"internalType\":\"struct HubSpokeStructs.VaultAmount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assetRepayAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"assetRepayAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assetReceiptAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"assetReceiptAmounts\",\"type\":\"uint256[]\"}],\"name\":\"liquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"denormalizedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestAccrualIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum HubSpokeStructs.Round\",\"name\":\"round\",\"type\":\"uint8\"}],\"name\":\"normalizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralizationRatioDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralizationRatioBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"ratePrecision\",\"type\":\"uint64\"},{\"internalType\":\"uint256[]\",\"name\":\"kinks\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reservePrecision\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pythId\",\"type\":\"bytes32\"}],\"name\":\"registerAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"spokeContractAddress\",\"type\":\"address\"}],\"name\":\"registerSpoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"int64\",\"name\":\"emaPrice\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"emaConf\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"}],\"name\":\"setMockPythFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"oracleId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct HubSpokeStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"name\":\"setOraclePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"completeBorrow(bytes)\":{\"params\":{\"encodedMessage\":\": encoded Wormhole message with borrow information as the payload\"}},\"completeDeposit(bytes)\":{\"params\":{\"encodedMessage\":\": encoded Wormhole message with a TokenBridge message as the payload The TokenBridge message is used to complete a TokenBridge transfer of tokens to the Hub, and contains a payload of the deposit information\"}},\"completeRepay(bytes)\":{\"params\":{\"encodedMessage\":\": encoded Wormhole message with a TokenBridge message as the payload The TokenBridge message is used to complete a TokenBridge transfer of tokens to the Hub, and contains a payload of the repay information\"}},\"completeWithdraw(bytes)\":{\"params\":{\"encodedMessage\":\": encoded Wormhole message with withdraw information as the payload\"}},\"constructor\":{\"params\":{\"collateralizationRatioPrecision\":\": A precision number that allows us to represent our noninteger collateralization ratios as integers; we store each ratio as its true value multiplied by collateralizationRatioPrecision\",\"consistencyLevel\":\": Desired level of finality the Wormhole guardians will reach before signing the messages Note: consistencyLevel = 200 will result in an instant message, while all other values will wait for finality Recommended finality levels can be found here: https://book.wormhole.com/reference/contracts.html\",\"interestAccrualIndexPrecision\":\": A precision number that allows us to represent our noninteger interest accrual indices as integers; we store each index as its true value multiplied by interestAccrualIndexPrecision\",\"maxLiquidationBonus\":\": maxLiquidationBonus = (mlb * collateralizationRatioPrecision), where mlb is the multiplier such that if the fair value of a liquidator's repayed assets is v, the assets they receive can have a maximum of mlb*v in fair value. Fair value is computed using Pyth prices.\",\"maxLiquidationPortion\":\": maxLiquidationPortion = (mlp * maxLiquidationPortionPrecision), where mlp is the maximum fraction of the borrowed value vault that a liquidator can liquidate at once.\",\"maxLiquidationPortionPrecision\":\": A precision number that allows us to represent our desired noninteger max liquidation portion mlp as an integer (specifically, mlp = maxLiquidationPortion/maxLiquidationPortionPrecision)\",\"oracleMode\":\": Variable that should be 0 and exists only for testing purposes. If oracleMode = 0, Hub uses Pyth; if 1, Hub uses a mock Pyth for testing, and if 2, Hub uses a dummy oracle that can be manually set\",\"priceStandardDeviations\":\": priceStandardDeviations = (psd * priceStandardDeviationsPrecision), where psd is the number of standard deviations that we use for our price intervals in calculations relating to allowing withdraws, borrows, or liquidations\",\"priceStandardDeviationsPrecision\":\": A precision number that allows us to represent our desired noninteger price standard deviation as an integer (specifically, psd = priceStandardDeviations/priceStandardDeviationsPrecision)\",\"pythAddress\":\": Address of the Pyth oracle on the Hub chain\",\"tokenBridge\":\": Address of the TokenBridge contract on the Hub chain\",\"wormhole\":\": Address of the Wormhole contract on the Hub chain\"}},\"denormalizeAmount(uint256,uint256,uint8)\":{\"params\":{\"interestAccrualIndex\":\"- The amount of interest that has accrued, multiplied by getInterestAccrualIndexPrecision().\",\"normalizedAmount\":\"- The normalized amount of an asset\"},\"returns\":{\"_0\":\"{uint256} The true amount of the asset\"}},\"getGlobalBalance(address)\":{\"params\":{\"assetAddress\":\"- the address of the asset\"},\"returns\":{\"_0\":\"a struct with 'deposited' field and 'borrowed' field for the amount deposited and borrowed of the asset multiplied by 10^decimal for that asset. Values are denormalized.\"}},\"getUserBalance(address,address)\":{\"params\":{\"assetAddress\":\"- the address of the asset\",\"vaultOwner\":\"- the address of the user\"},\"returns\":{\"_0\":\"a struct with 'deposited' field and 'borrowed' field for the amount deposited and borrowed of the asset multiplied by 10^decimal for that asset. Values are denormalized.\"}},\"liquidation(address,address[],uint256[],address[],uint256[])\":{\"params\":{\"assetReceiptAddresses\":\"- An array of the addresses of the assets being received by the liquidator\",\"assetReceiptAmounts\":\"- An array of the amounts of the assets being received by the liquidator\",\"assetRepayAddresses\":\"- An array of the addresses of the assets being paid by the liquidator\",\"assetRepayAmounts\":\"- An array of the amounts of the assets being paid by the liquidator\",\"vault\":\"- the address of the vault\"}},\"normalizeAmount(uint256,uint256,uint8)\":{\"params\":{\"denormalizedAmount\":\"- The true amount of an asset\",\"interestAccrualIndex\":\"- The amount of interest that has accrued, multiplied by getInterestAccrualIndexPrecision(). So, (interestAccrualIndex/interestAccrualIndexPrecision) represents the interest accrued (this is initialized to 1 at the start of the protocol)\"},\"returns\":{\"_0\":\"{uint256} The normalized amount of the asset\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerAsset(address,uint256,uint256,uint64,uint256[],uint256[],uint256,uint256,bytes32)\":{\"params\":{\"assetAddress\":\": The address to be checked\",\"collateralizationRatioBorrow\":\": collateralizationRatioBorrow = crb * collateralizationRatioPrecision, where crb is such that when we calculate 'fair prices' to see if a vault, after an action, would have positive value, for purposes of allowing withdraws, borrows, or liquidations, we multiply any borrowed amount of this asset by crb. One way to think about crb is that for every '$1 worth' of effective deposits we allow $c worth of this asset borrowed\",\"collateralizationRatioDeposit\":\": collateralizationRatioDeposit = crd * collateralizationRatioPrecision, where crd is such that when we calculate 'fair prices' to see if a vault, after an action, would have positive value, for purposes of allowing withdraws, borrows, or liquidations, we multiply any deposited amount of this asset by crd.\",\"kinks\":\": x values of points on the piecewise linear curve, using ratePrecision for decimal expression\",\"pythId\":\": Id of the relevant oracle price feed (USD <-> asset)\",\"ratePrecision\":\": A precision number that allows us to represent noninteger rate intercept value ri and rate coefficient value rca as integers.\",\"rates\":\": y values of points on the piecewise linear curve, using ratePrecision for decimal expression;\",\"reserveFactor\":\": reserveFactor = rf * reservePrecision, The portion of the paid interest by borrowers that is diverted to the protocol for rainy day, the remainder is distributed among lenders of the asset\",\"reservePrecision\":\": A precision number that allows us to represent our noninteger reserve factor rf as an integer (specifically reserveFactor = rf * reservePrecision)\"}},\"registerSpoke(uint16,address)\":{\"params\":{\"chainId\":\"- The chain id which the spoke is deployed on\",\"spokeContractAddress\":\"- The address of the spoke contract on its chain\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"completeBorrow(bytes)\":{\"notice\":\"Completes a borrow that was initiated on a spoke\"},\"completeDeposit(bytes)\":{\"notice\":\"Completes a deposit that was initiated on a spoke\"},\"completeRepay(bytes)\":{\"notice\":\"Completes a repay that was initiated on a spoke\"},\"completeWithdraw(bytes)\":{\"notice\":\"Completes a withdraw that was initiated on a spoke\"},\"constructor\":{\"notice\":\"Hub constructor - Initializes a new hub with given parameters \"},\"denormalizeAmount(uint256,uint256,uint8)\":{\"notice\":\"Similar to 'normalizeAmount', takes a normalized value (amount of an asset) and denormalizes it.\"},\"getGlobalBalance(address)\":{\"notice\":\"Get the protocol's global balance in an asset\"},\"getUserBalance(address,address)\":{\"notice\":\"Get a user's account balance in an asset\"},\"liquidation(address,address[],uint256[],address[],uint256[])\":{\"notice\":\"Liquidates a vault. The sender of this transaction pays, for each i, assetRepayAmount[i] of the asset assetRepayAddresses[i] and receives, for each i, assetReceiptAmount[i] of the asset at assetReceiptAddresses[i]. A check is made to see if this liquidation attempt should be allowed\"},\"normalizeAmount(uint256,uint256,uint8)\":{\"notice\":\"Assets accrue interest over time, so at any given point in time the value of an asset is (amount of asset on day 1) * (the amount of interest that has accrued).\"},\"registerAsset(address,uint256,uint256,uint64,uint256[],uint256[],uint256,uint256,bytes32)\":{\"notice\":\"Registers asset on the hub. Only registered assets are allowed to be stored in the protocol.\"},\"registerSpoke(uint16,address)\":{\"notice\":\"Registers a spoke contract. Only wormhole messages from registered spoke contracts are allowed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lendingHub/Hub.sol\":\"Hub\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@pythnetwork/=node_modules/@pythnetwork/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/AbstractPyth.sol\":{\"keccak256\":\"0x6915425548e6ca40d6f74fdb624d3796e65dc997b0b667bbe68773ed907e53a2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cf3662d46549b56d1bdb8ff26eff03aec4695ea5674ecb92d231af07b82d8472\",\"dweb:/ipfs/QmeANvGvBmgegvFrLQX819kRidqyV3YwZwUfvCxKo5A9SG\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0x949c65c65fea0578c09a6fc068e09ed1165adede2c835984cefcb25d76de1de2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4d7cb071e08e81bb8b113a928f4c2d2b3cdf950ad64c6c7003ea3d874163ca77\",\"dweb:/ipfs/QmRbQchPxRTBMHi7WzLb8XnMGzPDQcWhu7i2u5naUsCRoZ\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0x048a35526c2e77d107d43ba336f1dcf31f64cef25ba429ae1f7a0fbc11c23320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b75be4c3643b22305995aba71fc92146dbf51fa82d2f9728c515d7749b32dca3\",\"dweb:/ipfs/QmRby4XA9jJQGhxoJ16BTUDuU7BzLFfadbfTgBiQsDgNyZ\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/MockPyth.sol\":{\"keccak256\":\"0x781097a6fd5bc1ab5d26fab94537772f1f9651b39ffa4636c4d294f61e77d4dc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://428d643745fbc8768e6cbef6ef909369a5a96174726b783ea00fd592e6479b02\",\"dweb:/ipfs/QmPcB4yczTSXAWEekPx4skdpgvrsuR6NkKbAUMPNfmWM9Q\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/PythErrors.sol\":{\"keccak256\":\"0x2684f05e118f9c2f387bc20dcc66a75c90bd29e9c844ec1312657428409dc0c6\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://77c8e0bc0247b51e5c36ad2e0a1820104d171c17a612ca7b40c77e542750ac9d\",\"dweb:/ipfs/QmPAXGfwhPW2Zy6fQNLRoABX2GwuQgWhK2B5icrU6gMeT7\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x95ff0a6d64517348ef604b8bcf246b561a9445d7e607b8f48491c617cfda9b65\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb7f4ffe03be7379d3833c5946e38153de26aef4a4da0323a1ec603787de9eb7\",\"dweb:/ipfs/QmW4WkkLPGjDJrLrW4mYfxtFh8e9KAcPhrnNdxPQsfkS6t\"]},\"src/contracts/HubSpokeMessages.sol\":{\"keccak256\":\"0xbd7eddd402e84ececac48891645f176cd5c7c1e900ea6c10535d79f5df711dfd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9f854584331c92ceedab8a9164a2d57ebde3aabbf081fd82c2862bddb978bf2\",\"dweb:/ipfs/QmTnJyxqnSq7n9o2FgGfV1RecQ2HTW8vJfPcCS9Qwig1No\"]},\"src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"src/contracts/lendingHub/Hub.sol\":{\"keccak256\":\"0x820f4c9961e5fc0091536f9d788e27cbd811236406bdc72c9c0d312b2cdd7365\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cbbce405d758fef15d0f11cff29f627db0e58fbbdaf933ab90f1cb35e16e7c96\",\"dweb:/ipfs/QmRJ5YAjJctd1H4Nhfryx4R7hDs2krNCE6h2eSJvAHAV5V\"]},\"src/contracts/lendingHub/HubChecks.sol\":{\"keccak256\":\"0x09b5e60afb5f1181c7d812f6cf72d3b470557bc7defafba54831caeb88f763a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ca97ca668805c6eb3c10f39814ad24c6908d1fe8e3d8604c6c6bc2e109a2def2\",\"dweb:/ipfs/QmToxroKs3k4HciDiop7aGvmvVtptQKrLUQszaNrZPWwrk\"]},\"src/contracts/lendingHub/HubGetters.sol\":{\"keccak256\":\"0xdc95ad283ad88a59d02e8e9b431c8ab6722f09a993381a8f9e357b6ad5c6317d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://83da2acc7f1b72011ab9dad097d983e71719f4c6129648cf5a363688d73ac3ad\",\"dweb:/ipfs/QmVGHyaUhxRq8ZP4kqUxrrsnXe8bHN3AgGMysjQ8QiQnqE\"]},\"src/contracts/lendingHub/HubInterestUtilities.sol\":{\"keccak256\":\"0x6e6c9bcca3bfadf2d20c0bfe3a9ffd6e3be0c736c3f4d4400f3565356dcc1f49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86cf380511a380b4f65670aae0e63af2b679702847d97233a6d9f1134e28a621\",\"dweb:/ipfs/QmUKZ3DGwbEkmQUYUv4HFsikEGMEaDmZdSXhG5Qr85U4aJ\"]},\"src/contracts/lendingHub/HubPriceUtilities.sol\":{\"keccak256\":\"0x31b71ac2252144476192dde7e887423362b91d26e6f8cdc2b9e70f64d4d20487\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://74d5b9ec2e2ad385c25151d4c4f94e9ee499c7941573a1b238f7f2cdc85ee1be\",\"dweb:/ipfs/QmPFXWLofh7JrNKjG7o6PjtgqCfkFy4GSJEjU2UBnxyAiZ\"]},\"src/contracts/lendingHub/HubSetters.sol\":{\"keccak256\":\"0x221e1cd4592aaf40c78bc5ccd3bdd7646c75ee64d6c0881a462a1a8c1fb1fe01\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1f82a44000b6eb459a6c92c72ece53f2eea17f0d7b6c46266477620767c1f117\",\"dweb:/ipfs/Qmdd6GLpbf3Gt7KxGv2kgsFMJefpmvojCxnAB1HGR3YBHw\"]},\"src/contracts/lendingHub/HubState.sol\":{\"keccak256\":\"0x73fc3545d741cf0f0e962d8d330dfbe24be479b2d5deffde5b083b89f08a5162\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a1fc5c805aae320486a0c17e0fdb324c5bddc9b2a9ac4de96f93838e2d7a3d79\",\"dweb:/ipfs/QmSsJL8fskDQaR19QHfZwSkLzVabGeMLpx7nZi3woJC8Vf\"]},\"src/contracts/lendingHub/HubWormholeUtilities.sol\":{\"keccak256\":\"0xaed5d234e18467b45e0a04a90eee615c8531bee2ec639a8bd3a75348e1ab24d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5271612f81b087d79dbfed323abc38907bb99ac2c7d198371b8d23a480ee12dd\",\"dweb:/ipfs/Qmed7ZtAHWsJcNETwCXk1UTPNo6QyewLGKdyKujNTyLjH3\"]},\"src/interfaces/IMockPyth.sol\":{\"keccak256\":\"0xbd37338655f3e255f6ebd691549a27053a15cbdd9de4406cf538a197e3638131\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://f7689621f9031bc01731ab49f8bdae82f95a66245b2b2bfb4b7256272e36b0ad\",\"dweb:/ipfs/QmNXaxmbwNKtvajgDnsk1Fmg2NZW4ML4k33pTPaGXP9h8Y\"]},\"src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]},\"src/libraries/external/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wormhole",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenBridge",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "consistencyLevel",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "pythAddress",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "oracleMode",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "priceStandardDeviations",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "priceStandardDeviationsPrecision",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "maxLiquidationBonus",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLiquidationPortion",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLiquidationPortionPrecision",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestAccrualIndexPrecision",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralizationRatioPrecision",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeBorrow"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeRepay"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedMessage",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "normalizedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestAccrualIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum HubSpokeStructs.Round",
              "name": "round",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "denormalizeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssetInfo",
          "outputs": [
            {
              "internalType": "struct HubSpokeStructs.AssetInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "collateralizationRatioDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralizationRatioBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "pythId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "struct HubSpokeStructs.PiecewiseInterestRateModel",
                  "name": "interestRateModel",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "ratePrecision",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "kinks",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "rates",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveFactor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reservePrecision",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalBalance",
          "outputs": [
            {
              "internalType": "struct HubSpokeStructs.VaultAmount",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "deposited",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowed",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInterestAccrualIndexPrecision",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInterestAccrualIndices",
          "outputs": [
            {
              "internalType": "struct HubSpokeStructs.AccrualIndices",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "deposited",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowed",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vaultOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserBalance",
          "outputs": [
            {
              "internalType": "struct HubSpokeStructs.VaultAmount",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "deposited",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowed",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "assetRepayAddresses",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "assetRepayAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "assetReceiptAddresses",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "assetReceiptAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "denormalizedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestAccrualIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum HubSpokeStructs.Round",
              "name": "round",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "normalizeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralizationRatioDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralizationRatioBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "ratePrecision",
              "type": "uint64"
            },
            {
              "internalType": "uint256[]",
              "name": "kinks",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "rates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reservePrecision",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "pythId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "spokeContractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerSpoke"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "int64",
              "name": "price",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "conf",
              "type": "uint64"
            },
            {
              "internalType": "int32",
              "name": "expo",
              "type": "int32"
            },
            {
              "internalType": "int64",
              "name": "emaPrice",
              "type": "int64"
            },
            {
              "internalType": "uint64",
              "name": "emaConf",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "publishTime",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMockPythFeed"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "oracleId",
              "type": "bytes32"
            },
            {
              "internalType": "struct HubSpokeStructs.Price",
              "name": "price",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int64",
                  "name": "price",
                  "type": "int64"
                },
                {
                  "internalType": "uint64",
                  "name": "conf",
                  "type": "uint64"
                },
                {
                  "internalType": "int32",
                  "name": "expo",
                  "type": "int32"
                },
                {
                  "internalType": "uint256",
                  "name": "publishTime",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOraclePrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "completeBorrow(bytes)": {
            "params": {
              "encodedMessage": ": encoded Wormhole message with borrow information as the payload"
            }
          },
          "completeDeposit(bytes)": {
            "params": {
              "encodedMessage": ": encoded Wormhole message with a TokenBridge message as the payload The TokenBridge message is used to complete a TokenBridge transfer of tokens to the Hub, and contains a payload of the deposit information"
            }
          },
          "completeRepay(bytes)": {
            "params": {
              "encodedMessage": ": encoded Wormhole message with a TokenBridge message as the payload The TokenBridge message is used to complete a TokenBridge transfer of tokens to the Hub, and contains a payload of the repay information"
            }
          },
          "completeWithdraw(bytes)": {
            "params": {
              "encodedMessage": ": encoded Wormhole message with withdraw information as the payload"
            }
          },
          "constructor": {
            "params": {
              "collateralizationRatioPrecision": ": A precision number that allows us to represent our noninteger collateralization ratios as integers; we store each ratio as its true value multiplied by collateralizationRatioPrecision",
              "consistencyLevel": ": Desired level of finality the Wormhole guardians will reach before signing the messages Note: consistencyLevel = 200 will result in an instant message, while all other values will wait for finality Recommended finality levels can be found here: https://book.wormhole.com/reference/contracts.html",
              "interestAccrualIndexPrecision": ": A precision number that allows us to represent our noninteger interest accrual indices as integers; we store each index as its true value multiplied by interestAccrualIndexPrecision",
              "maxLiquidationBonus": ": maxLiquidationBonus = (mlb * collateralizationRatioPrecision), where mlb is the multiplier such that if the fair value of a liquidator's repayed assets is v, the assets they receive can have a maximum of mlb*v in fair value. Fair value is computed using Pyth prices.",
              "maxLiquidationPortion": ": maxLiquidationPortion = (mlp * maxLiquidationPortionPrecision), where mlp is the maximum fraction of the borrowed value vault that a liquidator can liquidate at once.",
              "maxLiquidationPortionPrecision": ": A precision number that allows us to represent our desired noninteger max liquidation portion mlp as an integer (specifically, mlp = maxLiquidationPortion/maxLiquidationPortionPrecision)",
              "oracleMode": ": Variable that should be 0 and exists only for testing purposes. If oracleMode = 0, Hub uses Pyth; if 1, Hub uses a mock Pyth for testing, and if 2, Hub uses a dummy oracle that can be manually set",
              "priceStandardDeviations": ": priceStandardDeviations = (psd * priceStandardDeviationsPrecision), where psd is the number of standard deviations that we use for our price intervals in calculations relating to allowing withdraws, borrows, or liquidations",
              "priceStandardDeviationsPrecision": ": A precision number that allows us to represent our desired noninteger price standard deviation as an integer (specifically, psd = priceStandardDeviations/priceStandardDeviationsPrecision)",
              "pythAddress": ": Address of the Pyth oracle on the Hub chain",
              "tokenBridge": ": Address of the TokenBridge contract on the Hub chain",
              "wormhole": ": Address of the Wormhole contract on the Hub chain"
            }
          },
          "denormalizeAmount(uint256,uint256,uint8)": {
            "params": {
              "interestAccrualIndex": "- The amount of interest that has accrued, multiplied by getInterestAccrualIndexPrecision().",
              "normalizedAmount": "- The normalized amount of an asset"
            },
            "returns": {
              "_0": "{uint256} The true amount of the asset"
            }
          },
          "getGlobalBalance(address)": {
            "params": {
              "assetAddress": "- the address of the asset"
            },
            "returns": {
              "_0": "a struct with 'deposited' field and 'borrowed' field for the amount deposited and borrowed of the asset multiplied by 10^decimal for that asset. Values are denormalized."
            }
          },
          "getUserBalance(address,address)": {
            "params": {
              "assetAddress": "- the address of the asset",
              "vaultOwner": "- the address of the user"
            },
            "returns": {
              "_0": "a struct with 'deposited' field and 'borrowed' field for the amount deposited and borrowed of the asset multiplied by 10^decimal for that asset. Values are denormalized."
            }
          },
          "liquidation(address,address[],uint256[],address[],uint256[])": {
            "params": {
              "assetReceiptAddresses": "- An array of the addresses of the assets being received by the liquidator",
              "assetReceiptAmounts": "- An array of the amounts of the assets being received by the liquidator",
              "assetRepayAddresses": "- An array of the addresses of the assets being paid by the liquidator",
              "assetRepayAmounts": "- An array of the amounts of the assets being paid by the liquidator",
              "vault": "- the address of the vault"
            }
          },
          "normalizeAmount(uint256,uint256,uint8)": {
            "params": {
              "denormalizedAmount": "- The true amount of an asset",
              "interestAccrualIndex": "- The amount of interest that has accrued, multiplied by getInterestAccrualIndexPrecision(). So, (interestAccrualIndex/interestAccrualIndexPrecision) represents the interest accrued (this is initialized to 1 at the start of the protocol)"
            },
            "returns": {
              "_0": "{uint256} The normalized amount of the asset"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "registerAsset(address,uint256,uint256,uint64,uint256[],uint256[],uint256,uint256,bytes32)": {
            "params": {
              "assetAddress": ": The address to be checked",
              "collateralizationRatioBorrow": ": collateralizationRatioBorrow = crb * collateralizationRatioPrecision, where crb is such that when we calculate 'fair prices' to see if a vault, after an action, would have positive value, for purposes of allowing withdraws, borrows, or liquidations, we multiply any borrowed amount of this asset by crb. One way to think about crb is that for every '$1 worth' of effective deposits we allow $c worth of this asset borrowed",
              "collateralizationRatioDeposit": ": collateralizationRatioDeposit = crd * collateralizationRatioPrecision, where crd is such that when we calculate 'fair prices' to see if a vault, after an action, would have positive value, for purposes of allowing withdraws, borrows, or liquidations, we multiply any deposited amount of this asset by crd.",
              "kinks": ": x values of points on the piecewise linear curve, using ratePrecision for decimal expression",
              "pythId": ": Id of the relevant oracle price feed (USD <-> asset)",
              "ratePrecision": ": A precision number that allows us to represent noninteger rate intercept value ri and rate coefficient value rca as integers.",
              "rates": ": y values of points on the piecewise linear curve, using ratePrecision for decimal expression;",
              "reserveFactor": ": reserveFactor = rf * reservePrecision, The portion of the paid interest by borrowers that is diverted to the protocol for rainy day, the remainder is distributed among lenders of the asset",
              "reservePrecision": ": A precision number that allows us to represent our noninteger reserve factor rf as an integer (specifically reserveFactor = rf * reservePrecision)"
            }
          },
          "registerSpoke(uint16,address)": {
            "params": {
              "chainId": "- The chain id which the spoke is deployed on",
              "spokeContractAddress": "- The address of the spoke contract on its chain"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "completeBorrow(bytes)": {
            "notice": "Completes a borrow that was initiated on a spoke"
          },
          "completeDeposit(bytes)": {
            "notice": "Completes a deposit that was initiated on a spoke"
          },
          "completeRepay(bytes)": {
            "notice": "Completes a repay that was initiated on a spoke"
          },
          "completeWithdraw(bytes)": {
            "notice": "Completes a withdraw that was initiated on a spoke"
          },
          "constructor": {
            "notice": "Hub constructor - Initializes a new hub with given parameters "
          },
          "denormalizeAmount(uint256,uint256,uint8)": {
            "notice": "Similar to 'normalizeAmount', takes a normalized value (amount of an asset) and denormalizes it."
          },
          "getGlobalBalance(address)": {
            "notice": "Get the protocol's global balance in an asset"
          },
          "getUserBalance(address,address)": {
            "notice": "Get a user's account balance in an asset"
          },
          "liquidation(address,address[],uint256[],address[],uint256[])": {
            "notice": "Liquidates a vault. The sender of this transaction pays, for each i, assetRepayAmount[i] of the asset assetRepayAddresses[i] and receives, for each i, assetReceiptAmount[i] of the asset at assetReceiptAddresses[i]. A check is made to see if this liquidation attempt should be allowed"
          },
          "normalizeAmount(uint256,uint256,uint8)": {
            "notice": "Assets accrue interest over time, so at any given point in time the value of an asset is (amount of asset on day 1) * (the amount of interest that has accrued)."
          },
          "registerAsset(address,uint256,uint256,uint64,uint256[],uint256[],uint256,uint256,bytes32)": {
            "notice": "Registers asset on the hub. Only registered assets are allowed to be stored in the protocol."
          },
          "registerSpoke(uint16,address)": {
            "notice": "Registers a spoke contract. Only wormhole messages from registered spoke contracts are allowed."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@pythnetwork/=node_modules/@pythnetwork/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/lendingHub/Hub.sol": "Hub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/AbstractPyth.sol": {
        "keccak256": "0x6915425548e6ca40d6f74fdb624d3796e65dc997b0b667bbe68773ed907e53a2",
        "urls": [
          "bzz-raw://cf3662d46549b56d1bdb8ff26eff03aec4695ea5674ecb92d231af07b82d8472",
          "dweb:/ipfs/QmeANvGvBmgegvFrLQX819kRidqyV3YwZwUfvCxKo5A9SG"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
        "keccak256": "0x949c65c65fea0578c09a6fc068e09ed1165adede2c835984cefcb25d76de1de2",
        "urls": [
          "bzz-raw://4d7cb071e08e81bb8b113a928f4c2d2b3cdf950ad64c6c7003ea3d874163ca77",
          "dweb:/ipfs/QmRbQchPxRTBMHi7WzLb8XnMGzPDQcWhu7i2u5naUsCRoZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
        "keccak256": "0x048a35526c2e77d107d43ba336f1dcf31f64cef25ba429ae1f7a0fbc11c23320",
        "urls": [
          "bzz-raw://b75be4c3643b22305995aba71fc92146dbf51fa82d2f9728c515d7749b32dca3",
          "dweb:/ipfs/QmRby4XA9jJQGhxoJ16BTUDuU7BzLFfadbfTgBiQsDgNyZ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/MockPyth.sol": {
        "keccak256": "0x781097a6fd5bc1ab5d26fab94537772f1f9651b39ffa4636c4d294f61e77d4dc",
        "urls": [
          "bzz-raw://428d643745fbc8768e6cbef6ef909369a5a96174726b783ea00fd592e6479b02",
          "dweb:/ipfs/QmPcB4yczTSXAWEekPx4skdpgvrsuR6NkKbAUMPNfmWM9Q"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/PythErrors.sol": {
        "keccak256": "0x2684f05e118f9c2f387bc20dcc66a75c90bd29e9c844ec1312657428409dc0c6",
        "urls": [
          "bzz-raw://77c8e0bc0247b51e5c36ad2e0a1820104d171c17a612ca7b40c77e542750ac9d",
          "dweb:/ipfs/QmPAXGfwhPW2Zy6fQNLRoABX2GwuQgWhK2B5icrU6gMeT7"
        ],
        "license": "Apache 2"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
        "keccak256": "0x95ff0a6d64517348ef604b8bcf246b561a9445d7e607b8f48491c617cfda9b65",
        "urls": [
          "bzz-raw://fb7f4ffe03be7379d3833c5946e38153de26aef4a4da0323a1ec603787de9eb7",
          "dweb:/ipfs/QmW4WkkLPGjDJrLrW4mYfxtFh8e9KAcPhrnNdxPQsfkS6t"
        ],
        "license": "Apache-2.0"
      },
      "src/contracts/HubSpokeMessages.sol": {
        "keccak256": "0xbd7eddd402e84ececac48891645f176cd5c7c1e900ea6c10535d79f5df711dfd",
        "urls": [
          "bzz-raw://b9f854584331c92ceedab8a9164a2d57ebde3aabbf081fd82c2862bddb978bf2",
          "dweb:/ipfs/QmTnJyxqnSq7n9o2FgGfV1RecQ2HTW8vJfPcCS9Qwig1No"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/HubSpokeStructs.sol": {
        "keccak256": "0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc",
        "urls": [
          "bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e",
          "dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/Hub.sol": {
        "keccak256": "0x820f4c9961e5fc0091536f9d788e27cbd811236406bdc72c9c0d312b2cdd7365",
        "urls": [
          "bzz-raw://cbbce405d758fef15d0f11cff29f627db0e58fbbdaf933ab90f1cb35e16e7c96",
          "dweb:/ipfs/QmRJ5YAjJctd1H4Nhfryx4R7hDs2krNCE6h2eSJvAHAV5V"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubChecks.sol": {
        "keccak256": "0x09b5e60afb5f1181c7d812f6cf72d3b470557bc7defafba54831caeb88f763a9",
        "urls": [
          "bzz-raw://ca97ca668805c6eb3c10f39814ad24c6908d1fe8e3d8604c6c6bc2e109a2def2",
          "dweb:/ipfs/QmToxroKs3k4HciDiop7aGvmvVtptQKrLUQszaNrZPWwrk"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubGetters.sol": {
        "keccak256": "0xdc95ad283ad88a59d02e8e9b431c8ab6722f09a993381a8f9e357b6ad5c6317d",
        "urls": [
          "bzz-raw://83da2acc7f1b72011ab9dad097d983e71719f4c6129648cf5a363688d73ac3ad",
          "dweb:/ipfs/QmVGHyaUhxRq8ZP4kqUxrrsnXe8bHN3AgGMysjQ8QiQnqE"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubInterestUtilities.sol": {
        "keccak256": "0x6e6c9bcca3bfadf2d20c0bfe3a9ffd6e3be0c736c3f4d4400f3565356dcc1f49",
        "urls": [
          "bzz-raw://86cf380511a380b4f65670aae0e63af2b679702847d97233a6d9f1134e28a621",
          "dweb:/ipfs/QmUKZ3DGwbEkmQUYUv4HFsikEGMEaDmZdSXhG5Qr85U4aJ"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubPriceUtilities.sol": {
        "keccak256": "0x31b71ac2252144476192dde7e887423362b91d26e6f8cdc2b9e70f64d4d20487",
        "urls": [
          "bzz-raw://74d5b9ec2e2ad385c25151d4c4f94e9ee499c7941573a1b238f7f2cdc85ee1be",
          "dweb:/ipfs/QmPFXWLofh7JrNKjG7o6PjtgqCfkFy4GSJEjU2UBnxyAiZ"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubSetters.sol": {
        "keccak256": "0x221e1cd4592aaf40c78bc5ccd3bdd7646c75ee64d6c0881a462a1a8c1fb1fe01",
        "urls": [
          "bzz-raw://1f82a44000b6eb459a6c92c72ece53f2eea17f0d7b6c46266477620767c1f117",
          "dweb:/ipfs/Qmdd6GLpbf3Gt7KxGv2kgsFMJefpmvojCxnAB1HGR3YBHw"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubState.sol": {
        "keccak256": "0x73fc3545d741cf0f0e962d8d330dfbe24be479b2d5deffde5b083b89f08a5162",
        "urls": [
          "bzz-raw://a1fc5c805aae320486a0c17e0fdb324c5bddc9b2a9ac4de96f93838e2d7a3d79",
          "dweb:/ipfs/QmSsJL8fskDQaR19QHfZwSkLzVabGeMLpx7nZi3woJC8Vf"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingHub/HubWormholeUtilities.sol": {
        "keccak256": "0xaed5d234e18467b45e0a04a90eee615c8531bee2ec639a8bd3a75348e1ab24d0",
        "urls": [
          "bzz-raw://5271612f81b087d79dbfed323abc38907bb99ac2c7d198371b8d23a480ee12dd",
          "dweb:/ipfs/Qmed7ZtAHWsJcNETwCXk1UTPNo6QyewLGKdyKujNTyLjH3"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IMockPyth.sol": {
        "keccak256": "0xbd37338655f3e255f6ebd691549a27053a15cbdd9de4406cf538a197e3638131",
        "urls": [
          "bzz-raw://f7689621f9031bc01731ab49f8bdae82f95a66245b2b2bfb4b7256272e36b0ad",
          "dweb:/ipfs/QmNXaxmbwNKtvajgDnsk1Fmg2NZW4ML4k33pTPaGXP9h8Y"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/ITokenBridge.sol": {
        "keccak256": "0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17",
        "urls": [
          "bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae",
          "dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/IWETH.sol": {
        "keccak256": "0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e",
        "urls": [
          "bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60",
          "dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/IWormhole.sol": {
        "keccak256": "0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216",
        "urls": [
          "bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563",
          "dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8"
        ],
        "license": "Apache 2"
      },
      "src/libraries/external/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/lendingHub/Hub.sol",
    "id": 10822,
    "exportedSymbols": {
      "AbstractPyth": [
        9180
      ],
      "BytesLib": [
        15414
      ],
      "Context": [
        8888
      ],
      "Hub": [
        10821
      ],
      "HubChecks": [
        11508
      ],
      "HubGetters": [
        11878
      ],
      "HubInterestUtilities": [
        12350
      ],
      "HubPriceUtilities": [
        12752
      ],
      "HubSetters": [
        13332
      ],
      "HubSpokeMessages": [
        9911
      ],
      "HubSpokeStructs": [
        9991
      ],
      "HubState": [
        13438
      ],
      "HubStorage": [
        13432
      ],
      "HubWormholeUtilities": [
        13764
      ],
      "IERC20": [
        8254
      ],
      "IMockPyth": [
        14532
      ],
      "IPyth": [
        9299
      ],
      "IPythEvents": [
        9321
      ],
      "ITokenBridge": [
        14932
      ],
      "IWETH": [
        14959
      ],
      "IWormhole": [
        15081
      ],
      "MockPyth": [
        9764
      ],
      "Ownable": [
        8176
      ],
      "PythErrors": [
        9793
      ],
      "PythStructs": [
        9814
      ],
      "SafeERC20": [
        8571
      ],
      "console": [
        8063
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:16857:15",
    "nodes": [
      {
        "id": 9993,
        "nodeType": "PragmaDirective",
        "src": "39:23:15",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 9995,
        "nodeType": "ImportDirective",
        "src": "64:82:15",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 8572,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9994,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8571,
              "src": "72:9:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9997,
        "nodeType": "ImportDirective",
        "src": "147:70:15",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 8255,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9996,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8254,
              "src": "155:6:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9998,
        "nodeType": "ImportDirective",
        "src": "219:40:15",
        "nodes": [],
        "absolutePath": "src/interfaces/IWormhole.sol",
        "file": "../../interfaces/IWormhole.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 15082,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9999,
        "nodeType": "ImportDirective",
        "src": "261:26:15",
        "nodes": [],
        "absolutePath": "src/contracts/lendingHub/HubSetters.sol",
        "file": "./HubSetters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 13333,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10000,
        "nodeType": "ImportDirective",
        "src": "288:32:15",
        "nodes": [],
        "absolutePath": "src/contracts/HubSpokeStructs.sol",
        "file": "../HubSpokeStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 9992,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10001,
        "nodeType": "ImportDirective",
        "src": "321:33:15",
        "nodes": [],
        "absolutePath": "src/contracts/HubSpokeMessages.sol",
        "file": "../HubSpokeMessages.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 9912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10002,
        "nodeType": "ImportDirective",
        "src": "355:26:15",
        "nodes": [],
        "absolutePath": "src/contracts/lendingHub/HubGetters.sol",
        "file": "./HubGetters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 11879,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10003,
        "nodeType": "ImportDirective",
        "src": "382:25:15",
        "nodes": [],
        "absolutePath": "src/contracts/lendingHub/HubChecks.sol",
        "file": "./HubChecks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 11509,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10004,
        "nodeType": "ImportDirective",
        "src": "408:36:15",
        "nodes": [],
        "absolutePath": "src/contracts/lendingHub/HubWormholeUtilities.sol",
        "file": "./HubWormholeUtilities.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10822,
        "sourceUnit": 13765,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10821,
        "nodeType": "ContractDefinition",
        "src": "446:16449:15",
        "nodes": [
          {
            "id": 10135,
            "nodeType": "FunctionDefinition",
            "src": "3174:1571:15",
            "nodes": [],
            "body": {
              "id": 10134,
              "nodeType": "Block",
              "src": "3747:998:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10045,
                          "name": "interestAccrualIndexPrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10039,
                          "src": "3765:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 10048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 10046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3798:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 10047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3804:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "3798:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "3765:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10044,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3757:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:49:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10051,
                  "nodeType": "ExpressionStatement",
                  "src": "3757:49:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10053,
                          "name": "collateralizationRatioPrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10041,
                          "src": "3824:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 10056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 10054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3859:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 10055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3865:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "3859:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "3824:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3816:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10059,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:51:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10061,
                          "name": "maxLiquidationPortionPrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10037,
                          "src": "3885:30:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 10064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 10062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3919:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 10063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3925:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "3919:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "3885:41:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3877:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3877:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10067,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10069,
                          "name": "priceStandardDeviationsPrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10031,
                          "src": "3945:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 10072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3981:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 10071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3987:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "3981:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "3945:43:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3937:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3937:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10075,
                  "nodeType": "ExpressionStatement",
                  "src": "3937:52:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10077,
                        "name": "wormhole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10019,
                        "src": "4012:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10076,
                      "name": "setWormhole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12797,
                      "src": "4000:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10079,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:21:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10081,
                        "name": "tokenBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10021,
                        "src": "4046:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10080,
                      "name": "setTokenBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12811,
                      "src": "4031:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4031:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10083,
                  "nodeType": "ExpressionStatement",
                  "src": "4031:27:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10085,
                        "name": "pythAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10025,
                        "src": "4076:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10084,
                      "name": "setPyth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12827,
                      "src": "4068:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10087,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10089,
                        "name": "oracleMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10027,
                        "src": "4112:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 10088,
                      "name": "setOracleMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12839,
                      "src": "4098:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 10090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4098:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10091,
                  "nodeType": "ExpressionStatement",
                  "src": "4098:25:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10093,
                        "name": "consistencyLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10023,
                        "src": "4153:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 10092,
                      "name": "setConsistencyLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12851,
                      "src": "4133:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10095,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:37:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10097,
                        "name": "interestAccrualIndexPrecision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10039,
                        "src": "4213:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10096,
                      "name": "setInterestAccrualIndexPrecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13107,
                      "src": "4180:32:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4180:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10099,
                  "nodeType": "ExpressionStatement",
                  "src": "4180:63:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10101,
                        "name": "collateralizationRatioPrecision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10041,
                        "src": "4288:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10100,
                      "name": "setCollateralizationRatioPrecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13119,
                      "src": "4253:34:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:67:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10103,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:67:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10105,
                        "name": "maxLiquidationBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10033,
                        "src": "4353:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10104,
                      "name": "setMaxLiquidationBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13143,
                      "src": "4330:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4330:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10107,
                  "nodeType": "ExpressionStatement",
                  "src": "4330:43:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10109,
                        "name": "maxLiquidationPortion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "4460:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10108,
                      "name": "setMaxLiquidationPortion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13193,
                      "src": "4435:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4435:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10111,
                  "nodeType": "ExpressionStatement",
                  "src": "4435:47:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10113,
                        "name": "maxLiquidationPortionPrecision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10037,
                        "src": "4526:30:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10112,
                      "name": "setMaxLiquidationPortionPrecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13205,
                      "src": "4492:33:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4492:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10115,
                  "nodeType": "ExpressionStatement",
                  "src": "4492:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_60000000000000000000_by_1",
                          "typeString": "int_const 60000000000000000000"
                        },
                        "id": 10122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3630",
                          "id": 10117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4579:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 10120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 10118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4585:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 10119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4591:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "4585:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 10121,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4584:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "4579:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60000000000000000000_by_1",
                          "typeString": "int_const 60000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 10123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4596:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_60000000000000000000_by_1",
                          "typeString": "int_const 60000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 10116,
                      "name": "setMockPyth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13226,
                      "src": "4567:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 10124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4567:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10125,
                  "nodeType": "ExpressionStatement",
                  "src": "4567:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10127,
                        "name": "priceStandardDeviations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10029,
                        "src": "4635:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 10126,
                      "name": "setPriceStandardDeviations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13238,
                      "src": "4608:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 10128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4608:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10129,
                  "nodeType": "ExpressionStatement",
                  "src": "4608:51:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10131,
                        "name": "priceStandardDeviationsPrecision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10031,
                        "src": "4705:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 10130,
                      "name": "setPriceStandardDeviationsPrecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13250,
                      "src": "4669:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 10132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4669:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10133,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:69:15"
                }
              ]
            },
            "documentation": {
              "id": 10017,
              "nodeType": "StructuredDocumentation",
              "src": "559:2610:15",
              "text": " @notice Hub constructor - Initializes a new hub with given parameters\n \n @param wormhole: Address of the Wormhole contract on the Hub chain\n @param tokenBridge: Address of the TokenBridge contract on the Hub chain\n @param consistencyLevel: Desired level of finality the Wormhole guardians will reach before signing the messages\n Note: consistencyLevel = 200 will result in an instant message, while all other values will wait for finality\n Recommended finality levels can be found here: https://book.wormhole.com/reference/contracts.html\n @param pythAddress: Address of the Pyth oracle on the Hub chain\n @param oracleMode: Variable that should be 0 and exists only for testing purposes.\n If oracleMode = 0, Hub uses Pyth; if 1, Hub uses a mock Pyth for testing, and if 2, Hub uses a dummy oracle that can be manually set\n @param priceStandardDeviations: priceStandardDeviations = (psd * priceStandardDeviationsPrecision), where psd is the number of standard deviations that we use for our price intervals in calculations relating to allowing withdraws, borrows, or liquidations\n @param priceStandardDeviationsPrecision: A precision number that allows us to represent our desired noninteger price standard deviation as an integer (specifically, psd = priceStandardDeviations/priceStandardDeviationsPrecision)\n @param maxLiquidationBonus: maxLiquidationBonus = (mlb * collateralizationRatioPrecision), where mlb is the multiplier such that if the fair value of a liquidator's repayed assets is v, the assets they receive can have a maximum of mlb*v in fair value. Fair value is computed using Pyth prices.\n @param maxLiquidationPortion: maxLiquidationPortion = (mlp * maxLiquidationPortionPrecision), where mlp is the maximum fraction of the borrowed value vault that a liquidator can liquidate at once.\n @param maxLiquidationPortionPrecision: A precision number that allows us to represent our desired noninteger max liquidation portion mlp as an integer (specifically, mlp = maxLiquidationPortion/maxLiquidationPortionPrecision)\n @param interestAccrualIndexPrecision: A precision number that allows us to represent our noninteger interest accrual indices as integers; we store each index as its true value multiplied by interestAccrualIndexPrecision\n @param collateralizationRatioPrecision: A precision number that allows us to represent our noninteger collateralization ratios as integers; we store each ratio as its true value multiplied by collateralizationRatioPrecision"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10019,
                  "mutability": "mutable",
                  "name": "wormhole",
                  "nameLocation": "3238:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3230:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3230:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10021,
                  "mutability": "mutable",
                  "name": "tokenBridge",
                  "nameLocation": "3264:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3256:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10023,
                  "mutability": "mutable",
                  "name": "consistencyLevel",
                  "nameLocation": "3291:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3285:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10022,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3285:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10025,
                  "mutability": "mutable",
                  "name": "pythAddress",
                  "nameLocation": "3356:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3348:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10027,
                  "mutability": "mutable",
                  "name": "oracleMode",
                  "nameLocation": "3383:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3377:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10029,
                  "mutability": "mutable",
                  "name": "priceStandardDeviations",
                  "nameLocation": "3410:23:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3403:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 10028,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3403:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10031,
                  "mutability": "mutable",
                  "name": "priceStandardDeviationsPrecision",
                  "nameLocation": "3450:32:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3443:39:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10033,
                  "mutability": "mutable",
                  "name": "maxLiquidationBonus",
                  "nameLocation": "3538:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3530:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3530:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10035,
                  "mutability": "mutable",
                  "name": "maxLiquidationPortion",
                  "nameLocation": "3575:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3567:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10037,
                  "mutability": "mutable",
                  "name": "maxLiquidationPortionPrecision",
                  "nameLocation": "3614:30:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3606:38:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10039,
                  "mutability": "mutable",
                  "name": "interestAccrualIndexPrecision",
                  "nameLocation": "3662:29:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3654:37:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3654:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10041,
                  "mutability": "mutable",
                  "name": "collateralizationRatioPrecision",
                  "nameLocation": "3709:31:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10135,
                  "src": "3701:39:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3185:561:15"
            },
            "returnParameters": {
              "id": 10043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3747:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10259,
            "nodeType": "FunctionDefinition",
            "src": "6652:1603:15",
            "nodes": [],
            "body": {
              "id": 10258,
              "nodeType": "Block",
              "src": "7004:1251:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10163,
                      "mutability": "mutable",
                      "name": "registeredInfo",
                      "nameLocation": "7031:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10258,
                      "src": "7014:31:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                        "typeString": "struct HubSpokeStructs.AssetInfo"
                      },
                      "typeName": {
                        "id": 10162,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10161,
                          "name": "AssetInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9937,
                          "src": "7014:9:15"
                        },
                        "referencedDeclaration": 9937,
                        "src": "7014:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$9937_storage_ptr",
                          "typeString": "struct HubSpokeStructs.AssetInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10167,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10165,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "7061:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10164,
                      "name": "getAssetInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11662,
                      "src": "7048:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_AssetInfo_$9937_memory_ptr_$",
                        "typeString": "function (address) view returns (struct HubSpokeStructs.AssetInfo memory)"
                      }
                    },
                    "id": 10166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7048:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                      "typeString": "struct HubSpokeStructs.AssetInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7014:60:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7092:22:15",
                        "subExpression": {
                          "expression": {
                            "id": 10169,
                            "name": "registeredInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10163,
                            "src": "7093:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                              "typeString": "struct HubSpokeStructs.AssetInfo memory"
                            }
                          },
                          "id": 10170,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9936,
                          "src": "7093:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657420616c72656164792072656769737465726564",
                        "id": 10172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7116:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3bb3f9d92ecea20fb5dbfa853f75995e76a0c15a613a7423c42956976a79f74",
                          "typeString": "literal_string \"Asset already registered\""
                        },
                        "value": "Asset already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3bb3f9d92ecea20fb5dbfa853f75995e76a0c15a613a7423c42956976a79f74",
                          "typeString": "literal_string \"Asset already registered\""
                        }
                      ],
                      "id": 10168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7084:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7084:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10174,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:59:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10176,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "7165:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10175,
                      "name": "allowAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13062,
                      "src": "7154:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7154:24:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10178,
                  "nodeType": "ExpressionStatement",
                  "src": "7154:24:15"
                },
                {
                  "assignments": [
                    10181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10181,
                      "mutability": "mutable",
                      "name": "interestRateModel",
                      "nameLocation": "7223:17:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10258,
                      "src": "7189:51:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$9961_memory_ptr",
                        "typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel"
                      },
                      "typeName": {
                        "id": 10180,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10179,
                          "name": "PiecewiseInterestRateModel",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9961,
                          "src": "7189:26:15"
                        },
                        "referencedDeclaration": 9961,
                        "src": "7189:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$9961_storage_ptr",
                          "typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10183,
                        "name": "ratePrecision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10144,
                        "src": "7299:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 10184,
                        "name": "kinks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10147,
                        "src": "7333:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10185,
                        "name": "rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10150,
                        "src": "7359:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10186,
                        "name": "reserveFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10152,
                        "src": "7393:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10187,
                        "name": "reservePrecision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10154,
                        "src": "7438:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10182,
                      "name": "PiecewiseInterestRateModel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9961,
                      "src": "7243:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_PiecewiseInterestRateModel_$9961_storage_ptr_$",
                        "typeString": "type(struct HubSpokeStructs.PiecewiseInterestRateModel storage pointer)"
                      }
                    },
                    "id": 10188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "ratePrecision",
                      "kinks",
                      "rates",
                      "reserveFactor",
                      "reservePrecision"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7243:222:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$9961_memory_ptr",
                      "typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7189:276:15"
                },
                {
                  "assignments": [
                    null,
                    10191
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 10191,
                      "mutability": "mutable",
                      "name": "queriedDecimals",
                      "nameLocation": "7492:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10258,
                      "src": "7479:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 10190,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7479:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10199,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646563696d616c732829",
                            "id": 10196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7559:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
                              "typeString": "literal_string \"decimals()\""
                            },
                            "value": "decimals()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
                              "typeString": "literal_string \"decimals()\""
                            }
                          ],
                          "expression": {
                            "id": 10194,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7535:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7535:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 10197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7535:37:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10192,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "7511:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 10193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "7511:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 10198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7511:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7476:97:15"
                },
                {
                  "assignments": [
                    10201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10201,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "7589:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10258,
                      "src": "7583:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 10200,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7583:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10209,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10204,
                        "name": "queriedDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10191,
                        "src": "7611:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 10206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7629:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 10205,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "7629:5:15",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 10207,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7628:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 10202,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7600:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 10203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7600:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 10208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7600:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7583:53:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 10212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10210,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10201,
                      "src": "7650:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 10211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7661:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "7650:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10218,
                  "nodeType": "IfStatement",
                  "src": "7646:57:15",
                  "trueBody": {
                    "id": 10217,
                    "nodeType": "Block",
                    "src": "7665:38:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 10215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10213,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10201,
                            "src": "7679:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3138",
                            "id": 10214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7690:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7679:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 10216,
                        "nodeType": "ExpressionStatement",
                        "src": "7679:13:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 10224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10220,
                          "name": "ratePrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10144,
                          "src": "7720:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 10223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 10221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7737:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 10222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7743:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "7737:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "7720:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7712:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7712:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10226,
                  "nodeType": "ExpressionStatement",
                  "src": "7712:33:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10228,
                          "name": "reservePrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10154,
                          "src": "7763:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 10231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 10229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7783:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 10230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7789:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "7783:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "7763:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7755:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10234,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:36:15"
                },
                {
                  "assignments": [
                    10237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10237,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "7819:4:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10258,
                      "src": "7802:21:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                        "typeString": "struct HubSpokeStructs.AssetInfo"
                      },
                      "typeName": {
                        "id": 10236,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10235,
                          "name": "AssetInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9937,
                          "src": "7802:9:15"
                        },
                        "referencedDeclaration": 9937,
                        "src": "7802:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$9937_storage_ptr",
                          "typeString": "struct HubSpokeStructs.AssetInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10246,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10239,
                        "name": "collateralizationRatioDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10140,
                        "src": "7881:29:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10240,
                        "name": "collateralizationRatioBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10142,
                        "src": "7954:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10241,
                        "name": "pythId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10156,
                        "src": "8004:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10242,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10201,
                        "src": "8034:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 10243,
                        "name": "interestRateModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10181,
                        "src": "8075:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$9961_memory_ptr",
                          "typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 10244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8114:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_struct$_PiecewiseInterestRateModel_$9961_memory_ptr",
                          "typeString": "struct HubSpokeStructs.PiecewiseInterestRateModel memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10238,
                      "name": "AssetInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9937,
                      "src": "7826:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AssetInfo_$9937_storage_ptr_$",
                        "typeString": "type(struct HubSpokeStructs.AssetInfo storage pointer)"
                      }
                    },
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "collateralizationRatioDeposit",
                      "collateralizationRatioBorrow",
                      "pythId",
                      "decimals",
                      "interestRateModel",
                      "exists"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7826:303:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                      "typeString": "struct HubSpokeStructs.AssetInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7802:327:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10248,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "8158:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10249,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10237,
                        "src": "8172:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                          "typeString": "struct HubSpokeStructs.AssetInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_AssetInfo_$9937_memory_ptr",
                          "typeString": "struct HubSpokeStructs.AssetInfo memory"
                        }
                      ],
                      "id": 10247,
                      "name": "registerAssetInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13034,
                      "src": "8140:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetInfo_$9937_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct HubSpokeStructs.AssetInfo memory)"
                      }
                    },
                    "id": 10250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8140:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10251,
                  "nodeType": "ExpressionStatement",
                  "src": "8140:37:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10253,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10138,
                        "src": "8218:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10254,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8232:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8232:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10252,
                      "name": "setLastActivityBlockTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13078,
                      "src": "8188:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8188:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10257,
                  "nodeType": "ExpressionStatement",
                  "src": "8188:60:15"
                }
              ]
            },
            "documentation": {
              "id": 10136,
              "nodeType": "StructuredDocumentation",
              "src": "4751:1896:15",
              "text": " @notice Registers asset on the hub. Only registered assets are allowed to be stored in the protocol.\n @param assetAddress: The address to be checked\n @param collateralizationRatioDeposit: collateralizationRatioDeposit = crd * collateralizationRatioPrecision,\n where crd is such that when we calculate 'fair prices' to see if a vault, after an action, would have positive value,\n for purposes of allowing withdraws, borrows, or liquidations, we multiply any deposited amount of this asset by crd.\n @param collateralizationRatioBorrow: collateralizationRatioBorrow = crb * collateralizationRatioPrecision,\n where crb is such that when we calculate 'fair prices' to see if a vault, after an action, would have positive value,\n for purposes of allowing withdraws, borrows, or liquidations, we multiply any borrowed amount of this asset by crb.\n One way to think about crb is that for every '$1 worth' of effective deposits we allow $c worth of this asset borrowed\n @param ratePrecision: A precision number that allows us to represent noninteger rate intercept value ri and rate coefficient value rca as integers.\n @param kinks: x values of points on the piecewise linear curve, using ratePrecision for decimal expression\n @param rates: y values of points on the piecewise linear curve, using ratePrecision for decimal expression;\n @param reserveFactor: reserveFactor = rf * reservePrecision, The portion of the paid interest by borrowers that is diverted to the protocol for rainy day,\n the remainder is distributed among lenders of the asset\n @param reservePrecision: A precision number that allows us to represent our noninteger reserve factor rf as an integer (specifically reserveFactor = rf * reservePrecision)\n @param pythId: Id of the relevant oracle price feed (USD <-> asset)"
            },
            "functionSelector": "8e7eb00a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10158,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8095,
                  "src": "6994:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "6994:9:15"
              }
            ],
            "name": "registerAsset",
            "nameLocation": "6661:13:15",
            "parameters": {
              "id": 10157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10138,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "6692:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6684:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10140,
                  "mutability": "mutable",
                  "name": "collateralizationRatioDeposit",
                  "nameLocation": "6722:29:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6714:37:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6714:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10142,
                  "mutability": "mutable",
                  "name": "collateralizationRatioBorrow",
                  "nameLocation": "6769:28:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6761:36:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6761:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10144,
                  "mutability": "mutable",
                  "name": "ratePrecision",
                  "nameLocation": "6814:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6807:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 10143,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6807:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10147,
                  "mutability": "mutable",
                  "name": "kinks",
                  "nameLocation": "6854:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6837:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10145,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6837:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10146,
                    "nodeType": "ArrayTypeName",
                    "src": "6837:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10150,
                  "mutability": "mutable",
                  "name": "rates",
                  "nameLocation": "6886:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6869:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10148,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6869:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10149,
                    "nodeType": "ArrayTypeName",
                    "src": "6869:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10152,
                  "mutability": "mutable",
                  "name": "reserveFactor",
                  "nameLocation": "6909:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6901:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10154,
                  "mutability": "mutable",
                  "name": "reservePrecision",
                  "nameLocation": "6940:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6932:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6932:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10156,
                  "mutability": "mutable",
                  "name": "pythId",
                  "nameLocation": "6974:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10259,
                  "src": "6966:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10155,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6966:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6674:312:15"
            },
            "returnParameters": {
              "id": 10160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7004:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10275,
            "nodeType": "FunctionDefinition",
            "src": "8547:155:15",
            "nodes": [],
            "body": {
              "id": 10274,
              "nodeType": "Block",
              "src": "8633:69:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10270,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10262,
                        "src": "8665:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 10271,
                        "name": "spokeContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10264,
                        "src": "8674:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10269,
                      "name": "registerSpokeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12867,
                      "src": "8643:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_address_$returns$__$",
                        "typeString": "function (uint16,address)"
                      }
                    },
                    "id": 10272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8643:52:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10273,
                  "nodeType": "ExpressionStatement",
                  "src": "8643:52:15"
                }
              ]
            },
            "documentation": {
              "id": 10260,
              "nodeType": "StructuredDocumentation",
              "src": "8261:281:15",
              "text": " @notice Registers a spoke contract. Only wormhole messages from registered spoke contracts are allowed.\n @param chainId - The chain id which the spoke is deployed on\n @param spokeContractAddress - The address of the spoke contract on its chain"
            },
            "functionSelector": "c52ddc0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10267,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10266,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8095,
                  "src": "8623:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "8623:9:15"
              }
            ],
            "name": "registerSpoke",
            "nameLocation": "8556:13:15",
            "parameters": {
              "id": 10265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10262,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "8577:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10275,
                  "src": "8570:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 10261,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8570:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10264,
                  "mutability": "mutable",
                  "name": "spokeContractAddress",
                  "nameLocation": "8594:20:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10275,
                  "src": "8586:28:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8586:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8569:46:15"
            },
            "returnParameters": {
              "id": 10268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8633:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10287,
            "nodeType": "FunctionDefinition",
            "src": "9039:114:15",
            "nodes": [],
            "body": {
              "id": 10286,
              "nodeType": "Block",
              "src": "9100:53:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10282,
                        "name": "encodedMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10278,
                        "src": "9125:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 10283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9141:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10281,
                      "name": "completeAction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10506,
                      "src": "9110:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_bool_$_t_uint64_$",
                        "typeString": "function (bytes memory,bool) returns (bool,uint64)"
                      }
                    },
                    "id": 10284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint64_$",
                      "typeString": "tuple(bool,uint64)"
                    }
                  },
                  "id": 10285,
                  "nodeType": "ExpressionStatement",
                  "src": "9110:36:15"
                }
              ]
            },
            "documentation": {
              "id": 10276,
              "nodeType": "StructuredDocumentation",
              "src": "8708:326:15",
              "text": " @notice Completes a deposit that was initiated on a spoke\n @param encodedMessage: encoded Wormhole message with a TokenBridge message as the payload\n The TokenBridge message is used to complete a TokenBridge transfer of tokens to the Hub,\n and contains a payload of the deposit information"
            },
            "functionSelector": "eaf4a0ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeDeposit",
            "nameLocation": "9048:15:15",
            "parameters": {
              "id": 10279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10278,
                  "mutability": "mutable",
                  "name": "encodedMessage",
                  "nameLocation": "9077:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10287,
                  "src": "9064:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10277,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9064:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9063:29:15"
            },
            "returnParameters": {
              "id": 10280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9100:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10299,
            "nodeType": "FunctionDefinition",
            "src": "9337:116:15",
            "nodes": [],
            "body": {
              "id": 10298,
              "nodeType": "Block",
              "src": "9399:54:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10294,
                        "name": "encodedMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10290,
                        "src": "9424:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 10295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9440:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10293,
                      "name": "completeAction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10506,
                      "src": "9409:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_bool_$_t_uint64_$",
                        "typeString": "function (bytes memory,bool) returns (bool,uint64)"
                      }
                    },
                    "id": 10296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9409:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint64_$",
                      "typeString": "tuple(bool,uint64)"
                    }
                  },
                  "id": 10297,
                  "nodeType": "ExpressionStatement",
                  "src": "9409:37:15"
                }
              ]
            },
            "documentation": {
              "id": 10288,
              "nodeType": "StructuredDocumentation",
              "src": "9159:173:15",
              "text": " @notice Completes a withdraw that was initiated on a spoke\n @param encodedMessage: encoded Wormhole message with withdraw information as the payload"
            },
            "functionSelector": "1d92aa84",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeWithdraw",
            "nameLocation": "9346:16:15",
            "parameters": {
              "id": 10291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10290,
                  "mutability": "mutable",
                  "name": "encodedMessage",
                  "nameLocation": "9376:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10299,
                  "src": "9363:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10289,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9363:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9362:29:15"
            },
            "returnParameters": {
              "id": 10292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9399:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10311,
            "nodeType": "FunctionDefinition",
            "src": "9633:114:15",
            "nodes": [],
            "body": {
              "id": 10310,
              "nodeType": "Block",
              "src": "9693:54:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10306,
                        "name": "encodedMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10302,
                        "src": "9718:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 10307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9734:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10305,
                      "name": "completeAction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10506,
                      "src": "9703:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_bool_$_t_uint64_$",
                        "typeString": "function (bytes memory,bool) returns (bool,uint64)"
                      }
                    },
                    "id": 10308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9703:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint64_$",
                      "typeString": "tuple(bool,uint64)"
                    }
                  },
                  "id": 10309,
                  "nodeType": "ExpressionStatement",
                  "src": "9703:37:15"
                }
              ]
            },
            "documentation": {
              "id": 10300,
              "nodeType": "StructuredDocumentation",
              "src": "9459:169:15",
              "text": " @notice Completes a borrow that was initiated on a spoke\n @param encodedMessage: encoded Wormhole message with borrow information as the payload"
            },
            "functionSelector": "d0a6998a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeBorrow",
            "nameLocation": "9642:14:15",
            "parameters": {
              "id": 10303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10302,
                  "mutability": "mutable",
                  "name": "encodedMessage",
                  "nameLocation": "9670:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10311,
                  "src": "9657:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10301,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9657:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9656:29:15"
            },
            "returnParameters": {
              "id": 10304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9693:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10323,
            "nodeType": "FunctionDefinition",
            "src": "10080:112:15",
            "nodes": [],
            "body": {
              "id": 10322,
              "nodeType": "Block",
              "src": "10139:53:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10318,
                        "name": "encodedMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10314,
                        "src": "10164:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 10319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10180:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10317,
                      "name": "completeAction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10506,
                      "src": "10149:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_bool_$_t_uint64_$",
                        "typeString": "function (bytes memory,bool) returns (bool,uint64)"
                      }
                    },
                    "id": 10320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10149:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint64_$",
                      "typeString": "tuple(bool,uint64)"
                    }
                  },
                  "id": 10321,
                  "nodeType": "ExpressionStatement",
                  "src": "10149:36:15"
                }
              ]
            },
            "documentation": {
              "id": 10312,
              "nodeType": "StructuredDocumentation",
              "src": "9753:322:15",
              "text": " @notice Completes a repay that was initiated on a spoke\n @param encodedMessage: encoded Wormhole message with a TokenBridge message as the payload\n The TokenBridge message is used to complete a TokenBridge transfer of tokens to the Hub,\n and contains a payload of the repay information"
            },
            "functionSelector": "23909f0a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeRepay",
            "nameLocation": "10089:13:15",
            "parameters": {
              "id": 10315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10314,
                  "mutability": "mutable",
                  "name": "encodedMessage",
                  "nameLocation": "10116:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10323,
                  "src": "10103:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10313,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10103:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10102:29:15"
            },
            "returnParameters": {
              "id": 10316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10139:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10506,
            "nodeType": "FunctionDefinition",
            "src": "10679:1794:15",
            "nodes": [],
            "body": {
              "id": 10505,
              "nodeType": "Block",
              "src": "10830:1643:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10336,
                      "mutability": "mutable",
                      "name": "encodedActionPayload",
                      "nameLocation": "10853:20:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10505,
                      "src": "10840:33:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 10335,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10840:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10337,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10840:33:15"
                },
                {
                  "assignments": [
                    10342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10342,
                      "mutability": "mutable",
                      "name": "parsed",
                      "nameLocation": "10903:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10505,
                      "src": "10883:26:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VM_$14995_memory_ptr",
                        "typeString": "struct IWormhole.VM"
                      },
                      "typeName": {
                        "id": 10341,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10340,
                          "name": "IWormhole.VM",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14995,
                          "src": "10883:12:15"
                        },
                        "referencedDeclaration": 14995,
                        "src": "10883:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VM_$14995_storage_ptr",
                          "typeString": "struct IWormhole.VM"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10346,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10344,
                        "name": "encodedMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10326,
                        "src": "10930:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10343,
                      "name": "getWormholeParsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13622,
                      "src": "10912:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_struct$_VM_$14995_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (struct IWormhole.VM memory)"
                      }
                    },
                    "id": 10345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10912:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VM_$14995_memory_ptr",
                      "typeString": "struct IWormhole.VM memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10883:62:15"
                },
                {
                  "condition": {
                    "id": 10347,
                    "name": "isTokenBridgePayload",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10328,
                    "src": "10960:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10378,
                    "nodeType": "Block",
                    "src": "11105:168:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10358,
                                "name": "parsed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10342,
                                "src": "11139:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VM_$14995_memory_ptr",
                                  "typeString": "struct IWormhole.VM memory"
                                }
                              },
                              "id": 10359,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "emitterChainId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14978,
                              "src": "11139:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 10366,
                                            "name": "parsed",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10342,
                                            "src": "11186:6:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_VM_$14995_memory_ptr",
                                              "typeString": "struct IWormhole.VM memory"
                                            }
                                          },
                                          "id": 10367,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "emitterAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14980,
                                          "src": "11186:21:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 10365,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11178:7:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 10364,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11178:7:15",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 10368,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11178:30:15",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 10363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11170:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 10362,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11170:7:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11170:39:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 10361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11162:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10360,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11162:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11162:48:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10357,
                            "name": "verifySenderIsSpoke",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13680,
                            "src": "11119:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint16_$_t_address_$returns$__$",
                              "typeString": "function (uint16,address) view"
                            }
                          },
                          "id": 10371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11119:92:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10372,
                        "nodeType": "ExpressionStatement",
                        "src": "11119:92:15"
                      },
                      {
                        "expression": {
                          "id": 10376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10373,
                            "name": "encodedActionPayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10336,
                            "src": "11225:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10374,
                              "name": "parsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10342,
                              "src": "11248:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VM_$14995_memory_ptr",
                                "typeString": "struct IWormhole.VM memory"
                              }
                            },
                            "id": 10375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payload",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14986,
                            "src": "11248:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "11225:37:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 10377,
                        "nodeType": "ExpressionStatement",
                        "src": "11225:37:15"
                      }
                    ]
                  },
                  "id": 10379,
                  "nodeType": "IfStatement",
                  "src": "10956:317:15",
                  "trueBody": {
                    "id": 10356,
                    "nodeType": "Block",
                    "src": "10982:117:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 10354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10348,
                            "name": "encodedActionPayload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10336,
                            "src": "10996:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10351,
                                    "name": "encodedMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10326,
                                    "src": "11072:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 10350,
                                  "name": "getTransferPayload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13577,
                                  "src": "11053:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 10352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11053:34:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 10349,
                              "name": "extractPayloadFromTransferPayload",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13663,
                              "src": "11019:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 10353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11019:69:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "10996:92:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 10355,
                        "nodeType": "ExpressionStatement",
                        "src": "10996:92:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10382,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "11304:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10505,
                      "src": "11283:27:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                        "typeString": "struct HubSpokeStructs.ActionPayload"
                      },
                      "typeName": {
                        "id": 10381,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10380,
                          "name": "ActionPayload",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9981,
                          "src": "11283:13:15"
                        },
                        "referencedDeclaration": 9981,
                        "src": "11283:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ActionPayload_$9981_storage_ptr",
                          "typeString": "struct HubSpokeStructs.ActionPayload"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10386,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10384,
                        "name": "encodedActionPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10336,
                        "src": "11333:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10383,
                      "name": "decodeActionPayload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9910,
                      "src": "11313:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ActionPayload_$9981_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct HubSpokeStructs.ActionPayload memory)"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11313:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                      "typeString": "struct HubSpokeStructs.ActionPayload memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11283:71:15"
                },
                {
                  "assignments": [
                    10389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10389,
                      "mutability": "mutable",
                      "name": "action",
                      "nameLocation": "11371:6:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10505,
                      "src": "11364:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      },
                      "typeName": {
                        "id": 10388,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10387,
                          "name": "Action",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9968,
                          "src": "11364:6:15"
                        },
                        "referencedDeclaration": 9968,
                        "src": "11364:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10394,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10391,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10382,
                          "src": "11387:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                            "typeString": "struct HubSpokeStructs.ActionPayload memory"
                          }
                        },
                        "id": 10392,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "action",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9974,
                        "src": "11387:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      ],
                      "id": 10390,
                      "name": "Action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9968,
                      "src": "11380:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                        "typeString": "type(enum HubSpokeStructs.Action)"
                      }
                    },
                    "id": 10393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11380:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11364:37:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10396,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10382,
                          "src": "11430:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                            "typeString": "struct HubSpokeStructs.ActionPayload memory"
                          }
                        },
                        "id": 10397,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9978,
                        "src": "11430:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10395,
                      "name": "checkValidAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11463,
                      "src": "11412:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 10398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10399,
                  "nodeType": "ExpressionStatement",
                  "src": "11412:38:15"
                },
                {
                  "expression": {
                    "id": 10402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10400,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10331,
                      "src": "11460:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11472:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11460:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10403,
                  "nodeType": "ExpressionStatement",
                  "src": "11460:16:15"
                },
                {
                  "assignments": [
                    10405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10405,
                      "mutability": "mutable",
                      "name": "transferTokensToSender",
                      "nameLocation": "11491:22:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10505,
                      "src": "11486:27:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10404,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11486:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10407,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 10406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11516:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11486:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10409,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10382,
                          "src": "11553:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                            "typeString": "struct HubSpokeStructs.ActionPayload memory"
                          }
                        },
                        "id": 10410,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9978,
                        "src": "11553:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10408,
                      "name": "updateAccrualIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11910,
                      "src": "11532:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11532:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10412,
                  "nodeType": "ExpressionStatement",
                  "src": "11532:41:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    },
                    "id": 10416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10413,
                      "name": "action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10389,
                      "src": "11588:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10414,
                        "name": "Action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9968,
                        "src": "11598:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                          "typeString": "type(enum HubSpokeStructs.Action)"
                        }
                      },
                      "id": 10415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9964,
                      "src": "11598:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "src": "11588:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      },
                      "id": 10434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10431,
                        "name": "action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10389,
                        "src": "11771:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 10432,
                          "name": "Action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9968,
                          "src": "11781:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                            "typeString": "type(enum HubSpokeStructs.Action)"
                          }
                        },
                        "id": 10433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Borrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9963,
                        "src": "11781:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "src": "11771:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        },
                        "id": 10452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10449,
                          "name": "action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10389,
                          "src": "11950:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10450,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "11960:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 10451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Repay",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9965,
                          "src": "11960:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "src": "11950:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 10473,
                      "nodeType": "IfStatement",
                      "src": "11946:226:15",
                      "trueBody": {
                        "id": 10472,
                        "nodeType": "Block",
                        "src": "11974:198:15",
                        "statements": [
                          {
                            "expression": {
                              "id": 10462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 10453,
                                "name": "completed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10331,
                                "src": "11988:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 10455,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10382,
                                      "src": "12015:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                        "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                      }
                                    },
                                    "id": 10456,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9976,
                                    "src": "12015:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 10457,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10382,
                                      "src": "12030:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                        "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                      }
                                    },
                                    "id": 10458,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9978,
                                    "src": "12030:19:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 10459,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10382,
                                      "src": "12051:6:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                        "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                      }
                                    },
                                    "id": 10460,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9980,
                                    "src": "12051:18:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 10454,
                                  "name": "allowedToRepay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11068,
                                  "src": "12000:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) view returns (bool)"
                                  }
                                },
                                "id": 10461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12000:70:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11988:82:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 10463,
                            "nodeType": "ExpressionStatement",
                            "src": "11988:82:15"
                          },
                          {
                            "condition": {
                              "id": 10465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "12088:10:15",
                              "subExpression": {
                                "id": 10464,
                                "name": "completed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10331,
                                "src": "12089:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 10471,
                            "nodeType": "IfStatement",
                            "src": "12084:78:15",
                            "trueBody": {
                              "id": 10470,
                              "nodeType": "Block",
                              "src": "12100:62:15",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 10468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 10466,
                                      "name": "transferTokensToSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10405,
                                      "src": "12118:22:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "74727565",
                                      "id": 10467,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12143:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "12118:29:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 10469,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12118:29:15"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 10474,
                    "nodeType": "IfStatement",
                    "src": "11767:405:15",
                    "trueBody": {
                      "id": 10448,
                      "nodeType": "Block",
                      "src": "11796:144:15",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 10436,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10382,
                                  "src": "11831:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                  }
                                },
                                "id": 10437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9976,
                                "src": "11831:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10438,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10382,
                                  "src": "11846:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                  }
                                },
                                "id": 10439,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "assetAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9978,
                                "src": "11846:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10440,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10382,
                                  "src": "11867:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                  }
                                },
                                "id": 10441,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "assetAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9980,
                                "src": "11867:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10435,
                              "name": "checkAllowedToBorrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11004,
                              "src": "11810:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256) view"
                              }
                            },
                            "id": 10442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11810:76:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10443,
                          "nodeType": "ExpressionStatement",
                          "src": "11810:76:15"
                        },
                        {
                          "expression": {
                            "id": 10446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10444,
                              "name": "transferTokensToSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10405,
                              "src": "11900:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 10445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11925:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "11900:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 10447,
                          "nodeType": "ExpressionStatement",
                          "src": "11900:29:15"
                        }
                      ]
                    }
                  },
                  "id": 10475,
                  "nodeType": "IfStatement",
                  "src": "11584:588:15",
                  "trueBody": {
                    "id": 10430,
                    "nodeType": "Block",
                    "src": "11615:146:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10418,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10382,
                                "src": "11652:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                }
                              },
                              "id": 10419,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9976,
                              "src": "11652:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 10420,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10382,
                                "src": "11667:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                }
                              },
                              "id": 10421,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9978,
                              "src": "11667:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 10422,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10382,
                                "src": "11688:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                }
                              },
                              "id": 10423,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9980,
                              "src": "11688:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10417,
                            "name": "checkAllowedToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10925,
                            "src": "11629:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) view"
                            }
                          },
                          "id": 10424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11629:78:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10425,
                        "nodeType": "ExpressionStatement",
                        "src": "11629:78:15"
                      },
                      {
                        "expression": {
                          "id": 10428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10426,
                            "name": "transferTokensToSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10405,
                            "src": "11721:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 10427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11746:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11721:29:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10429,
                        "nodeType": "ExpressionStatement",
                        "src": "11721:29:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 10476,
                    "name": "completed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10331,
                    "src": "12186:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10488,
                  "nodeType": "IfStatement",
                  "src": "12182:118:15",
                  "trueBody": {
                    "id": 10487,
                    "nodeType": "Block",
                    "src": "12197:103:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10478,
                              "name": "action",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10389,
                              "src": "12226:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Action_$9968",
                                "typeString": "enum HubSpokeStructs.Action"
                              }
                            },
                            {
                              "expression": {
                                "id": 10479,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10382,
                                "src": "12234:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                }
                              },
                              "id": 10480,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9976,
                              "src": "12234:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 10481,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10382,
                                "src": "12249:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                }
                              },
                              "id": 10482,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9978,
                              "src": "12249:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 10483,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10382,
                                "src": "12270:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                }
                              },
                              "id": 10484,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9980,
                              "src": "12270:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Action_$9968",
                                "typeString": "enum HubSpokeStructs.Action"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10477,
                            "name": "logActionOnHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "12211:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (enum HubSpokeStructs.Action,address,address,uint256)"
                            }
                          },
                          "id": 10485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12211:78:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10486,
                        "nodeType": "ExpressionStatement",
                        "src": "12211:78:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 10489,
                    "name": "transferTokensToSender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10405,
                    "src": "12314:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10504,
                  "nodeType": "IfStatement",
                  "src": "12310:157:15",
                  "trueBody": {
                    "id": 10503,
                    "nodeType": "Block",
                    "src": "12338:129:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 10501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10490,
                            "name": "sequence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10333,
                            "src": "12352:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 10492,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10382,
                                  "src": "12378:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                  }
                                },
                                "id": 10493,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9976,
                                "src": "12378:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10494,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10382,
                                  "src": "12393:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                  }
                                },
                                "id": 10495,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "assetAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9978,
                                "src": "12393:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10496,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10382,
                                  "src": "12414:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.ActionPayload memory"
                                  }
                                },
                                "id": 10497,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "assetAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9980,
                                "src": "12414:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10498,
                                  "name": "parsed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10342,
                                  "src": "12434:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VM_$14995_memory_ptr",
                                    "typeString": "struct IWormhole.VM memory"
                                  }
                                },
                                "id": 10499,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "emitterChainId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14978,
                                "src": "12434:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "id": 10491,
                              "name": "transferTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13502,
                              "src": "12363:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint16_$returns$_t_uint64_$",
                                "typeString": "function (address,address,uint256,uint16) returns (uint64)"
                              }
                            },
                            "id": 10500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12363:93:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "12352:104:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 10502,
                        "nodeType": "ExpressionStatement",
                        "src": "12352:104:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10324,
              "nodeType": "StructuredDocumentation",
              "src": "10198:476:15",
              "text": " @notice Completes an action (deposit, borrow, withdraw, or repay) that was initiated on a spoke\n @param encodedMessage - Encoded wormhole message with either a TokenBridge payload with tokens as well as deposit/repay info, or a regular wormhole payload with withdraw/borrow info\n @param isTokenBridgePayload - Whether or not the wormhole payload is a TokenBridge message (for Deposit or Repay) or a normal message (for Borrow or Withdraw)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeAction",
            "nameLocation": "10688:14:15",
            "parameters": {
              "id": 10329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10326,
                  "mutability": "mutable",
                  "name": "encodedMessage",
                  "nameLocation": "10716:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10506,
                  "src": "10703:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10325,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10703:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10328,
                  "mutability": "mutable",
                  "name": "isTokenBridgePayload",
                  "nameLocation": "10737:20:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10506,
                  "src": "10732:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10327,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10732:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10702:56:15"
            },
            "returnParameters": {
              "id": 10334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10331,
                  "mutability": "mutable",
                  "name": "completed",
                  "nameLocation": "10798:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10506,
                  "src": "10793:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10330,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10793:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10333,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "10816:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10506,
                  "src": "10809:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 10332,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10809:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10792:33:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10650,
            "nodeType": "FunctionDefinition",
            "src": "13286:1589:15",
            "nodes": [],
            "body": {
              "id": 10649,
              "nodeType": "Block",
              "src": "13527:1348:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10525,
                        "name": "assetRepayAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10512,
                        "src": "13602:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 10526,
                        "name": "assetRepayAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10515,
                        "src": "13623:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10527,
                        "name": "assetReceiptAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10518,
                        "src": "13642:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 10528,
                        "name": "assetReceiptAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10521,
                        "src": "13665:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 10524,
                      "name": "checkLiquidationInputsValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11443,
                      "src": "13574:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory,address[] memory,uint256[] memory) view"
                      }
                    },
                    "id": 10529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13574:111:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10530,
                  "nodeType": "ExpressionStatement",
                  "src": "13574:111:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10532,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10509,
                        "src": "13783:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10533,
                        "name": "assetRepayAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10512,
                        "src": "13790:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 10534,
                        "name": "assetRepayAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10515,
                        "src": "13811:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 10535,
                        "name": "assetReceiptAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10518,
                        "src": "13830:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 10536,
                        "name": "assetReceiptAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10521,
                        "src": "13853:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 10531,
                      "name": "checkAllowedToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11305,
                      "src": "13746:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address[] memory,uint256[] memory,address[] memory,uint256[] memory) view"
                      }
                    },
                    "id": 10537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13746:136:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10538,
                  "nodeType": "ExpressionStatement",
                  "src": "13746:136:15"
                },
                {
                  "body": {
                    "id": 10562,
                    "nodeType": "Block",
                    "src": "14014:106:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10551,
                                "name": "Action",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9968,
                                "src": "14043:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                  "typeString": "type(enum HubSpokeStructs.Action)"
                                }
                              },
                              "id": 10552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Repay",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9965,
                              "src": "14043:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Action_$9968",
                                "typeString": "enum HubSpokeStructs.Action"
                              }
                            },
                            {
                              "id": 10553,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10509,
                              "src": "14057:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10554,
                                "name": "assetRepayAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10512,
                                "src": "14064:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 10556,
                              "indexExpression": {
                                "id": 10555,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10540,
                                "src": "14084:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14064:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10557,
                                "name": "assetRepayAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "14088:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 10559,
                              "indexExpression": {
                                "id": 10558,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10540,
                                "src": "14106:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14088:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Action_$9968",
                                "typeString": "enum HubSpokeStructs.Action"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10550,
                            "name": "logActionOnHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "14028:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (enum HubSpokeStructs.Action,address,address,uint256)"
                            }
                          },
                          "id": 10560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14028:81:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10561,
                        "nodeType": "ExpressionStatement",
                        "src": "14028:81:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10543,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10540,
                      "src": "13977:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10544,
                        "name": "assetRepayAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10512,
                        "src": "13981:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13981:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13977:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10563,
                  "initializationExpression": {
                    "assignments": [
                      10540
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10540,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13970:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 10563,
                        "src": "13962:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13962:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10542,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13974:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13962:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14009:3:15",
                      "subExpression": {
                        "id": 10547,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10540,
                        "src": "14009:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10549,
                    "nodeType": "ExpressionStatement",
                    "src": "14009:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "13957:163:15"
                },
                {
                  "body": {
                    "id": 10587,
                    "nodeType": "Block",
                    "src": "14256:113:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10576,
                                "name": "Action",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9968,
                                "src": "14285:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                  "typeString": "type(enum HubSpokeStructs.Action)"
                                }
                              },
                              "id": 10577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9964,
                              "src": "14285:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Action_$9968",
                                "typeString": "enum HubSpokeStructs.Action"
                              }
                            },
                            {
                              "id": 10578,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10509,
                              "src": "14302:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10579,
                                "name": "assetReceiptAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10518,
                                "src": "14309:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 10581,
                              "indexExpression": {
                                "id": 10580,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10565,
                                "src": "14331:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14309:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10582,
                                "name": "assetReceiptAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10521,
                                "src": "14335:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 10584,
                              "indexExpression": {
                                "id": 10583,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10565,
                                "src": "14355:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14335:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Action_$9968",
                                "typeString": "enum HubSpokeStructs.Action"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10575,
                            "name": "logActionOnHub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "14270:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (enum HubSpokeStructs.Action,address,address,uint256)"
                            }
                          },
                          "id": 10585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14270:88:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10586,
                        "nodeType": "ExpressionStatement",
                        "src": "14270:88:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10568,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10565,
                      "src": "14217:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10569,
                        "name": "assetReceiptAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10518,
                        "src": "14221:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14221:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14217:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10588,
                  "initializationExpression": {
                    "assignments": [
                      10565
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10565,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14210:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 10588,
                        "src": "14202:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10564,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14202:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10567,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14214:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14202:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14251:3:15",
                      "subExpression": {
                        "id": 10572,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10565,
                        "src": "14251:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10574,
                    "nodeType": "ExpressionStatement",
                    "src": "14251:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "14197:172:15"
                },
                {
                  "body": {
                    "id": 10619,
                    "nodeType": "Block",
                    "src": "14493:132:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 10604,
                                    "name": "assetRepayAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10512,
                                    "src": "14541:19:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 10606,
                                  "indexExpression": {
                                    "id": 10605,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10590,
                                    "src": "14561:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14541:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10603,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8254,
                                "src": "14534:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$8254_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14534:30:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8254",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 10608,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14566:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14566:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 10612,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14586:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Hub_$10821",
                                    "typeString": "contract Hub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Hub_$10821",
                                    "typeString": "contract Hub"
                                  }
                                ],
                                "id": 10611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14578:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10610,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14578:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14578:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10614,
                                "name": "assetRepayAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "14593:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 10616,
                              "indexExpression": {
                                "id": 10615,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10590,
                                "src": "14611:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14593:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$8254",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10600,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8571,
                              "src": "14507:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$8571_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 10602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8348,
                            "src": "14507:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8254_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 10617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14507:107:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10618,
                        "nodeType": "ExpressionStatement",
                        "src": "14507:107:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10593,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10590,
                      "src": "14456:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10594,
                        "name": "assetRepayAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10512,
                        "src": "14460:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14460:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14456:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10620,
                  "initializationExpression": {
                    "assignments": [
                      10590
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10590,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14449:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 10620,
                        "src": "14441:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14441:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10592,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14453:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14441:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14488:3:15",
                      "subExpression": {
                        "id": 10597,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10590,
                        "src": "14488:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10599,
                    "nodeType": "ExpressionStatement",
                    "src": "14488:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "14436:189:15"
                },
                {
                  "body": {
                    "id": 10647,
                    "nodeType": "Block",
                    "src": "14752:117:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 10636,
                                    "name": "assetReceiptAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10518,
                                    "src": "14796:21:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 10638,
                                  "indexExpression": {
                                    "id": 10637,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10622,
                                    "src": "14818:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14796:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10635,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8254,
                                "src": "14789:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$8254_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14789:32:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8254",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 10640,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14823:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14823:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10642,
                                "name": "assetReceiptAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10521,
                                "src": "14835:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 10644,
                              "indexExpression": {
                                "id": 10643,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10622,
                                "src": "14855:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14835:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$8254",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10632,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8571,
                              "src": "14766:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$8571_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 10634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8322,
                            "src": "14766:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$8254_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 10645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14766:92:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10646,
                        "nodeType": "ExpressionStatement",
                        "src": "14766:92:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10625,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10622,
                      "src": "14713:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10626,
                        "name": "assetReceiptAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10518,
                        "src": "14717:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 10627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14717:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14713:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10648,
                  "initializationExpression": {
                    "assignments": [
                      10622
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10622,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14706:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 10648,
                        "src": "14698:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14698:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10624,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14710:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14698:13:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14747:3:15",
                      "subExpression": {
                        "id": 10629,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10622,
                        "src": "14747:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10631,
                    "nodeType": "ExpressionStatement",
                    "src": "14747:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "14693:176:15"
                }
              ]
            },
            "documentation": {
              "id": 10507,
              "nodeType": "StructuredDocumentation",
              "src": "12479:802:15",
              "text": " @notice Liquidates a vault. The sender of this transaction pays, for each i, assetRepayAmount[i] of the asset assetRepayAddresses[i]\n and receives, for each i, assetReceiptAmount[i] of the asset at assetReceiptAddresses[i].\n A check is made to see if this liquidation attempt should be allowed\n @param vault - the address of the vault\n @param assetRepayAddresses - An array of the addresses of the assets being paid by the liquidator\n @param assetRepayAmounts - An array of the amounts of the assets being paid by the liquidator\n @param assetReceiptAddresses - An array of the addresses of the assets being received by the liquidator\n @param assetReceiptAmounts - An array of the amounts of the assets being received by the liquidator"
            },
            "functionSelector": "0942e292",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidation",
            "nameLocation": "13295:11:15",
            "parameters": {
              "id": 10522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10509,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "13324:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10650,
                  "src": "13316:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13316:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10512,
                  "mutability": "mutable",
                  "name": "assetRepayAddresses",
                  "nameLocation": "13356:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10650,
                  "src": "13339:36:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10510,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13339:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10511,
                    "nodeType": "ArrayTypeName",
                    "src": "13339:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10515,
                  "mutability": "mutable",
                  "name": "assetRepayAmounts",
                  "nameLocation": "13402:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10650,
                  "src": "13385:34:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10513,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13385:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10514,
                    "nodeType": "ArrayTypeName",
                    "src": "13385:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10518,
                  "mutability": "mutable",
                  "name": "assetReceiptAddresses",
                  "nameLocation": "13446:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10650,
                  "src": "13429:38:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10516,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13429:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10517,
                    "nodeType": "ArrayTypeName",
                    "src": "13429:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10521,
                  "mutability": "mutable",
                  "name": "assetReceiptAmounts",
                  "nameLocation": "13494:19:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10650,
                  "src": "13477:36:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10519,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13477:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10520,
                    "nodeType": "ArrayTypeName",
                    "src": "13477:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13306:213:15"
            },
            "returnParameters": {
              "id": 10523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13527:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10820,
            "nodeType": "FunctionDefinition",
            "src": "15272:1621:15",
            "nodes": [],
            "body": {
              "id": 10819,
              "nodeType": "Block",
              "src": "15385:1508:15",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10665,
                      "mutability": "mutable",
                      "name": "vaultAmounts",
                      "nameLocation": "15415:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10819,
                      "src": "15396:31:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                        "typeString": "struct HubSpokeStructs.VaultAmount"
                      },
                      "typeName": {
                        "id": 10664,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10663,
                          "name": "VaultAmount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9918,
                          "src": "15396:11:15"
                        },
                        "referencedDeclaration": 9918,
                        "src": "15396:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAmount_$9918_storage_ptr",
                          "typeString": "struct HubSpokeStructs.VaultAmount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10670,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10667,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10656,
                        "src": "15446:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10668,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "15453:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10666,
                      "name": "getVaultAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11772,
                      "src": "15430:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_struct$_VaultAmount_$9918_memory_ptr_$",
                        "typeString": "function (address,address) view returns (struct HubSpokeStructs.VaultAmount memory)"
                      }
                    },
                    "id": 10669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15430:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                      "typeString": "struct HubSpokeStructs.VaultAmount memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15396:70:15"
                },
                {
                  "assignments": [
                    10673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10673,
                      "mutability": "mutable",
                      "name": "globalAmounts",
                      "nameLocation": "15495:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10819,
                      "src": "15476:32:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                        "typeString": "struct HubSpokeStructs.VaultAmount"
                      },
                      "typeName": {
                        "id": 10672,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10671,
                          "name": "VaultAmount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9918,
                          "src": "15476:11:15"
                        },
                        "referencedDeclaration": 9918,
                        "src": "15476:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAmount_$9918_storage_ptr",
                          "typeString": "struct HubSpokeStructs.VaultAmount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10677,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10675,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "15528:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10674,
                      "name": "getGlobalAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11786,
                      "src": "15511:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_VaultAmount_$9918_memory_ptr_$",
                        "typeString": "function (address) view returns (struct HubSpokeStructs.VaultAmount memory)"
                      }
                    },
                    "id": 10676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15511:30:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                      "typeString": "struct HubSpokeStructs.VaultAmount memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15476:65:15"
                },
                {
                  "assignments": [
                    10680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10680,
                      "mutability": "mutable",
                      "name": "indices",
                      "nameLocation": "15574:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 10819,
                      "src": "15552:29:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AccrualIndices_$9923_memory_ptr",
                        "typeString": "struct HubSpokeStructs.AccrualIndices"
                      },
                      "typeName": {
                        "id": 10679,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10678,
                          "name": "AccrualIndices",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9923,
                          "src": "15552:14:15"
                        },
                        "referencedDeclaration": 9923,
                        "src": "15552:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AccrualIndices_$9923_storage_ptr",
                          "typeString": "struct HubSpokeStructs.AccrualIndices"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10684,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10682,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "15610:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10681,
                      "name": "getInterestAccrualIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11736,
                      "src": "15584:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_AccrualIndices_$9923_memory_ptr_$",
                        "typeString": "function (address) view returns (struct HubSpokeStructs.AccrualIndices memory)"
                      }
                    },
                    "id": 10683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15584:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AccrualIndices_$9923_memory_ptr",
                      "typeString": "struct HubSpokeStructs.AccrualIndices memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15552:71:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    },
                    "id": 10688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10685,
                      "name": "action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10654,
                      "src": "15638:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 10686,
                        "name": "Action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9968,
                        "src": "15648:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                          "typeString": "type(enum HubSpokeStructs.Action)"
                        }
                      },
                      "id": 10687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9962,
                      "src": "15648:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "src": "15638:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      },
                      "id": 10715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10712,
                        "name": "action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10654,
                        "src": "15896:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 10713,
                          "name": "Action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9968,
                          "src": "15906:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                            "typeString": "type(enum HubSpokeStructs.Action)"
                          }
                        },
                        "id": 10714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9964,
                        "src": "15906:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "src": "15896:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        },
                        "id": 10742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10739,
                          "name": "action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10654,
                          "src": "16156:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10740,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "16166:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 10741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Borrow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9963,
                          "src": "16166:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "src": "16156:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          "id": 10769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10766,
                            "name": "action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10654,
                            "src": "16405:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 10767,
                              "name": "Action",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9968,
                              "src": "16415:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                "typeString": "type(enum HubSpokeStructs.Action)"
                              }
                            },
                            "id": 10768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Repay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9965,
                            "src": "16415:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "src": "16405:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10804,
                        "nodeType": "IfStatement",
                        "src": "16401:370:15",
                        "trueBody": {
                          "id": 10803,
                          "nodeType": "Block",
                          "src": "16429:342:15",
                          "statements": [
                            {
                              "assignments": [
                                10771
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10771,
                                  "mutability": "mutable",
                                  "name": "normalizedRepay",
                                  "nameLocation": "16451:15:15",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10803,
                                  "src": "16443:23:15",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 10770,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16443:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 10779,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 10773,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10660,
                                    "src": "16485:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 10774,
                                      "name": "indices",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10680,
                                      "src": "16493:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AccrualIndices_$9923_memory_ptr",
                                        "typeString": "struct HubSpokeStructs.AccrualIndices memory"
                                      }
                                    },
                                    "id": 10775,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "borrowed",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9922,
                                    "src": "16493:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 10776,
                                      "name": "Round",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9971,
                                      "src": "16511:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Round_$9971_$",
                                        "typeString": "type(enum HubSpokeStructs.Round)"
                                      }
                                    },
                                    "id": 10777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "DOWN",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9970,
                                    "src": "16511:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Round_$9971",
                                      "typeString": "enum HubSpokeStructs.Round"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Round_$9971",
                                      "typeString": "enum HubSpokeStructs.Round"
                                    }
                                  ],
                                  "id": 10772,
                                  "name": "normalizeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12195,
                                  "src": "16469:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_Round_$9971_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,enum HubSpokeStructs.Round) view returns (uint256)"
                                  }
                                },
                                "id": 10778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16469:53:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16443:79:15"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10780,
                                  "name": "normalizedRepay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10771,
                                  "src": "16539:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 10781,
                                    "name": "vaultAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10665,
                                    "src": "16557:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                      "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                    }
                                  },
                                  "id": 10782,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "borrowed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9917,
                                  "src": "16557:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16539:39:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 10790,
                              "nodeType": "IfStatement",
                              "src": "16536:116:15",
                              "trueBody": {
                                "id": 10789,
                                "nodeType": "Block",
                                "src": "16580:72:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 10787,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 10784,
                                        "name": "normalizedRepay",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10771,
                                        "src": "16598:15:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 10785,
                                          "name": "vaultAmounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10665,
                                          "src": "16616:12:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                            "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                          }
                                        },
                                        "id": 10786,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "borrowed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9917,
                                        "src": "16616:21:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16598:39:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 10788,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16598:39:15"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 10795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 10791,
                                    "name": "vaultAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10665,
                                    "src": "16665:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                      "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                    }
                                  },
                                  "id": 10793,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "borrowed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9917,
                                  "src": "16665:21:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 10794,
                                  "name": "normalizedRepay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10771,
                                  "src": "16690:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16665:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10796,
                              "nodeType": "ExpressionStatement",
                              "src": "16665:40:15"
                            },
                            {
                              "expression": {
                                "id": 10801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 10797,
                                    "name": "globalAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10673,
                                    "src": "16719:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                      "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                    }
                                  },
                                  "id": 10799,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "borrowed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9917,
                                  "src": "16719:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 10800,
                                  "name": "normalizedRepay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10771,
                                  "src": "16745:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16719:41:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10802,
                              "nodeType": "ExpressionStatement",
                              "src": "16719:41:15"
                            }
                          ]
                        }
                      },
                      "id": 10805,
                      "nodeType": "IfStatement",
                      "src": "16152:619:15",
                      "trueBody": {
                        "id": 10765,
                        "nodeType": "Block",
                        "src": "16181:214:15",
                        "statements": [
                          {
                            "assignments": [
                              10744
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 10744,
                                "mutability": "mutable",
                                "name": "normalizedBorrow",
                                "nameLocation": "16203:16:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 10765,
                                "src": "16195:24:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 10743,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16195:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 10752,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 10746,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10660,
                                  "src": "16238:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 10747,
                                    "name": "indices",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10680,
                                    "src": "16246:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AccrualIndices_$9923_memory_ptr",
                                      "typeString": "struct HubSpokeStructs.AccrualIndices memory"
                                    }
                                  },
                                  "id": 10748,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "borrowed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9922,
                                  "src": "16246:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 10749,
                                    "name": "Round",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9971,
                                    "src": "16264:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Round_$9971_$",
                                      "typeString": "type(enum HubSpokeStructs.Round)"
                                    }
                                  },
                                  "id": 10750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "UP",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9969,
                                  "src": "16264:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Round_$9971",
                                    "typeString": "enum HubSpokeStructs.Round"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Round_$9971",
                                    "typeString": "enum HubSpokeStructs.Round"
                                  }
                                ],
                                "id": 10745,
                                "name": "normalizeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12195,
                                "src": "16222:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_Round_$9971_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,enum HubSpokeStructs.Round) view returns (uint256)"
                                }
                              },
                              "id": 10751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16222:51:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "16195:78:15"
                          },
                          {
                            "expression": {
                              "id": 10757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 10753,
                                  "name": "vaultAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10665,
                                  "src": "16287:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                  }
                                },
                                "id": 10755,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "borrowed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9917,
                                "src": "16287:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 10756,
                                "name": "normalizedBorrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10744,
                                "src": "16312:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16287:41:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10758,
                            "nodeType": "ExpressionStatement",
                            "src": "16287:41:15"
                          },
                          {
                            "expression": {
                              "id": 10763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 10759,
                                  "name": "globalAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10673,
                                  "src": "16342:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                  }
                                },
                                "id": 10761,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "borrowed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9917,
                                "src": "16342:22:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 10762,
                                "name": "normalizedBorrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10744,
                                "src": "16368:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16342:42:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 10764,
                            "nodeType": "ExpressionStatement",
                            "src": "16342:42:15"
                          }
                        ]
                      }
                    },
                    "id": 10806,
                    "nodeType": "IfStatement",
                    "src": "15892:879:15",
                    "trueBody": {
                      "id": 10738,
                      "nodeType": "Block",
                      "src": "15923:223:15",
                      "statements": [
                        {
                          "assignments": [
                            10717
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 10717,
                              "mutability": "mutable",
                              "name": "normalizedWithdraw",
                              "nameLocation": "15945:18:15",
                              "nodeType": "VariableDeclaration",
                              "scope": 10738,
                              "src": "15937:26:15",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 10716,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15937:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 10725,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 10719,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10660,
                                "src": "15982:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10720,
                                  "name": "indices",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10680,
                                  "src": "15990:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AccrualIndices_$9923_memory_ptr",
                                    "typeString": "struct HubSpokeStructs.AccrualIndices memory"
                                  }
                                },
                                "id": 10721,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deposited",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9920,
                                "src": "15990:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10722,
                                  "name": "Round",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9971,
                                  "src": "16009:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Round_$9971_$",
                                    "typeString": "type(enum HubSpokeStructs.Round)"
                                  }
                                },
                                "id": 10723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "UP",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9969,
                                "src": "16009:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Round_$9971",
                                  "typeString": "enum HubSpokeStructs.Round"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Round_$9971",
                                  "typeString": "enum HubSpokeStructs.Round"
                                }
                              ],
                              "id": 10718,
                              "name": "normalizeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12195,
                              "src": "15966:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_Round_$9971_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,enum HubSpokeStructs.Round) view returns (uint256)"
                              }
                            },
                            "id": 10724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15966:52:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15937:81:15"
                        },
                        {
                          "expression": {
                            "id": 10730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 10726,
                                "name": "vaultAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10665,
                                "src": "16032:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                }
                              },
                              "id": 10728,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "deposited",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9915,
                              "src": "16032:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "id": 10729,
                              "name": "normalizedWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10717,
                              "src": "16058:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16032:44:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10731,
                          "nodeType": "ExpressionStatement",
                          "src": "16032:44:15"
                        },
                        {
                          "expression": {
                            "id": 10736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 10732,
                                "name": "globalAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10673,
                                "src": "16090:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.VaultAmount memory"
                                }
                              },
                              "id": 10734,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "deposited",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9915,
                              "src": "16090:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "id": 10735,
                              "name": "normalizedWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10717,
                              "src": "16117:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16090:45:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10737,
                          "nodeType": "ExpressionStatement",
                          "src": "16090:45:15"
                        }
                      ]
                    }
                  },
                  "id": 10807,
                  "nodeType": "IfStatement",
                  "src": "15634:1137:15",
                  "trueBody": {
                    "id": 10711,
                    "nodeType": "Block",
                    "src": "15664:222:15",
                    "statements": [
                      {
                        "assignments": [
                          10690
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10690,
                            "mutability": "mutable",
                            "name": "normalizedDeposit",
                            "nameLocation": "15686:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 10711,
                            "src": "15678:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10689,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15678:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10698,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10692,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10660,
                              "src": "15722:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 10693,
                                "name": "indices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10680,
                                "src": "15730:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AccrualIndices_$9923_memory_ptr",
                                  "typeString": "struct HubSpokeStructs.AccrualIndices memory"
                                }
                              },
                              "id": 10694,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposited",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9920,
                              "src": "15730:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 10695,
                                "name": "Round",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9971,
                                "src": "15749:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Round_$9971_$",
                                  "typeString": "type(enum HubSpokeStructs.Round)"
                                }
                              },
                              "id": 10696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "DOWN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9970,
                              "src": "15749:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Round_$9971",
                                "typeString": "enum HubSpokeStructs.Round"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Round_$9971",
                                "typeString": "enum HubSpokeStructs.Round"
                              }
                            ],
                            "id": 10691,
                            "name": "normalizeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12195,
                            "src": "15706:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_enum$_Round_$9971_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,enum HubSpokeStructs.Round) view returns (uint256)"
                            }
                          },
                          "id": 10697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15706:54:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15678:82:15"
                      },
                      {
                        "expression": {
                          "id": 10703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10699,
                              "name": "vaultAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10665,
                              "src": "15774:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                "typeString": "struct HubSpokeStructs.VaultAmount memory"
                              }
                            },
                            "id": 10701,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "deposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9915,
                            "src": "15774:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 10702,
                            "name": "normalizedDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10690,
                            "src": "15800:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15774:43:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10704,
                        "nodeType": "ExpressionStatement",
                        "src": "15774:43:15"
                      },
                      {
                        "expression": {
                          "id": 10709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10705,
                              "name": "globalAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10673,
                              "src": "15831:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                                "typeString": "struct HubSpokeStructs.VaultAmount memory"
                              }
                            },
                            "id": 10707,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "deposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9915,
                            "src": "15831:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 10708,
                            "name": "normalizedDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10690,
                            "src": "15858:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15831:44:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10710,
                        "nodeType": "ExpressionStatement",
                        "src": "15831:44:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10809,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10656,
                        "src": "16797:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10810,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "16804:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10811,
                        "name": "vaultAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10665,
                        "src": "16818:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                          "typeString": "struct HubSpokeStructs.VaultAmount memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                          "typeString": "struct HubSpokeStructs.VaultAmount memory"
                        }
                      ],
                      "id": 10808,
                      "name": "setVaultAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13164,
                      "src": "16781:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_VaultAmount_$9918_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct HubSpokeStructs.VaultAmount memory)"
                      }
                    },
                    "id": 10812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16781:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10813,
                  "nodeType": "ExpressionStatement",
                  "src": "16781:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10815,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "16858:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10816,
                        "name": "globalAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10673,
                        "src": "16872:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                          "typeString": "struct HubSpokeStructs.VaultAmount memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_VaultAmount_$9918_memory_ptr",
                          "typeString": "struct HubSpokeStructs.VaultAmount memory"
                        }
                      ],
                      "id": 10814,
                      "name": "setGlobalAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13181,
                      "src": "16841:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_VaultAmount_$9918_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct HubSpokeStructs.VaultAmount memory)"
                      }
                    },
                    "id": 10817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16841:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10818,
                  "nodeType": "ExpressionStatement",
                  "src": "16841:45:15"
                }
              ]
            },
            "documentation": {
              "id": 10651,
              "nodeType": "StructuredDocumentation",
              "src": "14881:386:15",
              "text": " @notice Updates the vault's state to log either a deposit, borrow, withdraw, or repay\n @param action - the action (either Deposit, Borrow, Withdraw, or Repay)\n @param vault - the address of the vault\n @param assetAddress - the address of the relevant asset being logged\n @param amount - the amount of the asset assetAddress being logged"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logActionOnHub",
            "nameLocation": "15281:14:15",
            "parameters": {
              "id": 10661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10654,
                  "mutability": "mutable",
                  "name": "action",
                  "nameLocation": "15303:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10820,
                  "src": "15296:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Action_$9968",
                    "typeString": "enum HubSpokeStructs.Action"
                  },
                  "typeName": {
                    "id": 10653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10652,
                      "name": "Action",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9968,
                      "src": "15296:6:15"
                    },
                    "referencedDeclaration": 9968,
                    "src": "15296:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10656,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "15319:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10820,
                  "src": "15311:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15311:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10658,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "15334:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10820,
                  "src": "15326:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15326:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10660,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15356:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 10820,
                  "src": "15348:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15348:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15295:68:15"
            },
            "returnParameters": {
              "id": 10662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15385:0:15"
            },
            "scope": 10821,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10005,
              "name": "HubSpokeStructs",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9991,
              "src": "462:15:15"
            },
            "id": 10006,
            "nodeType": "InheritanceSpecifier",
            "src": "462:15:15"
          },
          {
            "baseName": {
              "id": 10007,
              "name": "HubSpokeMessages",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9911,
              "src": "479:16:15"
            },
            "id": 10008,
            "nodeType": "InheritanceSpecifier",
            "src": "479:16:15"
          },
          {
            "baseName": {
              "id": 10009,
              "name": "HubGetters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11878,
              "src": "497:10:15"
            },
            "id": 10010,
            "nodeType": "InheritanceSpecifier",
            "src": "497:10:15"
          },
          {
            "baseName": {
              "id": 10011,
              "name": "HubSetters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13332,
              "src": "509:10:15"
            },
            "id": 10012,
            "nodeType": "InheritanceSpecifier",
            "src": "509:10:15"
          },
          {
            "baseName": {
              "id": 10013,
              "name": "HubWormholeUtilities",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13764,
              "src": "521:20:15"
            },
            "id": 10014,
            "nodeType": "InheritanceSpecifier",
            "src": "521:20:15"
          },
          {
            "baseName": {
              "id": 10015,
              "name": "HubChecks",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11508,
              "src": "543:9:15"
            },
            "id": 10016,
            "nodeType": "InheritanceSpecifier",
            "src": "543:9:15"
          }
        ],
        "canonicalName": "Hub",
        "contractDependencies": [
          9764
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10821,
          11508,
          13764,
          12752,
          12350,
          13332,
          11878,
          13438,
          8176,
          9911,
          9991,
          8888
        ],
        "name": "Hub",
        "nameLocation": "455:3:15",
        "scope": 10822,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 15
}.abi;
const deployedContract = "0x189f6d5205808913De90B75ADBF3C62b1BB0866C";

const deployedSpoke = "0x15d28a63836Bac4D03aCAfCC90a3F11D0D664d92";
const spokeABI = {
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "wormhole",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenBridge",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "hubChainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "hubContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositCollateralNative",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repayNative",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBridge",
      "outputs": [
        {
          "internalType": "contract ITokenBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBridgeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "263:3598:23:-:0;;;842:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;239:6:25;:33;;-1:-1:-1;;239:33:25;;;;;;;350:6;:51;;-1:-1:-1;;;;;;350:51:25;;-1:-1:-1;;;;;350:51:25;;;;;;485:27;:48;;-1:-1:-1;;;;;;485:48:25;-1:-1:-1;;;;;485:48:25;;;;;607:17;:30;;-1:-1:-1;;607:30:25;;;;;;;;;728:25;:46;;-1:-1:-1;;;;;;728:46:25;;-1:-1:-1;;;;;728:46:25;;;;;;842:350:23;;;;;263:3598;;14:163:34;92:13;;145:6;134:18;;124:29;;114:57;;167:1;164;157:12;114:57;14:163;;;:::o;182:177::-;261:13;;-1:-1:-1;;;;;303:31:34;;293:42;;283:70;;349:1;346;339:12;364:546;468:6;476;484;492;500;553:3;541:9;532:7;528:23;524:33;521:53;;;570:1;567;560:12;521:53;593:39;622:9;593:39;:::i;:::-;583:49;;651;696:2;685:9;681:18;651:49;:::i;:::-;641:59;;719:49;764:2;753:9;749:18;719:49;:::i;:::-;709:59;;787:48;831:2;820:9;816:18;787:48;:::i;:::-;777:58;;854:50;899:3;888:9;884:19;854:50;:::i;:::-;844:60;;364:546;;;;;;;;:::o;:::-;263:3598:23;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "263:3598:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:202;;;:::i;:::-;;;188:18:34;176:31;;;158:50;;146:2;131:18;1926:202:23;;;;;;;;1752:168;;;;;;;;;;-1:-1:-1;1752:168:23;;;;;:::i;:::-;;:::i;1386:184::-;;;;;;;;;;-1:-1:-1;1386:184:23;;;;;:::i;:::-;;:::i;1576:170::-;;;;;;;;;;-1:-1:-1;1576:170:23;;;;;:::i;:::-;;:::i;269:95:24:-;;;;;;;;;;-1:-1:-1;309:6:24;334:23;269:95;;334:23;;;;819:38:34;;807:2;792:18;269:95:24;675:188:34;1198:182:23;;;;;;;;;;-1:-1:-1;1198:182:23;;;;;:::i;:::-;;:::i;489:132:24:-;;;;;;;;;;-1:-1:-1;585:27:24;;489:132;;-1:-1:-1;;;;;585:27:24;;;1036:51:34;;1024:2;1009:18;489:132:24;868:225:34;2134:188:23;;;:::i;1926:202::-;1985:15;2023:98;2032:20;2062:13;585:27:24;;-1:-1:-1;;;;;585:27:24;;489:132;2062:13:23;-1:-1:-1;;;;;2062:18:23;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:9:24;451:24;;;;-1:-1:-1;;;;;451:24:24;-1:-1:-1;;;;;2097:21:23;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:35;;:9;:35;:::i;:::-;2023:8;:98::i;:::-;2012:109;;1926:202;:::o;1752:168::-;1826:15;1864:49;1873:12;1887;1901:11;1864:8;:49::i;:::-;1853:60;1752:168;-1:-1:-1;;;1752:168:23:o;1386:184::-;1473:15;1511:52;1520:15;1537:12;1551:11;1511:8;:52::i;1576:170::-;1651:15;1689:50;1698:13;1713:12;1727:11;1689:8;:50::i;1198:182::-;1284:15;1322:51;1331:14;1347:12;1361:11;1322:8;:51::i;2134:188::-;2181:15;2219:96;2228:18;2256:13;585:27:24;;-1:-1:-1;;;;;585:27:24;;489:132;2734:1125:23;2828:15;2855:64;2893:12;2907:11;2855:37;:64::i;:::-;2948:6;2978:20;2968:6;:30;;;;;;;;:::i;:::-;;2964:87;;-1:-1:-1;3026:14:23;2964:87;3074:18;3064:6;:28;;;;;;;;:::i;:::-;;3060:83;;-1:-1:-1;3120:12:23;3060:83;3153:28;3196:108;;;;;;;;3219:9;3196:108;;;;;;;;:::i;:::-;;;3238:10;3196:108;;;;-1:-1:-1;;;;;3196:108:23;;;;;;;;;;;3153:151;-1:-1:-1;;3341:28:23;3153:151;3341:19;:28::i;:::-;3315:54;-1:-1:-1;3394:14:23;3384:6;:24;;;;;;;;:::i;:::-;;:50;;;-1:-1:-1;3422:12:23;3412:6;:22;;;;;;;;:::i;:::-;;3384:50;3380:473;;;3461:61;3484:12;3498:11;3511:10;3461:22;:61::i;:::-;3450:72;;3380:473;;;3553:15;3543:6;:25;;;;;;;;:::i;:::-;;:52;;;-1:-1:-1;3582:13:23;3572:6;:23;;;;;;;;:::i;:::-;;3543:52;3539:314;;;3622:31;3642:10;3622:19;:31::i;3539:314::-;3684:20;3674:6;:30;;;;;;;;:::i;:::-;;:62;;;-1:-1:-1;3718:18:23;3708:6;:28;;;;;;;;:::i;:::-;;3674:62;3670:183;;;413:9:24;451:24;3763:79:23;;451:24:24;;;-1:-1:-1;;;;;451:24:24;-1:-1:-1;;;;;3806:21:23;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3792:37;;:11;:37;:::i;:::-;3831:10;3763:28;:79::i;:::-;3752:90;;3670:183;2845:1014;;;2734:1125;;;;;:::o;1496:443:27:-;1669:37;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1669:37:27;-1:-1:-1;;;1669:37:27;;;1645:62;;1613:28;;-1:-1:-1;;;;;1645:23:27;;;:62;;1669:37;1645:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:97;;;1717:14;1745:15;1734:36;;;;;;;;;;;;:::i;:::-;1717:53;;1872:11;1801:67;1819:38;1835:11;1848:8;1819:15;:38::i;:::-;1859:8;1801:17;:67::i;:::-;:82;1780:152;;;;-1:-1:-1;;;1780:152:27;;3315:2:34;1780:152:27;;;3297:21:34;3354:2;3334:18;;;3327:30;3393:25;3373:18;;;3366:53;3436:18;;1780:152:27;;;;;;;;;1600:339;;1496:443;;:::o;225:218:13:-;361:14;;307:12;;355:21;;;;;;;;:::i;:::-;378:7;:14;;;394:7;:20;;;416:7;:19;;;338:98;;;;;;;;;;3712:3:34;3690:16;;;;-1:-1:-1;;;;;;3686:36:34;3674:49;;3810:2;3806:15;;;-1:-1:-1;;3802:24:34;;;3798:1;3789:11;;3782:45;3861:15;;;;3857:24;3852:2;3843:12;;3836:46;3907:2;3898:12;;3891:28;3944:2;3935:12;;3465:488;338:98:13;;;;;;;;;;;;;331:105;;225:218;;;:::o;659:531:27:-;790:15;821:88;855:12;870:10;890:4;897:11;821:26;:88::i;:::-;920:78;949:12;964:20;585:27:24;;-1:-1:-1;;;;;585:27:24;;489:132;964:20:27;986:11;920:21;:78::i;:::-;585:27:24;;-1:-1:-1;;;;;585:27:24;-1:-1:-1;;;;;1020:39:27;;1073:12;1087:11;1100:12;925:17:24;;;;;;;;;855:94;1100:12:27;1034:25:24;;1020:163:27;;-1:-1:-1;;;;;;1020:163:27;;;;;;;;;;;;1034:25:24;;;-1:-1:-1;;;;;1034:25:24;;1114:47:27;;1166:7;;1020:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1009:174;659:531;-1:-1:-1;;;;659:531:27:o;427:226::-;496:15;451:24:24;;;;;-1:-1:-1;;;;;451:24:24;-1:-1:-1;;;;;534:25:27;;573:1;597:7;618:18;819:23:24;;;;;744:105;618:18:27;534:112;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;523:123;427:226;-1:-1:-1;;427:226:27:o;1196:294::-;1290:15;1328:13;585:27:24;;-1:-1:-1;;;;;585:27:24;;489:132;1328:13:27;-1:-1:-1;;;;;1328:43:27;;1379:6;1400:12;925:17:24;;;;;;;;;855:94;1400:12:27;1034:25:24;;1328:155:27;;-1:-1:-1;;;;;;1328:155:27;;;;;;;;;;1034:25:24;;;-1:-1:-1;;;;;1034:25:24;;1414:47:27;;1466:7;;1328:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1945:201::-;2025:7;2059:1;2048:8;:12;;;2044:73;;;2093:12;2104:1;2093:8;:12;:::i;:::-;2086:20;;:2;:20;:::i;:::-;2076:30;;;;:::i;:::-;;;2044:73;-1:-1:-1;2133:6:27;;1945:201;-1:-1:-1;1945:201:27:o;2152:203::-;2234:7;2268:1;2257:8;:12;;;2253:73;;;2302:12;2313:1;2302:8;:12;:::i;:::-;2295:20;;:2;:20;:::i;:::-;2285:30;;;;:::i;974:241:4:-;1139:68;;-1:-1:-1;;;;;8258:15:34;;;1139:68:4;;;8240:34:34;8310:15;;8290:18;;;8283:43;8342:18;;;8335:34;;;1112:96:4;;1132:5;;-1:-1:-1;;;1162:27:4;8175:18:34;;1139:68:4;;;;-1:-1:-1;;1139:68:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:4;-1:-1:-1;;;;;;1139:68:4;;;;;;;;;;1112:19;:96::i;1475:603::-;1830:10;;;1829:62;;-1:-1:-1;1846:39:4;;-1:-1:-1;;;1846:39:4;;1870:4;1846:39;;;8592:34:34;-1:-1:-1;;;;;8662:15:34;;;8642:18;;;8635:43;1846:15:4;;;;;8527:18:34;;1846:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:4;;8891:2:34;1808:163:4;;;8873:21:34;8930:2;8910:18;;;8903:30;8969:34;8949:18;;;8942:62;-1:-1:-1;;;9020:18:34;;;9013:52;9082:19;;1808:163:4;8689:418:34;1808:163:4;2008:62;;-1:-1:-1;;;;;9304:32:34;;2008:62:4;;;9286:51:34;9353:18;;;9346:34;;;1981:90:4;;2001:5;;-1:-1:-1;;;2031:22:4;9259:18:34;;2008:62:4;9112:274:34;1981:90:4;1475:603;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;9875:2:34;4351:85:4;;;9857:21:34;9914:2;9894:18;;;9887:30;9953:34;9933:18;;;9926:62;-1:-1:-1;;;10004:18:34;;;9997:40;10054:19;;4351:85:4;9673:406:34;3861:223:5;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:5;;;5228:60;;;;-1:-1:-1;;;5228:60:5;;10693:2:34;5228:60:5;;;10675:21:34;10732:2;10712:18;;;10705:30;10771:31;10751:18;;;10744:59;10820:18;;5228:60:5;10491:353:34;5228:60:5;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:5;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:5:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:5;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:5;;;;;;;;:::i;219:131:34:-;-1:-1:-1;;;;;294:31:34;;284:42;;274:70;;340:1;337;330:12;274:70;219:131;:::o;355:315::-;423:6;431;484:2;472:9;463:7;459:23;455:32;452:52;;;500:1;497;490:12;452:52;539:9;526:23;558:31;583:5;558:31;:::i;:::-;608:5;660:2;645:18;;;;632:32;;-1:-1:-1;;;355:315:34:o;1306:266::-;1391:6;1444:2;1432:9;1423:7;1419:23;1415:32;1412:52;;;1460:1;1457;1450:12;1412:52;1492:9;1486:16;1511:31;1536:5;1511:31;:::i;1577:184::-;1647:6;1700:2;1688:9;1679:7;1675:23;1671:32;1668:52;;;1716:1;1713;1706:12;1668:52;-1:-1:-1;1739:16:34;;1577:184;-1:-1:-1;1577:184:34:o;1766:127::-;1827:10;1822:3;1818:20;1815:1;1808:31;1858:4;1855:1;1848:15;1882:4;1879:1;1872:15;1898:125;1938:4;1966:1;1963;1960:8;1957:34;;;1971:18;;:::i;:::-;-1:-1:-1;2008:9:34;;1898:125::o;2028:127::-;2089:10;2084:3;2080:20;2077:1;2070:31;2120:4;2117:1;2110:15;2144:4;2141:1;2134:15;2160:128;2200:3;2231:1;2227:6;2224:1;2221:13;2218:39;;;2237:18;;:::i;:::-;-1:-1:-1;2273:9:34;;2160:128::o;2293:258::-;2365:1;2375:113;2389:6;2386:1;2383:13;2375:113;;;2465:11;;;2459:18;2446:11;;;2439:39;2411:2;2404:10;2375:113;;;2506:6;2503:1;2500:13;2497:48;;;-1:-1:-1;;2541:1:34;2523:16;;2516:27;2293:258::o;2556:274::-;2685:3;2723:6;2717:13;2739:53;2785:6;2780:3;2773:4;2765:6;2761:17;2739:53;:::i;:::-;2808:16;;;;;2556:274;-1:-1:-1;;2556:274:34:o;2835:273::-;2903:6;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;3004:9;2998:16;3054:4;3047:5;3043:16;3036:5;3033:27;3023:55;;3074:1;3071;3064:12;3958:257;3999:3;4037:5;4031:12;4064:6;4059:3;4052:19;4080:63;4136:6;4129:4;4124:3;4120:14;4113:4;4106:5;4102:16;4080:63;:::i;:::-;4197:2;4176:15;-1:-1:-1;;4172:29:34;4163:39;;;;4204:4;4159:50;;3958:257;-1:-1:-1;;3958:257:34:o;4220:637::-;4541:1;4537;4532:3;4528:11;4524:19;4516:6;4512:32;4501:9;4494:51;4581:6;4576:2;4565:9;4561:18;4554:34;4636:6;4628;4624:19;4619:2;4608:9;4604:18;4597:47;4680:6;4675:2;4664:9;4660:18;4653:34;4736:10;4728:6;4724:23;4718:3;4707:9;4703:19;4696:52;4785:3;4779;4768:9;4764:19;4757:32;4475:4;4806:45;4846:3;4835:9;4831:19;4823:6;4806:45;:::i;:::-;4798:53;4220:637;-1:-1:-1;;;;;;;;4220:637:34:o;4862:288::-;4931:6;4984:2;4972:9;4963:7;4959:23;4955:32;4952:52;;;5000:1;4997;4990:12;4952:52;5032:9;5026:16;5082:18;5075:5;5071:30;5064:5;5061:41;5051:69;;5116:1;5113;5106:12;5155:390;5373:10;5365:6;5361:23;5350:9;5343:42;5421:2;5416;5405:9;5401:18;5394:30;5324:4;5441:44;5481:2;5470:9;5466:18;5458:6;5441:44;:::i;:::-;5433:52;;5533:4;5525:6;5521:17;5516:2;5505:9;5501:18;5494:45;5155:390;;;;;;:::o;5550:467::-;5798:6;5790;5786:19;5775:9;5768:38;5842:6;5837:2;5826:9;5822:18;5815:34;5897:10;5889:6;5885:23;5880:2;5869:9;5865:18;5858:51;5945:3;5940:2;5929:9;5925:18;5918:31;5749:4;5966:45;6006:3;5995:9;5991:19;5983:6;5966:45;:::i;:::-;5958:53;5550:467;-1:-1:-1;;;;;;5550:467:34:o;6022:195::-;6060:4;6097;6094:1;6090:12;6129:4;6126:1;6122:12;6154:3;6149;6146:12;6143:38;;;6161:18;;:::i;:::-;6198:13;;;6022:195;-1:-1:-1;;;6022:195:34:o;6222:422::-;6311:1;6354:5;6311:1;6368:270;6389:7;6379:8;6376:21;6368:270;;;6448:4;6444:1;6440:6;6436:17;6430:4;6427:27;6424:53;;;6457:18;;:::i;:::-;6507:7;6497:8;6493:22;6490:55;;;6527:16;;;;6490:55;6606:22;;;;6566:15;;;;6368:270;;;6372:3;6222:422;;;;;:::o;6649:806::-;6698:5;6728:8;6718:80;;-1:-1:-1;6769:1:34;6783:5;;6718:80;6817:4;6807:76;;-1:-1:-1;6854:1:34;6868:5;;6807:76;6899:4;6917:1;6912:59;;;;6985:1;6980:130;;;;6892:218;;6912:59;6942:1;6933:10;;6956:5;;;6980:130;7017:3;7007:8;7004:17;7001:43;;;7024:18;;:::i;:::-;-1:-1:-1;;7080:1:34;7066:16;;7095:5;;6892:218;;7194:2;7184:8;7181:16;7175:3;7169:4;7166:13;7162:36;7156:2;7146:8;7143:16;7138:2;7132:4;7129:12;7125:35;7122:77;7119:159;;;-1:-1:-1;7231:19:34;;;7263:5;;7119:159;7310:34;7335:8;7329:4;7310:34;:::i;:::-;7380:6;7376:1;7372:6;7368:19;7359:7;7356:32;7353:58;;;7391:18;;:::i;:::-;7429:20;;6649:806;-1:-1:-1;;;6649:806:34:o;7460:140::-;7518:5;7547:47;7588:4;7578:8;7574:19;7568:4;7547:47;:::i;7605:217::-;7645:1;7671;7661:132;;7715:10;7710:3;7706:20;7703:1;7696:31;7750:4;7747:1;7740:15;7778:4;7775:1;7768:15;7661:132;-1:-1:-1;7807:9:34;;7605:217::o;7827:168::-;7867:7;7933:1;7929;7925:6;7921:14;7918:1;7915:21;7910:1;7903:9;7896:17;7892:45;7889:71;;;7940:18;;:::i;:::-;-1:-1:-1;7980:9:34;;7827:168::o;9391:277::-;9458:6;9511:2;9499:9;9490:7;9486:23;9482:32;9479:52;;;9527:1;9524;9517:12;9479:52;9559:9;9553:16;9612:5;9605:13;9598:21;9591:5;9588:32;9578:60;;9634:1;9631;9624:12;10849:219;10998:2;10987:9;10980:21;10961:4;11018:44;11058:2;11047:9;11043:18;11035:6;11018:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "borrow(address,uint256)": "4b8a3529",
    "chainId()": "9a8a0592",
    "depositCollateral(address,uint256)": "a5d5db0c",
    "depositCollateralNative()": "00470257",
    "repay(address,uint256)": "22867d78",
    "repayNative()": "edba8209",
    "tokenBridge()": "c6328a46",
    "tokenBridgeAddress()": "e1884919",
    "withdrawCollateral(address,uint256)": "350c35e9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"wormhole\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBridge\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"hubChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"hubContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCollateralNative\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repayNative\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"chainId\":\": Chain ID of the chain that this Spoke is deployed on\",\"hubChainId\":\": Chain ID of the Hub\",\"hubContractAddress\":\": Contract address of the Hub contract (on the Hub chain)\",\"tokenBridge\":\": Address of the TokenBridge contract on this Spoke chain\",\"wormhole\":\": Address of the Wormhole contract on this Spoke chain\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Spoke constructor - Initializes a new spoke with given parameters \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/lendingSpoke/Spoke.sol\":\"Spoke\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@pythnetwork/=node_modules/@pythnetwork/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"src/contracts/HubSpokeMessages.sol\":{\"keccak256\":\"0xbd7eddd402e84ececac48891645f176cd5c7c1e900ea6c10535d79f5df711dfd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9f854584331c92ceedab8a9164a2d57ebde3aabbf081fd82c2862bddb978bf2\",\"dweb:/ipfs/QmTnJyxqnSq7n9o2FgGfV1RecQ2HTW8vJfPcCS9Qwig1No\"]},\"src/contracts/HubSpokeStructs.sol\":{\"keccak256\":\"0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e\",\"dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6\"]},\"src/contracts/lendingSpoke/Spoke.sol\":{\"keccak256\":\"0x0063359e2cac4d582fffc1f30e5ea15356a007659ba1df155fd678af5e8b8937\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://835f69ed0ef1d37b242da4e4569863ffe7ffd0eb696658102d13467b4529f44e\",\"dweb:/ipfs/QmTA4RMxJCBEqRMtrovxw5JeZnL6zEfyHQ72WpB3Si9qZh\"]},\"src/contracts/lendingSpoke/SpokeGetters.sol\":{\"keccak256\":\"0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166\",\"dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V\"]},\"src/contracts/lendingSpoke/SpokeSetters.sol\":{\"keccak256\":\"0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78\",\"dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu\"]},\"src/contracts/lendingSpoke/SpokeState.sol\":{\"keccak256\":\"0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802\",\"dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM\"]},\"src/contracts/lendingSpoke/SpokeUtilities.sol\":{\"keccak256\":\"0x4949d952da262ad98edb83c126fa33ef3f45ab08ba61fe2880a699000c120674\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://17a8e50a1d57940a2e58591f3f757971f03a37eb2779db1e21e002f3edf4ff4d\",\"dweb:/ipfs/QmVssGsyJEGCT6hGSd6ZMBg56ZzVt4oqZFSbqUZczVyXUA\"]},\"src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae\",\"dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva\"]},\"src/interfaces/IWETH.sol\":{\"keccak256\":\"0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60\",\"dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT\"]},\"src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563\",\"dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8\"]},\"src/libraries/external/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "wormhole",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenBridge",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "hubChainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "hubContractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositCollateral",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositCollateralNative",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "repayNative",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenBridge",
          "outputs": [
            {
              "internalType": "contract ITokenBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenBridgeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawCollateral",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "chainId": ": Chain ID of the chain that this Spoke is deployed on",
              "hubChainId": ": Chain ID of the Hub",
              "hubContractAddress": ": Contract address of the Hub contract (on the Hub chain)",
              "tokenBridge": ": Address of the TokenBridge contract on this Spoke chain",
              "wormhole": ": Address of the Wormhole contract on this Spoke chain"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Spoke constructor - Initializes a new spoke with given parameters "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@pythnetwork/=node_modules/@pythnetwork/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/lendingSpoke/Spoke.sol": "Spoke"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "src/contracts/HubSpokeMessages.sol": {
        "keccak256": "0xbd7eddd402e84ececac48891645f176cd5c7c1e900ea6c10535d79f5df711dfd",
        "urls": [
          "bzz-raw://b9f854584331c92ceedab8a9164a2d57ebde3aabbf081fd82c2862bddb978bf2",
          "dweb:/ipfs/QmTnJyxqnSq7n9o2FgGfV1RecQ2HTW8vJfPcCS9Qwig1No"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/HubSpokeStructs.sol": {
        "keccak256": "0x24302b1f2d165f5b53d3bedd11aa1c367d30458bb93e0a34a79a939e753fd7dc",
        "urls": [
          "bzz-raw://11d40dd261195ea6fe19f0aa56d2aad5040cabd000041b250d3419985e9d6a9e",
          "dweb:/ipfs/Qmd59wjnwsyt2ave7vYQZQdPxk2AGHAvWVhQAUGAgxPMJ6"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingSpoke/Spoke.sol": {
        "keccak256": "0x0063359e2cac4d582fffc1f30e5ea15356a007659ba1df155fd678af5e8b8937",
        "urls": [
          "bzz-raw://835f69ed0ef1d37b242da4e4569863ffe7ffd0eb696658102d13467b4529f44e",
          "dweb:/ipfs/QmTA4RMxJCBEqRMtrovxw5JeZnL6zEfyHQ72WpB3Si9qZh"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingSpoke/SpokeGetters.sol": {
        "keccak256": "0xb997dc0290213b1a75e59c29dd4a2528d203bc6c2f511db26e07c9e7e4795d4b",
        "urls": [
          "bzz-raw://fe39567ca05eca938a1a173c036a348bc0abde7af35227d5fa38a7e173813166",
          "dweb:/ipfs/QmPU7NnzM1MLPHFH9rpxT9PU8Xn3kpw9beyaxfbi4hcf3V"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingSpoke/SpokeSetters.sol": {
        "keccak256": "0x9ac8f289c14b91bfa37e3e4e52de2b7b045ac8b18881600e94f9177e7339180a",
        "urls": [
          "bzz-raw://775105aa5cc5315e82d9b7ce6c9ad1c52bf5fb0659ec6f03b3f76339f1ffed78",
          "dweb:/ipfs/QmfWXxyrasDjtXLD1fAvytQe6tQL5cJGsqQUUxhdS3orFu"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingSpoke/SpokeState.sol": {
        "keccak256": "0xf80dacbb4d6dcdaf5e87cd345ce29cbbcd8de072a0afc52893a2afb62eee3e79",
        "urls": [
          "bzz-raw://da38f2e7895e5a2cd7434bb9379c8e302e2d1332469e0981273acbad59613802",
          "dweb:/ipfs/QmYmEgB535PXwEywshC7PdbgxiT2Av1MstdUnttHWgq4SM"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/lendingSpoke/SpokeUtilities.sol": {
        "keccak256": "0x4949d952da262ad98edb83c126fa33ef3f45ab08ba61fe2880a699000c120674",
        "urls": [
          "bzz-raw://17a8e50a1d57940a2e58591f3f757971f03a37eb2779db1e21e002f3edf4ff4d",
          "dweb:/ipfs/QmVssGsyJEGCT6hGSd6ZMBg56ZzVt4oqZFSbqUZczVyXUA"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ITokenBridge.sol": {
        "keccak256": "0x4c464b3e06d31406bd5c777cf8cc985a2f61ce363b6b8f1471c6b5c5da85bf17",
        "urls": [
          "bzz-raw://acb5d5fc309b2cb1db62e1a8b9b3a1cb30b66f6b92b39477beb7a6bc61e0a4ae",
          "dweb:/ipfs/QmakrPQL2o7uVBYenB4wf1rth1JwKRoo7rJdXx7EPKczva"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/IWETH.sol": {
        "keccak256": "0xecabfd3b5626aaac6da21213b966a2aac8380f4fec739f84ffe08b29006d134e",
        "urls": [
          "bzz-raw://912a0accde3c2d18f8d268726ec16b9dfa0f24522e66e7d88c9ed368f3db7d60",
          "dweb:/ipfs/Qmf2V8YhAXRSYVFKuCeCViYAnnWtPi9GTL7w4zRPtMvGTT"
        ],
        "license": "Apache 2"
      },
      "src/interfaces/IWormhole.sol": {
        "keccak256": "0x8547d11f760ad248fe6620e146ed7756654f26b769f9deebdbb84d534144e216",
        "urls": [
          "bzz-raw://5ac7aae1f4c9fbf06056856e854ba7ab14a5c7a487618f0a5a752e25d8d36563",
          "dweb:/ipfs/QmNf2aFrp4tgEGd1AvaSJTMHb72RVgw1TBfvNp5tQ2TZH8"
        ],
        "license": "Apache 2"
      },
      "src/libraries/external/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/lendingSpoke/Spoke.sol",
    "id": 14071,
    "exportedSymbols": {
      "BytesLib": [
        15414
      ],
      "HubSpokeMessages": [
        9911
      ],
      "HubSpokeStructs": [
        9991
      ],
      "IERC20": [
        8254
      ],
      "ITokenBridge": [
        14932
      ],
      "IWETH": [
        14959
      ],
      "IWormhole": [
        15081
      ],
      "SafeERC20": [
        8571
      ],
      "Spoke": [
        14070
      ],
      "SpokeGetters": [
        14157
      ],
      "SpokeSetters": [
        14235
      ],
      "SpokeState": [
        14266
      ],
      "SpokeStorage": [
        14262
      ],
      "SpokeUtilities": [
        14493
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3823:23",
    "nodes": [
      {
        "id": 13766,
        "nodeType": "PragmaDirective",
        "src": "39:23:23",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 13767,
        "nodeType": "ImportDirective",
        "src": "64:40:23",
        "nodes": [],
        "absolutePath": "src/interfaces/IWormhole.sol",
        "file": "../../interfaces/IWormhole.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14071,
        "sourceUnit": 15082,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13768,
        "nodeType": "ImportDirective",
        "src": "106:28:23",
        "nodes": [],
        "absolutePath": "src/contracts/lendingSpoke/SpokeSetters.sol",
        "file": "./SpokeSetters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14071,
        "sourceUnit": 14236,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13769,
        "nodeType": "ImportDirective",
        "src": "135:32:23",
        "nodes": [],
        "absolutePath": "src/contracts/HubSpokeStructs.sol",
        "file": "../HubSpokeStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14071,
        "sourceUnit": 9992,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13770,
        "nodeType": "ImportDirective",
        "src": "168:33:23",
        "nodes": [],
        "absolutePath": "src/contracts/HubSpokeMessages.sol",
        "file": "../HubSpokeMessages.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14071,
        "sourceUnit": 9912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13771,
        "nodeType": "ImportDirective",
        "src": "202:28:23",
        "nodes": [],
        "absolutePath": "src/contracts/lendingSpoke/SpokeGetters.sol",
        "file": "./SpokeGetters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14071,
        "sourceUnit": 14158,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13772,
        "nodeType": "ImportDirective",
        "src": "231:30:23",
        "nodes": [],
        "absolutePath": "src/contracts/lendingSpoke/SpokeUtilities.sol",
        "file": "./SpokeUtilities.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14071,
        "sourceUnit": 14494,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14070,
        "nodeType": "ContractDefinition",
        "src": "263:3598:23",
        "nodes": [
          {
            "id": 13817,
            "nodeType": "FunctionDefinition",
            "src": "842:350:23",
            "nodes": [],
            "body": {
              "id": 13816,
              "nodeType": "Block",
              "src": "1002:190:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13797,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13785,
                        "src": "1023:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 13796,
                      "name": "setChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14179,
                      "src": "1012:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 13798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:19:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13799,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:19:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13801,
                        "name": "wormhole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13787,
                        "src": "1053:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13800,
                      "name": "setWormhole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14196,
                      "src": "1041:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:21:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13803,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13805,
                        "name": "tokenBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13789,
                        "src": "1087:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13804,
                      "name": "setTokenBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14210,
                      "src": "1072:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13807,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:27:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13809,
                        "name": "hubChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13791,
                        "src": "1123:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 13808,
                      "name": "setHubChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14222,
                      "src": "1109:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 13810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13811,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:25:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13813,
                        "name": "hubContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13793,
                        "src": "1166:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13812,
                      "name": "setHubContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14234,
                      "src": "1144:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:41:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13815,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:41:23"
                }
              ]
            },
            "documentation": {
              "id": 13783,
              "nodeType": "StructuredDocumentation",
              "src": "365:472:23",
              "text": " @notice Spoke constructor - Initializes a new spoke with given parameters\n \n @param chainId: Chain ID of the chain that this Spoke is deployed on\n @param wormhole: Address of the Wormhole contract on this Spoke chain\n @param tokenBridge: Address of the TokenBridge contract on this Spoke chain\n @param hubChainId: Chain ID of the Hub\n @param hubContractAddress: Contract address of the Hub contract (on the Hub chain)"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13785,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "870:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13817,
                  "src": "863:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 13784,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13787,
                  "mutability": "mutable",
                  "name": "wormhole",
                  "nameLocation": "895:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13817,
                  "src": "887:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13789,
                  "mutability": "mutable",
                  "name": "tokenBridge",
                  "nameLocation": "921:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13817,
                  "src": "913:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13791,
                  "mutability": "mutable",
                  "name": "hubChainId",
                  "nameLocation": "949:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13817,
                  "src": "942:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 13790,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13793,
                  "mutability": "mutable",
                  "name": "hubContractAddress",
                  "nameLocation": "977:18:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13817,
                  "src": "969:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:148:23"
            },
            "returnParameters": {
              "id": 13795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1002:0:23"
            },
            "scope": 14070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13836,
            "nodeType": "FunctionDefinition",
            "src": "1198:182:23",
            "nodes": [],
            "body": {
              "id": 13835,
              "nodeType": "Block",
              "src": "1301:79:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13826,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13824,
                      "src": "1311:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13828,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "1331:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 13829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9962,
                          "src": "1331:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        {
                          "id": 13830,
                          "name": "assetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13819,
                          "src": "1347:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 13831,
                          "name": "assetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13821,
                          "src": "1361:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13827,
                        "name": "doAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "1322:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
                        }
                      },
                      "id": 13832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1322:51:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1311:62:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13834,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:62:23"
                }
              ]
            },
            "functionSelector": "a5d5db0c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositCollateral",
            "nameLocation": "1207:17:23",
            "parameters": {
              "id": 13822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13819,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "1233:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "1225:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13821,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "1255:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "1247:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1224:43:23"
            },
            "returnParameters": {
              "id": 13825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13824,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "1291:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13836,
                  "src": "1284:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13823,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1283:17:23"
            },
            "scope": 14070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13855,
            "nodeType": "FunctionDefinition",
            "src": "1386:184:23",
            "nodes": [],
            "body": {
              "id": 13854,
              "nodeType": "Block",
              "src": "1490:80:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13845,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13843,
                      "src": "1500:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13847,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "1520:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 13848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Withdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9964,
                          "src": "1520:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        {
                          "id": 13849,
                          "name": "assetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13838,
                          "src": "1537:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 13850,
                          "name": "assetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13840,
                          "src": "1551:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13846,
                        "name": "doAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "1511:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
                        }
                      },
                      "id": 13851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1511:52:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1500:63:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13853,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:63:23"
                }
              ]
            },
            "functionSelector": "350c35e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nameLocation": "1395:18:23",
            "parameters": {
              "id": 13841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13838,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "1422:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13855,
                  "src": "1414:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13840,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "1444:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13855,
                  "src": "1436:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1413:43:23"
            },
            "returnParameters": {
              "id": 13844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13843,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "1480:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13855,
                  "src": "1473:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13842,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:17:23"
            },
            "scope": 14070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13874,
            "nodeType": "FunctionDefinition",
            "src": "1576:170:23",
            "nodes": [],
            "body": {
              "id": 13873,
              "nodeType": "Block",
              "src": "1668:78:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13864,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13862,
                      "src": "1678:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13866,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "1698:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 13867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Borrow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9963,
                          "src": "1698:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        {
                          "id": 13868,
                          "name": "assetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13857,
                          "src": "1713:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 13869,
                          "name": "assetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13859,
                          "src": "1727:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13865,
                        "name": "doAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "1689:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
                        }
                      },
                      "id": 13870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1689:50:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1678:61:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13872,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:61:23"
                }
              ]
            },
            "functionSelector": "4b8a3529",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nameLocation": "1585:6:23",
            "parameters": {
              "id": 13860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13857,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "1600:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13874,
                  "src": "1592:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13859,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "1622:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13874,
                  "src": "1614:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1591:43:23"
            },
            "returnParameters": {
              "id": 13863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13862,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "1658:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13874,
                  "src": "1651:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13861,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:17:23"
            },
            "scope": 14070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13893,
            "nodeType": "FunctionDefinition",
            "src": "1752:168:23",
            "nodes": [],
            "body": {
              "id": 13892,
              "nodeType": "Block",
              "src": "1843:77:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13883,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13881,
                      "src": "1853:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13885,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "1873:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 13886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Repay",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9965,
                          "src": "1873:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        {
                          "id": 13887,
                          "name": "assetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13876,
                          "src": "1887:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 13888,
                          "name": "assetAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13878,
                          "src": "1901:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13884,
                        "name": "doAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "1864:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
                        }
                      },
                      "id": 13889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1864:49:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1853:60:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13891,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:60:23"
                }
              ]
            },
            "functionSelector": "22867d78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nameLocation": "1761:5:23",
            "parameters": {
              "id": 13879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13876,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "1775:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13893,
                  "src": "1767:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13878,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "1797:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13893,
                  "src": "1789:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1766:43:23"
            },
            "returnParameters": {
              "id": 13882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13881,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "1833:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13893,
                  "src": "1826:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13880,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:17:23"
            },
            "scope": 14070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13920,
            "nodeType": "FunctionDefinition",
            "src": "1926:202:23",
            "nodes": [],
            "body": {
              "id": 13919,
              "nodeType": "Block",
              "src": "2002:126:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13898,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13896,
                      "src": "2012:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13900,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "2032:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 13901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "DepositNative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9966,
                          "src": "2032:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 13904,
                                    "name": "tokenBridge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14119,
                                    "src": "2062:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$14932_$",
                                      "typeString": "function () view returns (contract ITokenBridge)"
                                    }
                                  },
                                  "id": 13905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2062:13:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ITokenBridge_$14932",
                                    "typeString": "contract ITokenBridge"
                                  }
                                },
                                "id": 13906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "WETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14865,
                                "src": "2062:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IWETH_$14959_$",
                                  "typeString": "function () view external returns (contract IWETH)"
                                }
                              },
                              "id": 13907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2062:20:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWETH_$14959",
                                "typeString": "contract IWETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IWETH_$14959",
                                "typeString": "contract IWETH"
                              }
                            ],
                            "id": 13903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2054:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13902,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2054:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2054:29:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13909,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2085:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2085:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 13911,
                                  "name": "wormhole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14103,
                                  "src": "2097:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$15081_$",
                                    "typeString": "function () view returns (contract IWormhole)"
                                  }
                                },
                                "id": 13912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2097:10:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IWormhole_$15081",
                                  "typeString": "contract IWormhole"
                                }
                              },
                              "id": 13913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "messageFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15053,
                              "src": "2097:21:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 13914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2097:23:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2085:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13899,
                        "name": "doAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "2023:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
                        }
                      },
                      "id": 13916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2023:98:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2012:109:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13918,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:109:23"
                }
              ]
            },
            "functionSelector": "00470257",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositCollateralNative",
            "nameLocation": "1935:23:23",
            "parameters": {
              "id": 13894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1958:2:23"
            },
            "returnParameters": {
              "id": 13897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13896,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "1992:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13920,
                  "src": "1985:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13895,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:17:23"
            },
            "scope": 14070,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13947,
            "nodeType": "FunctionDefinition",
            "src": "2134:188:23",
            "nodes": [],
            "body": {
              "id": 13946,
              "nodeType": "Block",
              "src": "2198:124:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13925,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13923,
                      "src": "2208:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13927,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "2228:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 13928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RepayNative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9967,
                          "src": "2228:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 13931,
                                    "name": "tokenBridge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14119,
                                    "src": "2256:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ITokenBridge_$14932_$",
                                      "typeString": "function () view returns (contract ITokenBridge)"
                                    }
                                  },
                                  "id": 13932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2256:13:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ITokenBridge_$14932",
                                    "typeString": "contract ITokenBridge"
                                  }
                                },
                                "id": 13933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "WETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14865,
                                "src": "2256:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IWETH_$14959_$",
                                  "typeString": "function () view external returns (contract IWETH)"
                                }
                              },
                              "id": 13934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2256:20:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWETH_$14959",
                                "typeString": "contract IWETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IWETH_$14959",
                                "typeString": "contract IWETH"
                              }
                            ],
                            "id": 13930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2248:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13929,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2248:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2248:29:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13936,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2279:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2279:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 13938,
                                  "name": "wormhole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14103,
                                  "src": "2291:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$15081_$",
                                    "typeString": "function () view returns (contract IWormhole)"
                                  }
                                },
                                "id": 13939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2291:10:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IWormhole_$15081",
                                  "typeString": "contract IWormhole"
                                }
                              },
                              "id": 13940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "messageFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15053,
                              "src": "2291:21:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 13941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2291:23:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2279:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13926,
                        "name": "doAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "2219:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Action_$9968_$_t_address_$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (enum HubSpokeStructs.Action,address,uint256) returns (uint64)"
                        }
                      },
                      "id": 13943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2219:96:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2208:107:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 13945,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:107:23"
                }
              ]
            },
            "functionSelector": "edba8209",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayNative",
            "nameLocation": "2143:11:23",
            "parameters": {
              "id": 13921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:2:23"
            },
            "returnParameters": {
              "id": 13924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13923,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "2188:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 13947,
                  "src": "2181:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13922,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2180:17:23"
            },
            "scope": 14070,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14069,
            "nodeType": "FunctionDefinition",
            "src": "2734:1125:23",
            "nodes": [],
            "body": {
              "id": 14068,
              "nodeType": "Block",
              "src": "2845:1014:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13961,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13953,
                        "src": "2893:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13962,
                        "name": "assetAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13955,
                        "src": "2907:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13960,
                      "name": "requireAssetAmountValidForTokenBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14440,
                      "src": "2855:37:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 13963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13964,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:64:23"
                },
                {
                  "assignments": [
                    13967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13967,
                      "mutability": "mutable",
                      "name": "hubAction",
                      "nameLocation": "2936:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 14068,
                      "src": "2929:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      },
                      "typeName": {
                        "id": 13966,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13965,
                          "name": "Action",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9968,
                          "src": "2929:6:23"
                        },
                        "referencedDeclaration": 9968,
                        "src": "2929:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13969,
                  "initialValue": {
                    "id": 13968,
                    "name": "action",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13951,
                    "src": "2948:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2929:25:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    },
                    "id": 13973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13970,
                      "name": "action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13951,
                      "src": "2968:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 13971,
                        "name": "Action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9968,
                        "src": "2978:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                          "typeString": "type(enum HubSpokeStructs.Action)"
                        }
                      },
                      "id": 13972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DepositNative",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9966,
                      "src": "2978:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "src": "2968:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13980,
                  "nodeType": "IfStatement",
                  "src": "2964:87:23",
                  "trueBody": {
                    "id": 13979,
                    "nodeType": "Block",
                    "src": "3000:51:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 13977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13974,
                            "name": "hubAction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13967,
                            "src": "3014:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 13975,
                              "name": "Action",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9968,
                              "src": "3026:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                "typeString": "type(enum HubSpokeStructs.Action)"
                              }
                            },
                            "id": 13976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9962,
                            "src": "3026:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "src": "3014:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "id": 13978,
                        "nodeType": "ExpressionStatement",
                        "src": "3014:26:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    },
                    "id": 13984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13981,
                      "name": "action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13951,
                      "src": "3064:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 13982,
                        "name": "Action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9968,
                        "src": "3074:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                          "typeString": "type(enum HubSpokeStructs.Action)"
                        }
                      },
                      "id": 13983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RepayNative",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9967,
                      "src": "3074:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      }
                    },
                    "src": "3064:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13991,
                  "nodeType": "IfStatement",
                  "src": "3060:83:23",
                  "trueBody": {
                    "id": 13990,
                    "nodeType": "Block",
                    "src": "3094:49:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 13988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13985,
                            "name": "hubAction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13967,
                            "src": "3108:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 13986,
                              "name": "Action",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9968,
                              "src": "3120:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                "typeString": "type(enum HubSpokeStructs.Action)"
                              }
                            },
                            "id": 13987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Repay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9965,
                            "src": "3120:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "src": "3108:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "id": 13989,
                        "nodeType": "ExpressionStatement",
                        "src": "3108:24:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    13994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13994,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "3174:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 14068,
                      "src": "3153:28:23",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                        "typeString": "struct HubSpokeStructs.ActionPayload"
                      },
                      "typeName": {
                        "id": 13993,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13992,
                          "name": "ActionPayload",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9981,
                          "src": "3153:13:23"
                        },
                        "referencedDeclaration": 9981,
                        "src": "3153:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ActionPayload_$9981_storage_ptr",
                          "typeString": "struct HubSpokeStructs.ActionPayload"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14002,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13996,
                        "name": "hubAction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13967,
                        "src": "3219:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      {
                        "expression": {
                          "id": 13997,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3238:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3238:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13999,
                        "name": "assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13953,
                        "src": "3264:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14000,
                        "name": "assetAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13955,
                        "src": "3291:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13995,
                      "name": "ActionPayload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9981,
                      "src": "3196:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ActionPayload_$9981_storage_ptr_$",
                        "typeString": "type(struct HubSpokeStructs.ActionPayload storage pointer)"
                      }
                    },
                    "id": 14001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "action",
                      "sender",
                      "assetAddress",
                      "assetAmount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3196:108:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                      "typeString": "struct HubSpokeStructs.ActionPayload memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3153:151:23"
                },
                {
                  "assignments": [
                    14004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14004,
                      "mutability": "mutable",
                      "name": "serialized",
                      "nameLocation": "3328:10:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 14068,
                      "src": "3315:23:23",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 14003,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3315:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14008,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14006,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13994,
                        "src": "3361:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                          "typeString": "struct HubSpokeStructs.ActionPayload memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ActionPayload_$9981_memory_ptr",
                          "typeString": "struct HubSpokeStructs.ActionPayload memory"
                        }
                      ],
                      "id": 14005,
                      "name": "encodeActionPayload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9847,
                      "src": "3341:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ActionPayload_$9981_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct HubSpokeStructs.ActionPayload memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 14007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:28:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3315:54:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      },
                      "id": 14012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14009,
                        "name": "action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13951,
                        "src": "3384:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 14010,
                          "name": "Action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9968,
                          "src": "3394:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                            "typeString": "type(enum HubSpokeStructs.Action)"
                          }
                        },
                        "id": 14011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9962,
                        "src": "3394:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "src": "3384:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Action_$9968",
                        "typeString": "enum HubSpokeStructs.Action"
                      },
                      "id": 14016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14013,
                        "name": "action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13951,
                        "src": "3412:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 14014,
                          "name": "Action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9968,
                          "src": "3422:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                            "typeString": "type(enum HubSpokeStructs.Action)"
                          }
                        },
                        "id": 14015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Repay",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9965,
                        "src": "3422:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        }
                      },
                      "src": "3412:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3384:50:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 14035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        },
                        "id": 14030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14027,
                          "name": "action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13951,
                          "src": "3543:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14028,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "3553:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 14029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Withdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9964,
                          "src": "3553:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "src": "3543:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Action_$9968",
                          "typeString": "enum HubSpokeStructs.Action"
                        },
                        "id": 14034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14031,
                          "name": "action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13951,
                          "src": "3572:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14032,
                            "name": "Action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9968,
                            "src": "3582:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                              "typeString": "type(enum HubSpokeStructs.Action)"
                            }
                          },
                          "id": 14033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Borrow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9963,
                          "src": "3582:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          }
                        },
                        "src": "3572:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3543:52:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          "id": 14046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14043,
                            "name": "action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13951,
                            "src": "3674:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 14044,
                              "name": "Action",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9968,
                              "src": "3684:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                "typeString": "type(enum HubSpokeStructs.Action)"
                              }
                            },
                            "id": 14045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "DepositNative",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9966,
                            "src": "3684:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "src": "3674:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Action_$9968",
                            "typeString": "enum HubSpokeStructs.Action"
                          },
                          "id": 14050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14047,
                            "name": "action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13951,
                            "src": "3708:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 14048,
                              "name": "Action",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9968,
                              "src": "3718:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Action_$9968_$",
                                "typeString": "type(enum HubSpokeStructs.Action)"
                              }
                            },
                            "id": 14049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "RepayNative",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9967,
                            "src": "3718:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Action_$9968",
                              "typeString": "enum HubSpokeStructs.Action"
                            }
                          },
                          "src": "3708:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3674:62:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 14065,
                      "nodeType": "IfStatement",
                      "src": "3670:183:23",
                      "trueBody": {
                        "id": 14064,
                        "nodeType": "Block",
                        "src": "3738:115:23",
                        "statements": [
                          {
                            "expression": {
                              "id": 14062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 14052,
                                "name": "sequence",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13958,
                                "src": "3752:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 14059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 14054,
                                      "name": "assetAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13955,
                                      "src": "3792:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 14055,
                                            "name": "wormhole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14103,
                                            "src": "3806:8:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IWormhole_$15081_$",
                                              "typeString": "function () view returns (contract IWormhole)"
                                            }
                                          },
                                          "id": 14056,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3806:10:23",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IWormhole_$15081",
                                            "typeString": "contract IWormhole"
                                          }
                                        },
                                        "id": 14057,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "messageFee",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 15053,
                                        "src": "3806:21:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view external returns (uint256)"
                                        }
                                      },
                                      "id": 14058,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3806:23:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3792:37:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 14060,
                                    "name": "serialized",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14004,
                                    "src": "3831:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 14053,
                                  "name": "sendTokenBridgeMessageNative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14399,
                                  "src": "3763:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
                                    "typeString": "function (uint256,bytes memory) returns (uint64)"
                                  }
                                },
                                "id": 14061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3763:79:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "3752:90:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "id": 14063,
                            "nodeType": "ExpressionStatement",
                            "src": "3752:90:23"
                          }
                        ]
                      }
                    },
                    "id": 14066,
                    "nodeType": "IfStatement",
                    "src": "3539:314:23",
                    "trueBody": {
                      "id": 14042,
                      "nodeType": "Block",
                      "src": "3597:67:23",
                      "statements": [
                        {
                          "expression": {
                            "id": 14040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 14036,
                              "name": "sequence",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13958,
                              "src": "3611:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 14038,
                                  "name": "serialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14004,
                                  "src": "3642:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14037,
                                "name": "sendWormholeMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14303,
                                "src": "3622:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint64_$",
                                  "typeString": "function (bytes memory) returns (uint64)"
                                }
                              },
                              "id": 14039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3622:31:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "3611:42:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "id": 14041,
                          "nodeType": "ExpressionStatement",
                          "src": "3611:42:23"
                        }
                      ]
                    }
                  },
                  "id": 14067,
                  "nodeType": "IfStatement",
                  "src": "3380:473:23",
                  "trueBody": {
                    "id": 14026,
                    "nodeType": "Block",
                    "src": "3436:97:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 14024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14018,
                            "name": "sequence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13958,
                            "src": "3450:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 14020,
                                "name": "assetAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13953,
                                "src": "3484:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 14021,
                                "name": "assetAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13955,
                                "src": "3498:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 14022,
                                "name": "serialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14004,
                                "src": "3511:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 14019,
                              "name": "sendTokenBridgeMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14365,
                              "src": "3461:22:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
                                "typeString": "function (address,uint256,bytes memory) returns (uint64)"
                              }
                            },
                            "id": 14023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3461:61:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3450:72:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 14025,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:72:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 13948,
              "nodeType": "StructuredDocumentation",
              "src": "2328:401:23",
              "text": " @notice Initiates an action (deposit, borrow, withdraw, or repay) on the spoke by sending a Wormhole message (potentially a TokenBridge message with tokens) to the Hub\n \n @param action - the action (either Deposit, Borrow, Withdraw, or Repay)\n @param assetAddress - the address of the relevant asset\n @param assetAmount - the amount of the asset assetAddress"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doAction",
            "nameLocation": "2743:8:23",
            "parameters": {
              "id": 13956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13951,
                  "mutability": "mutable",
                  "name": "action",
                  "nameLocation": "2759:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 14069,
                  "src": "2752:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Action_$9968",
                    "typeString": "enum HubSpokeStructs.Action"
                  },
                  "typeName": {
                    "id": 13950,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13949,
                      "name": "Action",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9968,
                      "src": "2752:6:23"
                    },
                    "referencedDeclaration": 9968,
                    "src": "2752:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Action_$9968",
                      "typeString": "enum HubSpokeStructs.Action"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13953,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "2775:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 14069,
                  "src": "2767:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2767:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13955,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "2797:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 14069,
                  "src": "2789:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:58:23"
            },
            "returnParameters": {
              "id": 13959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13958,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "2835:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 14069,
                  "src": "2828:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13957,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:17:23"
            },
            "scope": 14070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13773,
              "name": "HubSpokeStructs",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9991,
              "src": "281:15:23"
            },
            "id": 13774,
            "nodeType": "InheritanceSpecifier",
            "src": "281:15:23"
          },
          {
            "baseName": {
              "id": 13775,
              "name": "HubSpokeMessages",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9911,
              "src": "298:16:23"
            },
            "id": 13776,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:23"
          },
          {
            "baseName": {
              "id": 13777,
              "name": "SpokeGetters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14157,
              "src": "316:12:23"
            },
            "id": 13778,
            "nodeType": "InheritanceSpecifier",
            "src": "316:12:23"
          },
          {
            "baseName": {
              "id": 13779,
              "name": "SpokeSetters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14235,
              "src": "330:12:23"
            },
            "id": 13780,
            "nodeType": "InheritanceSpecifier",
            "src": "330:12:23"
          },
          {
            "baseName": {
              "id": 13781,
              "name": "SpokeUtilities",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14493,
              "src": "344:14:23"
            },
            "id": 13782,
            "nodeType": "InheritanceSpecifier",
            "src": "344:14:23"
          }
        ],
        "canonicalName": "Spoke",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          14070,
          14493,
          14235,
          14157,
          14266,
          9911,
          9991
        ],
        "name": "Spoke",
        "nameLocation": "272:5:23",
        "scope": 14071,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 23
}.abi;

const mumbaiBridgeAddress = "0x0CBE91CF822c73C2315FB05100C2F714765d5c20";
const mumbaiTokenBridgeAddress = "0x377D55a7928c046E18eEbb61977e714d2a76472a";
const LINK_TOKEN_ADDRESS = "0x326C977E6efc84E512bB9C30f76E30c160eD06FB";

export default function Home() {
  const [msg, setMsg] = useState("");
  const [input, setInput] = useState("");
  const [account, setAccount] = useState(null);
  const [vaa, setVAA] = useState("");
  const [txhash, setTXHash] = useState("0xb8a0e6a8a74512684ff87380147dddf25edbc10f7c2df0284fe92b14e498234e");

  useEffect(() => {
    // connectWallet();
    // getMessage();
  }, []);

  
  const connectWallet = async () => {
    if (window.ethereum) {
      let accounts = await window.ethereum.request({
        method: "eth_requestAccounts",
      });
      setAccount(accounts[0]);
    }
  };

  const setSpoke = async () => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        deployedContract,
        abi,
        signer
      );
      try {
        // register spoke on mumbai
        const response = await contract.registerSpoke(5, deployedSpoke);
        console.log(response);
      } catch (err) {
        console.log("ERROR", err);
      }
    }
  };

  const setAsset = async () => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        deployedContract,
        abi,
        signer
      );

      const kinks1 = [0, 1000000];
      const rates1 = [0, 0];

      try {
        const response = await contract.registerAsset(LINK_TOKEN_ADDRESS,
        1000000,
        1100000,
        1000000,
        kinks1,
        rates1,
        0, 
        1000000,
        "0xca80ba6dc32e08d06f1aa886011eed1d77c77be9eb761cc10d72b7d0a2fd57a6",
        {
          gasLimit: 1000000,
        });
        console.log(response);
      } catch (err) {
        console.log("ERROR", err);
      }
    }
  };

  const depositSpoke = async () => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        deployedSpoke,
        spokeABI,
        signer
      );

      try {
        // deposit matic on mumbai
        const response = await contract.depositCollateral(LINK_TOKEN_ADDRESS,
        1000000000000000);
        console.log(response);
        

        setTXHash(response.hash);

      } catch (err) {
        console.log("ERROR", err);
      }
    }
  };

  const getSequence = async (hash) => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        deployedContract,
        abi,
        signer
      );

      const kinks1 = [0, 1000000];
      const rates1 = [0, 0];

      try {
        console.log('freere')
        let receipt = await provider.getTransactionReceipt(hash);

    console.log(receipt);

      const emitterAddr = getEmitterAddressEth(mumbaiTokenBridgeAddress);
      const seq = parseSequenceFromLogEth(receipt, mumbaiBridgeAddress);
      const vaaURL = `https://wormhole-v2-testnet-api.certus.one/v1/signed_vaa/${5}/${emitterAddr}/${seq}`;
      console.log(vaaURL);
      let vaaBytes = await (await fetch(vaaURL)).json();
      while (!vaaBytes.vaaBytes) {
        console.log("VAA not found, retrying in 5s!");
        await new Promise((r) => setTimeout(r, 5000)); //Timeout to let Guardiand pick up log and have VAA ready
        vaaBytes = await (await fetch(vaaURL)).json();
      }
      console.log("VAA found!");
      console.log(vaaBytes);
      setVAA(vaaBytes.vaaBytes);
      } catch (err) {
        console.log("ERROR", err);
      }
    }
  }


  const confirmDeposit = async (vaa) => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        deployedContract,
        abi,
        signer
      );

      try {
        console.log(vaa)
        console.log(ethers.utils.isBytes(vaa))
        console.log(ethers.utils.isHexString(vaa))
        console.log(ethers.utils.isBytesLike(vaa))
        const newVAA = Buffer.from(vaa, "base64").toString("hex")
        console.log(newVAA)
        const response = await contract.completeDeposit(`0x${newVAA}`);
        console.log(response);
        console.log('done!')
        const assets = await contract.getTotalAssetsDeposited(LINK_TOKEN_ADDRESS);
        console.log(assets);
      } catch (err) {
        console.log("ERROR", err);
      }
    }
  };
  return (
    <div
      style={{
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center",
        height: "80vh",
      }}
    >
      <p>{msg}</p>

      <div
        style={{
          display: "flex",
          flexDirection: "column",
          alignItems: "flex-start",
        }}
      >
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
        />
      </div>
      <div
        style={{
          display: "flex",
          gap: "2rem",
          justifyContent: "center",
          paddingTop: "1rem",
        }}
      >
        <button onClick={setSpoke}>set spoke</button>
        <button onClick={setAsset}>set asset</button>

        <button onClick={depositSpoke}>deposit spoke</button>

        <button onClick={() => getSequence(txhash)}>get sequence</button>
        <button onClick={() => confirmDeposit(vaa)}>confirm deposit</button>

        {/* <button onClick={getMessage}>get message</button> */}
      </div>
    </div>
  );
}
